{"ast":null,"code":"import * as THREE from 'three';\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport fragmentShader from '../assets/shaders/fragment-shader.glsl';\nimport vertexShader from '../assets/shaders/vertex-shader.glsl';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./main/main.component\";\nimport * as i2 from \"@angular/router\";\nconst _c0 = [\"dom\"];\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    constructor() {\n      this.texture = new THREE.TextureLoader().load('../assets/images/flower01.jpg');\n      this.time = 0;\n      this.scene = new THREE.Scene();\n      this.camera = new THREE.PerspectiveCamera(70, window.innerWidth / window.innerHeight, 100, 2000);\n      this.camera.position.z = 600;\n      this.camera.fov = 2 * Math.atan(window.innerHeight / 2 / 600) * (180 / Math.PI);\n      this.renderer = new THREE.WebGLRenderer({\n        antialias: true,\n        alpha: true\n      });\n      this.controls = new OrbitControls(this.camera, this.renderer.domElement);\n      this.addImages();\n      this.resize();\n      this.setupResize();\n      this.addObjects();\n      this.render();\n    }\n\n    ngOnInit() {\n      this.onPageLoad(this.options);\n    }\n\n    ngAfterViewInit() {\n      this.renderer.setSize(window.innerWidth, window.innerHeight);\n      this.dom.nativeElement.appendChild(this.renderer.domElement); // this.animate();\n    }\n\n    onPageLoad(options) {// this.dom.nativeElement.getElementById('dom');\n      // this.dom = options.dom;\n    }\n\n    setupResize() {\n      window.addEventListener('resize', this.resize.bind(this));\n    }\n\n    resize() {\n      this.renderer.setSize(window.innerWidth, window.innerHeight);\n      this.camera.aspect = window.innerWidth / window.innerHeight;\n      this.camera.updateProjectionMatrix();\n    }\n\n    addImages() {\n      this.images = [document.querySelectorAll('img')];\n      this.imageStore = this.images.map(img => {\n        let bound = img.getBoundingClientRect();\n        console.log(bound);\n      });\n    }\n\n    addObjects() {\n      this.geometry = new THREE.PlaneBufferGeometry(100, 100, 10, 10); // this.geometry = new THREE.SphereBufferGeometry( 0.4, 40, 40 );\n\n      this.material = new THREE.MeshNormalMaterial();\n      this.material = new THREE.ShaderMaterial({\n        uniforms: {\n          time: {\n            value: 0\n          },\n          imageTexture: {\n            value: this.texture\n          }\n        },\n        side: THREE.DoubleSide,\n        fragmentShader: fragmentShader,\n        vertexShader: vertexShader,\n        wireframe: true\n      });\n      this.mesh = new THREE.Mesh(this.geometry, this.material);\n      this.scene.add(this.mesh);\n    }\n\n    render() {\n      this.time += 0.5; // this.mesh.rotation.x = this.time / 1000;\n      // this.mesh.rotation.y = this.time / 1000;\n\n      this.material.uniforms.time.value = this.time;\n      this.renderer.render(this.scene, this.camera);\n      window.requestAnimationFrame(this.render.bind(this));\n    }\n\n  }\n\n  AppComponent.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)();\n  };\n\n  AppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    viewQuery: function AppComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 7);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dom = _t.first);\n      }\n    },\n    decls: 4,\n    vars: 0,\n    consts: [[\"id\", \"dom\"], [\"dom\", \"\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"div\", 0, 1);\n        i0.ɵɵelement(2, \"app-main\");\n        i0.ɵɵelement(3, \"router-outlet\");\n      }\n    },\n    directives: [i1.MainComponent, i2.RouterOutlet],\n    styles: [\"#dom[_ngcontent-%COMP%]{width:100vw;position:fixed;z-index:-1;top:0;left:0}*[_ngcontent-%COMP%]{margin:0;padding:0}\"]\n  });\n  return AppComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}