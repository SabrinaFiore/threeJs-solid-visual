{"ast":null,"code":"import * as THREE from 'three';\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport fragmentShader from '../assets/shaders/fragment-shader.glsl';\nimport vertexShader from '../assets/shaders/vertex-shader.glsl';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./scene/scene.component\";\nimport * as i2 from \"@angular/router\";\nconst _c0 = [\"dom\"];\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    constructor() {\n      this.texture = new THREE.TextureLoader().load('../assets/images/flower01.jpg');\n      this.time = 0;\n      this.scene = new THREE.Scene();\n      this.camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.01, 10);\n      this.camera.position.z = 1;\n      this.renderer = new THREE.WebGLRenderer({\n        antialias: true\n      });\n      this.controls = new OrbitControls(this.camera, this.renderer.domElement);\n      this.resize();\n      this.setupResize();\n      this.addObjects();\n      this.render();\n    }\n\n    ngOnInit() {\n      this.onPageLoad(this.options);\n    }\n\n    ngAfterViewInit() {\n      this.renderer.setSize(window.innerWidth, window.innerHeight);\n      this.dom.nativeElement.appendChild(this.renderer.domElement); // this.animate();\n    }\n\n    onPageLoad(options) {// this.dom.nativeElement.getElementById('dom');\n      // this.dom = options.dom;\n    }\n\n    setupResize() {\n      window.addEventListener('resize', this.resize.bind(this));\n    }\n\n    resize() {\n      this.renderer.setSize(window.innerWidth, window.innerHeight);\n      this.camera.aspect = window.innerWidth / window.innerHeight;\n      this.camera.updateProjectionMatrix();\n    }\n\n    addObjects() {\n      this.geometry = new THREE.PlaneBufferGeometry(1.5, 1, 150, 150);\n      this.geometry = new THREE.SphereBufferGeometry(0.4, 40, 40);\n      this.material = new THREE.MeshNormalMaterial();\n      this.material = new THREE.ShaderMaterial({\n        uniforms: {\n          time: {\n            value: 0\n          },\n          imageTexture: {\n            value: this.texture\n          }\n        },\n        side: THREE.DoubleSide,\n        fragmentShader: fragmentShader,\n        vertexShader: vertexShader,\n        wireframe: true\n      });\n      this.mesh = new THREE.Mesh(this.geometry, this.material);\n      this.scene.add(this.mesh);\n    }\n\n    render() {\n      this.time += 0.5;\n      this.mesh.rotation.x = this.time / 1000;\n      this.mesh.rotation.y = this.time / 1000;\n      this.material.uniforms.time.value = this.time;\n      this.renderer.render(this.scene, this.camera);\n      window.requestAnimationFrame(this.render.bind(this));\n    }\n\n  }\n\n  AppComponent.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)();\n  };\n\n  AppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    viewQuery: function AppComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 7);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dom = _t.first);\n      }\n    },\n    decls: 4,\n    vars: 0,\n    consts: [[\"id\", \"dom\"], [\"dom\", \"\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"div\", 0, 1);\n        i0.ɵɵelement(2, \"app-scene\");\n        i0.ɵɵelement(3, \"router-outlet\");\n      }\n    },\n    directives: [i1.SceneComponent, i2.RouterOutlet],\n    styles: [\"#dom[_ngcontent-%COMP%]{width:100vw;height:100vh}*[_ngcontent-%COMP%]{margin:0;padding:0}body[_ngcontent-%COMP%]{font-family:\\\"Open Sans\\\",sans-serif}.page[_ngcontent-%COMP%]{width:min(90%,1200px);margin:0 auto}header[_ngcontent-%COMP%]{margin-bottom:5em;position:relative}h1[_ngcontent-%COMP%]{font-size:260px;line-height:1;padding:.5em 0;text-align:center;position:absolute;left:50%;top:50%;transform:translate(-50%,-50%);color:#047582;mix-blend-mode:color-burn;font-size:18vw}header[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{max-width:100%;display:block}h1[_ngcontent-%COMP%], h2[_ngcontent-%COMP%]{font-family:\\\"Playfair Display\\\",serif;font-weight:normal}.grid[_ngcontent-%COMP%]{display:grid;grid-template-columns:1fr 1fr;grid-gap:2em 0}.item[_ngcontent-%COMP%]{align-self:center;justify-self:center;text-decoration:none;color:#333}.item[_ngcontent-%COMP%]:nth-child(odd){justify-self:start}.item[_ngcontent-%COMP%]:nth-child(even){justify-self:end}.item[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:100%;display:block;opacity:0}.item__image[_ngcontent-%COMP%]{position:relative;margin-bottom:.6em}.item__meta[_ngcontent-%COMP%]{position:absolute;left:-.4em;bottom:.4em;transform-origin:0 100%;transform:rotate(-90deg);text-transform:uppercase;font-size:80%}.item__title[_ngcontent-%COMP%]{font-size:40px;line-height:1.2;margin-bottom:.4em}.item_p[_ngcontent-%COMP%]{line-height:1.4;font-size:1em}.item_h[_ngcontent-%COMP%]{width:100%}.item_v[_ngcontent-%COMP%]{width:80%}.footer[_ngcontent-%COMP%]{border-top:1px solid #ccc;font-size:15px;display:flex;margin-top:8em;line-height:1.5;padding:1em 0 4em}.footer[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{color:#333}.footer[_ngcontent-%COMP%]   p[_ngcontent-%COMP%] + p[_ngcontent-%COMP%]{margin-left:auto;text-align:right}@media screen and (max-width: 600px){.grid[_ngcontent-%COMP%]{display:block}.item_v[_ngcontent-%COMP%], .item_h[_ngcontent-%COMP%]{width:auto;margin-bottom:3em}.item[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:100%;max-width:none}}#container[_ngcontent-%COMP%]{height:100vh;width:100vw;position:fixed;z-index:-1;top:0;left:0}\"]\n  });\n  return AppComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}