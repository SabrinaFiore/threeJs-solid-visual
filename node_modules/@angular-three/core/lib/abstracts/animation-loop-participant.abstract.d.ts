import { EventEmitter, NgZone, OnDestroy } from '@angular/core';
import { AnimationStore } from '../stores';
import type { AnimationReady } from '../typings';
import * as i0 from "@angular/core";
export declare abstract class AnimationLoopParticipant<TObject = unknown> implements OnDestroy {
    protected readonly animationStore: AnimationStore;
    protected readonly ngZone: NgZone;
    animateReady: EventEmitter<AnimationReady<TObject>>;
    private animateTeardown?;
    protected constructor(animationStore: AnimationStore, ngZone: NgZone);
    protected participate(animateObject: TObject): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<AnimationLoopParticipant<any>, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<AnimationLoopParticipant<any>, never, never, {}, { "animateReady": "animateReady"; }, never>;
}
