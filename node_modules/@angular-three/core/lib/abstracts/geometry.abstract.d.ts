import { NgZone, OnDestroy, OnInit } from '@angular/core';
import type { BufferGeometry } from 'three';
import { InstancesStore } from '../stores';
import type { AnyConstructor } from '../typings';
import * as i0 from "@angular/core";
export declare abstract class ThreeBufferGeometry<TGeometry extends BufferGeometry = BufferGeometry> implements OnInit, OnDestroy {
    protected readonly instancesStore: InstancesStore;
    private readonly ngZone;
    ngtId?: string;
    constructor(instancesStore: InstancesStore, ngZone: NgZone);
    abstract geometryType: AnyConstructor<TGeometry>;
    private _extraArgs;
    protected set extraArgs(v: unknown[]);
    ngOnInit(): void;
    private init;
    private _bufferGeometry;
    get bufferGeometry(): TGeometry;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<ThreeBufferGeometry<any>, [{ skipSelf: true; }, null]>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<ThreeBufferGeometry<any>, never, never, { "ngtId": "ngtId"; }, {}, never>;
}
