import type { QueryList } from '@angular/core';
import { Mesh } from 'three';
import type { AnyConstructor } from '../typings';
import { ThreeBufferGeometry } from './geometry.abstract';
import { ThreeMaterial } from './material.abstract';
import { ThreeObject3dMaterialGeometry } from './object-3d-material-geometry.abstract';
import * as i0 from "@angular/core";
export declare abstract class ThreeMesh<TMesh extends Mesh = Mesh> extends ThreeObject3dMaterialGeometry<TMesh> {
    set materialDirectives(v: QueryList<ThreeMaterial>);
    set bufferGeometryDirective(v: ThreeBufferGeometry);
    abstract meshType: AnyConstructor<TMesh>;
    get objectType(): AnyConstructor<TMesh>;
    static ɵfac: i0.ɵɵFactoryDeclaration<ThreeMesh<any>, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<ThreeMesh<any>, never, never, {}, {}, ["bufferGeometryDirective", "materialDirectives"]>;
}
