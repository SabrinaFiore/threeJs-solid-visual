import { AfterContentInit } from '@angular/core';
import { Sprite, SpriteMaterial } from 'three';
import { AnyConstructor } from '../typings';
import { ThreeMaterial } from './material.abstract';
import { ThreeObject3d } from './object-3d.abstract';
import * as i0 from "@angular/core";
export declare abstract class ThreeSprite<TSprite extends Sprite = Sprite> extends ThreeObject3d<TSprite> implements AfterContentInit {
    material?: SpriteMaterial;
    materialDirective?: ThreeMaterial;
    abstract spriteType: AnyConstructor<TSprite>;
    private _sprite;
    ngAfterContentInit(): void;
    protected initObject(): void;
    get object3d(): TSprite;
    static ɵfac: i0.ɵɵFactoryDeclaration<ThreeSprite<any>, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<ThreeSprite<any>, never, never, { "material": "material"; }, {}, ["materialDirective"]>;
}
