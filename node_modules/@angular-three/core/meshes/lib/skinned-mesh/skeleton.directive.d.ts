import { ThreeMatrix4, ThreeObject3d } from '@angular-three/core';
import type { QueryList } from '@angular/core';
import { EventEmitter, NgZone, OnInit } from '@angular/core';
import { Skeleton } from 'three';
import { BoneDirective } from './bone.directive';
import * as i0 from "@angular/core";
export declare class SkeletonDirective implements OnInit {
    private readonly ngZone;
    private readonly hostObject?;
    boneInverses?: ThreeMatrix4[];
    ready: EventEmitter<Skeleton>;
    bones?: QueryList<BoneDirective>;
    constructor(ngZone: NgZone, hostObject?: ThreeObject3d<import("three").Object3D<import("three").Event>> | undefined);
    private _skeleton;
    ngOnInit(): void;
    get skeleton(): Skeleton;
    static ɵfac: i0.ɵɵFactoryDeclaration<SkeletonDirective, [null, { optional: true; skipSelf: true; }]>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<SkeletonDirective, "ngt-skeleton", ["ngtSkeleton"], { "boneInverses": "boneInverses"; }, { "ready": "ready"; }, ["bones"]>;
}
