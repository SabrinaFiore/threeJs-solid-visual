{"version":3,"file":"angular-three-core.js","sources":["../../../../packages/core/src/lib/utils/make-id.util.ts","../../../../packages/core/src/lib/utils/events.util.ts","../../../../packages/core/src/lib/utils/apply-props.util.ts","../../../../packages/core/src/lib/stores/imperative-component-store.abstract.ts","../../../../packages/core/src/lib/stores/animation.store.ts","../../../../packages/core/src/lib/stores/canvas.store.ts","../../../../packages/core/src/lib/stores/instances.store.ts","../../../../packages/core/src/lib/stores/events.store.ts","../../../../packages/core/src/lib/services/loop.service.ts","../../../../packages/core/src/lib/services/destroyed.service.ts","../../../../packages/core/src/lib/services/loader.service.ts","../../../../packages/core/src/lib/canvas.component.ts","../../../../packages/core/src/lib/controllers/controller.abstract.ts","../../../../packages/core/src/lib/controllers/object-3d-controller.directive.ts","../../../../packages/core/src/lib/core.module.ts","../../../../packages/core/src/lib/di/object-3d-watched-controller.di.ts","../../../../packages/core/src/lib/abstracts/animation-loop-participant.abstract.ts","../../../../packages/core/src/lib/abstracts/object-3d.abstract.ts","../../../../packages/core/src/lib/abstracts/object-3d-material-geometry.abstract.ts","../../../../packages/core/src/lib/abstracts/material.abstract.ts","../../../../packages/core/src/lib/abstracts/texture.abstract.ts","../../../../packages/core/src/lib/abstracts/light.abstract.ts","../../../../packages/core/src/lib/abstracts/helper.abstract.ts","../../../../packages/core/src/lib/abstracts/geometry.abstract.ts","../../../../packages/core/src/lib/abstracts/curve.abstract.ts","../../../../packages/core/src/lib/abstracts/attribute.abstract.ts","../../../../packages/core/src/lib/abstracts/line.abstract.ts","../../../../packages/core/src/lib/abstracts/mesh.abstract.ts","../../../../packages/core/src/lib/abstracts/sprite.abstract.ts","../../../../packages/core/src/lib/abstracts/camera.abstract.ts","../../../../packages/core/src/lib/primitive/primitive.directive.ts","../../../../packages/core/src/lib/primitive/primitive.module.ts","../../../../packages/core/src/lib/pipes/math/math.pipe.ts","../../../../packages/core/src/lib/pipes/math/math.module.ts","../../../../packages/core/src/lib/pipes/math-constant/math-constant.pipe.ts","../../../../packages/core/src/lib/pipes/math-constant/math-constant.module.ts","../../../../packages/core/src/lib/pipes/color/color.pipe.ts","../../../../packages/core/src/lib/pipes/color/color.module.ts","../../../../packages/core/src/lib/pipes/fog/fog.pipe.ts","../../../../packages/core/src/lib/pipes/fog/fog.module.ts","../../../../packages/core/src/lib/directives/repeat/repeat.directive.ts","../../../../packages/core/src/lib/directives/repeat/repeat.module.ts","../../../../packages/core/src/angular-three-core.ts"],"sourcesContent":["import type { ThreeIntersection } from '../typings';\n\n/**\n * Generate a random Id or an Event's uuid\n *\n * @param {ThreeIntersection} event\n *\n * @internal\n * @private\n */\nexport function makeId(event?: ThreeIntersection) {\n  if (event) {\n    return (event.eventObject || event.object).uuid + '/' + event.index;\n  }\n\n  return id();\n}\n\nconst cache: { [id: string]: boolean | undefined } = {};\n\n/**\n * Generates a short id.\n *\n * Description:\n *  A 5-character alphanumeric sequence (364 = 1.6 million)\n *  This should only be used for JavaScript specific models.\n *  http://stackoverflow.com/questions/6248666/how-to-generate-short-uid-like-ax4j9z-in-js\n *\n *  Example: `aebgf`\n */\nexport function id(): string {\n  let newId = (\n    '0000' + ((Math.random() * Math.pow(36, 4)) << 0).toString(36)\n  ).slice(-4);\n\n  newId = `a${newId}`;\n\n  // ensure not already used\n  if (!cache[newId]) {\n    cache[newId] = true;\n    return newId;\n  }\n\n  return id();\n}\n","import type { Object3D } from 'three';\nimport { Vector3 } from 'three';\nimport type {\n  CanvasStoreState,\n  EventHandlers,\n  EventsStoreState,\n  InstanceInternal,\n  InstancesStoreState,\n  ThreeDomEvent,\n  ThreeEvent,\n  ThreeInstance,\n  ThreeIntersection,\n  UnknownRecord,\n} from '../typings';\nimport { makeId } from './make-id.util';\n\n/**\n * From r3f https://github.com/pmndrs/react-three-fiber/blob/master/packages/fiber/src/core/events.ts\n */\nexport function createEvents(\n  canvasStateGetter: () => CanvasStoreState,\n  eventsStateGetter: () => EventsStoreState,\n  instancesStateGetter: () => InstancesStoreState\n) {\n  const temp = new Vector3();\n\n  /** Sets up defaultRaycaster */\n  function prepareRay(event: ThreeDomEvent) {\n    const {\n      raycaster,\n      mouse,\n      camera,\n      clock,\n      renderer,\n      scene,\n      internal: { size, viewport },\n    } = canvasStateGetter();\n    const delta = clock.getDelta();\n    if (raycaster && camera && renderer && scene) {\n      const { offsetX, offsetY } =\n        raycaster.computeOffsets?.(event, {\n          camera,\n          clock,\n          size,\n          viewport,\n          renderer,\n          scene,\n          delta,\n          mouse,\n        }) ?? event;\n      const { width, height } = size;\n      mouse.set((offsetX / width) * 2 - 1, -(offsetY / height) * 2 + 1);\n      raycaster.setFromCamera(mouse, camera);\n    }\n  }\n\n  /** Calculates delta */\n  function calculateDistance(event: ThreeDomEvent) {\n    const {\n      internal: { initialClick },\n    } = eventsStateGetter();\n    const dx = event.offsetX - initialClick[0];\n    const dy = event.offsetY - initialClick[1];\n    return Math.round(Math.sqrt(dx * dx + dy * dy));\n  }\n\n  /** Returns true if an instance has a valid pointer-event registered, this excludes scroll, clicks etc */\n  function filterPointerEvents(objects: Object3D[]) {\n    return objects.filter((obj) =>\n      ['move', 'over', 'enter', 'out', 'leave'].some(\n        (name) =>\n          (obj as unknown as ThreeInstance).__ngt?.handlers?.[\n            ('pointer' + name) as keyof InstanceInternal['handlers']\n          ]\n      )\n    );\n  }\n\n  function intersect(filter?: (objects: Object3D[]) => Object3D[]) {\n    const { raycaster } = canvasStateGetter();\n    const { objects } = instancesStateGetter();\n    // Skip event handling when noEvents is set\n    if (!raycaster || (raycaster && !raycaster.enabled)) return [];\n\n    const seen = new Set<string>();\n    const intersections: ThreeIntersection[] = [];\n\n    // Allow callers to eliminate event objects\n    const eventsObjects = filter\n      ? filter(Object.values(objects))\n      : Object.values(objects);\n\n    // Intersect known handler objects and filter against duplicates\n    const intersects = raycaster\n      .intersectObjects(eventsObjects, true)\n      .filter((item) => {\n        const id = makeId(item as ThreeIntersection);\n        if (seen.has(id)) return false;\n        seen.add(id);\n        return true;\n      });\n\n    // https://github.com/mrdoob/three.js/issues/16031\n    // Allow custom userland intersect sort order\n    // if (raycaster.filter) intersects = raycaster.filter(intersects, state);\n\n    for (const intersect of intersects) {\n      let eventObject: Object3D | null = intersect.object;\n      // Bubble event up\n      while (eventObject) {\n        const handlers = (eventObject as unknown as ThreeInstance).__ngt\n          ?.handlers;\n        if (handlers) intersections.push({ ...intersect, eventObject });\n        eventObject = eventObject.parent;\n      }\n    }\n    return intersections;\n  }\n\n  /**  Creates filtered intersects and returns an array of positive hits */\n  function patchIntersects(\n    intersections: ThreeIntersection[],\n    event: ThreeDomEvent\n  ) {\n    const {\n      internal: { capturedMap },\n    } = eventsStateGetter();\n    // If the interaction is captured take that into account, the captured event has to be part of the intersects\n    if ('pointerId' in event && capturedMap.has(event.pointerId)) {\n      intersections.push(...capturedMap.get(event.pointerId)!.values());\n    }\n\n    return intersections;\n  }\n\n  /**  Handles intersections by forwarding them to handlers */\n  function handleIntersects(\n    intersections: ThreeIntersection[],\n    event: ThreeDomEvent,\n    callback: (event: ThreeDomEvent) => void\n  ) {\n    const { raycaster, mouse, camera } = canvasStateGetter();\n    const { internal: eventsInternal } = eventsStateGetter();\n    // If anything has been found, forward it to the event listeners\n    if (intersections.length && camera) {\n      const unprojectedPoint = temp.set(mouse.x, mouse.y, 0).unproject(camera);\n      const delta = event.type === 'click' ? calculateDistance(event) : 0;\n      const releasePointerCapture = (id: number) =>\n        (event.target as Element).releasePointerCapture(id);\n      const localState = { stopped: false };\n\n      for (const hit of intersections) {\n        const hasPointerCapture = (id: number) =>\n          eventsInternal.capturedMap.get(id)?.has(hit.eventObject) ?? false;\n\n        const setPointerCapture = (id: number) => {\n          if (eventsInternal.capturedMap.has(id)) {\n            // if the pointerId was previously captured, we add the hit to the\n            // event capturedMap.\n            eventsInternal.capturedMap.get(id)!.set(hit.eventObject, hit);\n          } else {\n            // if the pointerId was not previously captured, we create a map\n            // containing the hitObject, and the hit. hitObject is used for\n            // faster access.\n            eventsInternal.capturedMap.set(\n              id,\n              new Map([[hit.eventObject, hit]])\n            );\n          }\n\n          // Call the original event now\n          (event.target as Element).setPointerCapture(id);\n        };\n\n        // Add native event props\n        const extractEventProps: UnknownRecord = {};\n        for (const prop in Object.getPrototypeOf(event)) {\n          // noinspection JSUnfilteredForInLoop\n          const property = event[prop as keyof ThreeDomEvent];\n          // Only copy over atomics, leave functions alone as these should be\n          // called as event.nativeEvent.fn()\n          if (typeof property !== 'function') {\n            // noinspection JSUnfilteredForInLoop\n            extractEventProps[prop] = property;\n          }\n        }\n\n        const raycastEvent = {\n          ...hit,\n          ...extractEventProps,\n          spaceX: mouse.x,\n          spaceY: mouse.y,\n          intersections,\n          stopped: localState.stopped,\n          delta,\n          unprojectedPoint,\n          ray: raycaster ? raycaster.ray : null,\n          camera,\n          // Hijack stopPropagation, which just sets a flag\n          stopPropagation: () => {\n            // https://github.com/pmndrs/react-three-fiber/issues/596\n            // Events are not allowed to stop propagation if the pointer has been captured\n            const capturesForPointer =\n              'pointerId' in event &&\n              eventsInternal.capturedMap.get(event.pointerId);\n\n            // We only authorize stopPropagation...\n            if (\n              // ...if this pointer hasn't been captured\n              !capturesForPointer ||\n              // ... or if the hit object is capturing the pointer\n              capturesForPointer.has(hit.eventObject)\n            ) {\n              raycastEvent.stopped = localState.stopped = true;\n              // Propagation is stopped, remove all other hover records\n              // An event handler is only allowed to flush other handlers if it is hovered itself\n              if (\n                eventsInternal.hovered.size &&\n                Array.from(eventsInternal.hovered.values()).find(\n                  (i) => i.eventObject === hit.eventObject\n                )\n              ) {\n                // Objects cannot flush out higher up objects that have already caught the event\n                const higher = intersections.slice(\n                  0,\n                  intersections.indexOf(hit)\n                );\n                cancelPointer([...higher, hit]);\n              }\n            }\n          },\n          target: {\n            ...event.target,\n            setPointerCapture,\n            releasePointerCapture,\n            hasPointerCapture,\n          },\n          currentTarget: {\n            ...event.currentTarget,\n            setPointerCapture,\n            releasePointerCapture,\n            hasPointerCapture,\n          },\n          sourceEvent: event,\n          nativeEvent: event,\n        };\n\n        // Call subscribers\n        callback(raycastEvent as unknown as ThreeDomEvent);\n        // Event bubbling may be interrupted by stopPropagation\n        if (localState.stopped) break;\n      }\n    }\n    return intersections;\n  }\n\n  function cancelPointer(hits: ThreeIntersection[]) {\n    const { internal } = eventsStateGetter();\n    Array.from(internal.hovered.values()).forEach((hoveredObj) => {\n      // When no objects were hit or the the hovered object wasn't found underneath the cursor\n      // we call onPointerOut and delete the object from the hovered-elements map\n      if (\n        !hits.length ||\n        !hits.find(\n          (hit) =>\n            hit.object === hoveredObj.object && hit.index === hoveredObj.index\n        )\n      ) {\n        const eventObject = hoveredObj.eventObject;\n        const handlers = (eventObject as unknown as ThreeInstance).__ngt\n          ?.handlers;\n        internal.hovered.delete(makeId(hoveredObj));\n        if (handlers) {\n          // Clear out intersects, they are outdated by now\n          const data = { ...hoveredObj, intersections: hits || [] };\n          handlers.pointerout?.(data as ThreeEvent<PointerEvent>);\n          handlers.pointerleave?.(data as ThreeEvent<PointerEvent>);\n        }\n      }\n    });\n  }\n\n  const handlePointer = (name: string) => {\n    // Deal with cancellation\n    switch (name) {\n      case 'pointerleave':\n      case 'pointercancel':\n        return () => cancelPointer([]);\n      case 'lostpointercapture':\n        return (event: ThreeDomEvent) => {\n          if ('pointerId' in event) {\n            // this will be a problem if one target releases the pointerId\n            // and another one is still keeping it, as the line below\n            // indifferently deletes all capturing references.\n            const {\n              internal: { capturedMap },\n            } = eventsStateGetter();\n            capturedMap.delete(event.pointerId);\n          }\n        };\n    }\n\n    // Any other pointer goes here ...\n    return (event: ThreeDomEvent) => {\n      const { internal } = eventsStateGetter();\n      const { objects } = instancesStateGetter();\n\n      prepareRay(event);\n\n      // Get fresh intersects\n      const isPointerMove = name === 'pointermove';\n      const filter = isPointerMove ? filterPointerEvents : undefined;\n      const hits = patchIntersects(intersect(filter), event);\n\n      // Take care of unhover\n      if (isPointerMove) cancelPointer(hits);\n\n      handleIntersects(hits, event, (data: ThreeDomEvent) => {\n        const eventObject = data.eventObject;\n        const handlers = (eventObject as unknown as ThreeInstance).__ngt\n          ?.handlers;\n        // Check presence of handlers\n        if (!handlers) return;\n\n        if (isPointerMove) {\n          // Move event ...\n          if (\n            handlers.pointerover ||\n            handlers.pointerenter ||\n            handlers.pointerout ||\n            handlers.pointerleave\n          ) {\n            // When enter or out is present take care of hover-state\n            const id = makeId(data);\n            const hoveredItem = internal.hovered.get(id);\n            if (!hoveredItem) {\n              // If the object wasn't previously hovered, book it and call its handler\n              internal.hovered.set(id, data);\n              handlers.pointerover?.(data as ThreeEvent<PointerEvent>);\n              handlers.pointerenter?.(data as ThreeEvent<PointerEvent>);\n            } else if (hoveredItem.stopped) {\n              // If the object was previously hovered and stopped, we shouldn't allow other items to proceed\n              data.stopPropagation();\n            }\n          }\n          // Call mouse move\n          handlers.pointermove?.(data as ThreeEvent<PointerEvent>);\n        } else {\n          // All other events ...\n          const handler = handlers?.[name as keyof EventHandlers] as (\n            event: ThreeEvent<PointerEvent>\n          ) => void;\n          if (handler) {\n            // Forward all events back to their respective handlers with the exception of click events,\n            // which must use the initial target\n            if (\n              (name !== 'click' &&\n                name !== 'contextmenu' &&\n                name !== 'dblclick') ||\n              internal.initialHits.includes(eventObject)\n            ) {\n              handler(data as ThreeEvent<PointerEvent>);\n              pointerMissed(\n                event,\n                Object.values(objects).filter(\n                  (object) => object !== eventObject\n                )\n              );\n            }\n          }\n        }\n      });\n\n      // Save initial coordinates on pointer-down\n      if (name === 'pointerdown') {\n        internal.initialClick = [event.offsetX, event.offsetY];\n        internal.initialHits = hits.map((hit) => hit.eventObject);\n      }\n\n      // If a click yields no results, pass it back to the user as a miss\n      if (\n        (name === 'click' || name === 'contextmenu' || name === 'dblclick') &&\n        !hits.length\n      ) {\n        if (calculateDistance(event) <= 2) {\n          pointerMissed(event, Object.values(objects));\n          // if (onPointerMissed) onPointerMissed();\n        }\n      }\n    };\n  };\n\n  function pointerMissed(event: MouseEvent, objects: Object3D[]) {\n    objects.forEach((object: Object3D) =>\n      (object as unknown as ThreeInstance).__ngt?.handlers?.pointermissed?.(\n        event as ThreeEvent<PointerEvent>\n      )\n    );\n  }\n\n  return { handlePointer };\n}\n","import type {\n  InstanceInternal,\n  ThreeInstance,\n  UnknownRecord,\n} from '../typings';\n\nfunction applyDottedPathProps(\n  instance: ThreeInstance,\n  key: string,\n  propAtKey: unknown,\n  isRoot = true\n) {\n  const [first, ...paths] = key.split('.');\n  const rootChild = (instance as unknown as UnknownRecord)[first];\n  if (rootChild == null) {\n    return;\n  }\n\n  if (paths.length >= 1) {\n    applyDottedPathProps(\n      rootChild as unknown as ThreeInstance,\n      paths.join('.'),\n      propAtKey,\n      false\n    );\n  } else {\n    (instance as unknown as UnknownRecord)[first] = propAtKey;\n  }\n\n  if (isRoot) {\n    checkNeedsUpdate(rootChild);\n  }\n}\n\nfunction checkNeedsUpdate(value: unknown) {\n  if (typeof value === 'object' && 'needsUpdate' in (value as UnknownRecord)) {\n    (value as UnknownRecord)['needsUpdate'] = true;\n  }\n}\n\n/**\n * Apply props on instances\n *\n * @internal\n * @private\n */\nexport function applyProps(instance: ThreeInstance, props?: UnknownRecord) {\n  if (!props || (props && !Object.keys(props).length)) return;\n\n  if ('__ngt' in props) {\n    instance['__ngt'] = props['__ngt'] as InstanceInternal;\n  }\n\n  const unknownInstance = instance as unknown as UnknownRecord;\n\n  if (\n    unknownInstance['set'] != null &&\n    typeof unknownInstance['set'] === 'function'\n  ) {\n    (unknownInstance['set'] as Function)(props);\n  }\n\n  for (const [key, propAtKey] of Object.entries(props)) {\n    if (key.split('.').length > 1) {\n      applyDottedPathProps(instance, key, propAtKey);\n    } else {\n      const threeInstancePropAtKey = unknownInstance[key] as UnknownRecord;\n      if (threeInstancePropAtKey == null) {\n        unknownInstance[key] = propAtKey;\n      } else {\n        if (\n          threeInstancePropAtKey['set'] != null &&\n          typeof threeInstancePropAtKey['set'] === 'function'\n        ) {\n          if (Array.isArray(propAtKey)) {\n            if (\n              threeInstancePropAtKey['fromArray'] != null &&\n              typeof threeInstancePropAtKey['fromArray'] === 'function'\n            ) {\n              threeInstancePropAtKey['fromArray'](propAtKey);\n            } else {\n              threeInstancePropAtKey['set'](...propAtKey);\n            }\n          } else {\n            threeInstancePropAtKey['set'](propAtKey);\n          }\n        } else {\n          unknownInstance[key] = propAtKey;\n        }\n      }\n      checkNeedsUpdate(propAtKey);\n    }\n  }\n}\n","import { ComponentStore } from '@ngrx/component-store';\n\nexport abstract class ImperativeComponentStore<\n  T extends object\n> extends ComponentStore<T> {\n  getImperativeState(): T {\n    return this.get();\n  }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { isObservable, Observable } from 'rxjs';\nimport { filter, skip, tap, withLatestFrom } from 'rxjs/operators';\nimport type { Object3D } from 'three';\nimport type {\n  AnimationCallback,\n  AnimationStoreState,\n  RenderState,\n} from '../typings';\nimport { makeId } from '../utils';\nimport { ImperativeComponentStore } from './imperative-component-store.abstract';\n\n@Injectable()\nexport class AnimationStore\n  extends ImperativeComponentStore<AnimationStoreState>\n  implements OnDestroy\n{\n  constructor() {\n    super({\n      animations: {},\n      objectSubscriptions: [],\n      animationCallbacks: [],\n      hasPriority: false,\n    });\n\n    this.animationsChangedEffect(\n      this.select((s) => s.animations).pipe(skip(1))\n    );\n  }\n\n  readonly animationsChangedEffect = this.effect<\n    AnimationStoreState['animations']\n  >((animations$) =>\n    animations$.pipe(\n      tap((animations) => {\n        const animationCallbacks = Object.values(animations);\n        const hasPriority = animationCallbacks.some(\n          ({ priority }) => !!priority\n        );\n        this.patchState({ animationCallbacks, hasPriority });\n      })\n    )\n  );\n\n  readonly unregisterAnimationEffect = this.effect<string>((uuid$) =>\n    uuid$.pipe(\n      withLatestFrom(this.state$),\n      tap(\n        ([uuid, { animations, objectSubscriptions }]: [\n          string,\n          AnimationStoreState\n        ]) => {\n          const subscription = objectSubscriptions.find(\n            ([objectUuid]) => objectUuid === uuid\n          );\n          if (subscription) {\n            subscription[1].unsubscribe();\n          }\n\n          const { [uuid]: _, ...updatedAnimations } = animations;\n          this.patchState({\n            animations: updatedAnimations,\n            objectSubscriptions: objectSubscriptions.filter(\n              ([objectUuid]) => objectUuid !== uuid\n            ),\n          });\n        }\n      )\n    )\n  );\n\n  readonly clearEffect = this.effect((trigger$) =>\n    trigger$.pipe(\n      tap(() => {\n        this.patchState((state) => {\n          state.objectSubscriptions.forEach(([, subscription]) =>\n            subscription.unsubscribe()\n          );\n          return { animations: {}, objectSubscriptions: [] };\n        });\n      })\n    )\n  );\n\n  registerAnimation<TObject3d extends Object3D = Object3D>(\n    obj: TObject3d,\n    callback: AnimationCallback<TObject3d>,\n    priority?: number\n  ): () => void;\n  registerAnimation<TObject3d extends Object3D = Object3D>(\n    obs: Observable<TObject3d | null>,\n    callback: AnimationCallback<TObject3d>,\n    priority?: number\n  ): () => void;\n  registerAnimation(callback: AnimationCallback, priority?: number): () => void;\n  registerAnimation<TObject3d extends Object3D = Object3D>(\n    objOrObsOrCallback: TObject3d | Observable<TObject3d> | AnimationCallback,\n    callbackOrPriority?:\n      | ((obj: TObject3d, state: RenderState) => void)\n      | number,\n    priority = 0\n  ) {\n    if (objOrObsOrCallback === undefined) return;\n\n    if (typeof objOrObsOrCallback === 'function') {\n      const id = makeId();\n      this.patchState((state) => ({\n        ...state,\n        animations: {\n          ...state.animations,\n          [id]: {\n            obj: null,\n            callback: objOrObsOrCallback,\n            priority: (callbackOrPriority as number) || 0,\n          },\n        },\n      }));\n      return () => {\n        this.unregisterAnimationEffect(id);\n      };\n    }\n\n    if (isObservable(objOrObsOrCallback)) {\n      let id = '';\n      const subscription = objOrObsOrCallback\n        .pipe(filter((obj) => !!obj))\n        .subscribe((obj) => {\n          this.patchState((state) => {\n            const objectSubscriptions = state.objectSubscriptions;\n            if (objectSubscriptions[objectSubscriptions.length - 1]?.[0]) {\n              objectSubscriptions[objectSubscriptions.length - 1][0] = obj.uuid;\n            }\n            id = obj.uuid;\n            return {\n              animations: {\n                ...state.animations,\n                [id]: {\n                  obj,\n                  callback: callbackOrPriority as AnimationCallback<TObject3d>,\n                  priority,\n                },\n              },\n              objectSubscriptions,\n            };\n          });\n        });\n      this.patchState((state) => ({\n        objectSubscriptions: [\n          ...state.objectSubscriptions,\n          [null, subscription],\n        ],\n      }));\n      return () => {\n        this.unregisterAnimationEffect(id);\n      };\n    }\n\n    const uuid = (objOrObsOrCallback as Object3D).uuid;\n    this.patchState((state) => ({\n      animations: {\n        ...state.animations,\n        [uuid]: {\n          obj: objOrObsOrCallback,\n          callback: callbackOrPriority as AnimationCallback<TObject3d>,\n          priority,\n        },\n      },\n    }));\n    return () => {\n      this.unregisterAnimationEffect(uuid);\n    };\n  }\n\n  ngOnDestroy() {\n    this.clearEffect();\n    super.ngOnDestroy();\n  }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { combineLatest, Observable } from 'rxjs';\nimport { filter, mapTo, tap, withLatestFrom } from 'rxjs/operators';\nimport {\n  ACESFilmicToneMapping,\n  Camera,\n  Clock,\n  OrthographicCamera,\n  PCFSoftShadowMap,\n  PerspectiveCamera,\n  Raycaster,\n  Scene,\n  sRGBEncoding,\n  Vector2,\n  Vector3,\n  WebGLRenderer,\n  WebGLShadowMap,\n} from 'three';\nimport type {\n  CameraOptions,\n  CanvasInternal,\n  CanvasStoreState,\n  RaycasterOptions,\n  SceneOptions,\n  Size,\n  ThreeCameraAlias,\n  ThreeInstance,\n  ThreeRaycaster,\n  UnknownRecord,\n} from '../typings';\nimport { applyProps } from '../utils';\nimport { ImperativeComponentStore } from './imperative-component-store.abstract';\n\ninterface WindowResizeEffectParams {\n  size: Size;\n  dpr: number;\n}\n\nconst position = new Vector3();\nconst defaultTarget = new Vector3();\n\nexport const isOrthographicCamera = (def: Camera): def is OrthographicCamera =>\n  def && (def as OrthographicCamera).isOrthographicCamera;\n\n@Injectable()\nexport class CanvasStore\n  extends ImperativeComponentStore<CanvasStoreState>\n  implements OnDestroy\n{\n  readonly renderer$ = this.select((s) => s.renderer);\n  readonly camera$ = this.select((s) => s.camera);\n  readonly scene$ = this.select((s) => s.scene);\n  readonly raycaster$ = this.select((s) => s.raycaster);\n\n  readonly isOrthographic$ = this.select((s) => s.isOrthographic);\n  readonly isLinear$ = this.select((s) => s.isLinear);\n  readonly shadows$ = this.select((s) => s.shadows);\n  readonly active$ = this.select((s) => s.internal.active);\n  readonly canvasInternal$ = this.select((s) => s.internal);\n\n  constructor() {\n    super({\n      isOrthographic: false,\n      isLinear: false,\n      shadows: false,\n      mouse: new Vector2(),\n      clock: new Clock(),\n      internal: {\n        active: false,\n        size: { width: 0, height: 0 },\n        dpr: 1,\n        viewport: {\n          initialDpr: 1,\n          dpr: 1,\n          width: 0,\n          height: 0,\n          aspect: 0,\n          distance: 0,\n          factor: 0,\n          getCurrentViewport: (\n            camera = this.getImperativeState().camera,\n            target = defaultTarget,\n            size = this.getImperativeState().internal.size\n          ) => {\n            const { width, height } = size;\n            const aspect = width / height;\n            const distance = camera!\n              .getWorldPosition(position)\n              .distanceTo(target);\n            if (isOrthographicCamera(camera!)) {\n              return {\n                width: width / camera.zoom,\n                height: height / camera.zoom,\n                factor: 1,\n                distance,\n                aspect,\n              };\n            }\n\n            const fov = (camera!.fov * Math.PI) / 180; // convert vertical fov to radians\n            const h = 2 * Math.tan(fov / 2) * distance; // visible height\n            const w = h * (width / height);\n            return {\n              width: w,\n              height: h,\n              factor: width / w,\n              distance,\n              aspect,\n            };\n          },\n        },\n      },\n    });\n\n    this.setActive(\n      combineLatest([\n        this.renderer$,\n        this.camera$,\n        this.scene$,\n        this.raycaster$,\n      ]).pipe(\n        filter((coreObjects) => coreObjects.every(Boolean)),\n        mapTo(true)\n      )\n    );\n  }\n\n  readonly setIsOrthographic = this.updater<boolean>(\n    (state, isOrthographic) => ({ ...state, isOrthographic })\n  );\n  readonly setIsLinear = this.updater<boolean>((state, isLinear) => ({\n    ...state,\n    isLinear,\n  }));\n  readonly setShadows = this.updater<boolean | Partial<WebGLShadowMap>>(\n    (state, shadows) => ({\n      ...state,\n      shadows,\n    })\n  );\n  readonly setSize = this.updater<Size>((state, size) => ({\n    ...state,\n    internal: { ...state.internal, size },\n  }));\n  readonly setDpr = this.updater<number>((state, dpr) => ({\n    ...state,\n    internal: { ...state.internal, dpr },\n  }));\n  readonly setViewport = this.updater((state) => ({\n    ...state,\n    internal: {\n      ...state.internal,\n      viewport: {\n        ...state.internal.viewport,\n        ...state.internal.viewport.getCurrentViewport(\n          state.camera,\n          defaultTarget,\n          state.internal.size\n        ),\n        dpr: state.internal.dpr,\n      },\n    },\n  }));\n  readonly setActive = this.updater<boolean>((state, active) => ({\n    ...state,\n    internal: { ...state.internal, active },\n  }));\n\n  readonly initRendererEffect = this.effect<HTMLCanvasElement>((canvas$) => {\n    return canvas$.pipe(\n      withLatestFrom(this.canvasInternal$, this.isLinear$, this.shadows$),\n      tap(\n        ([canvas, { size, dpr }, isLinear, shadows]: [\n          HTMLCanvasElement,\n          CanvasInternal,\n          boolean,\n          boolean | Partial<WebGLShadowMap>\n        ]) => {\n          const renderer = new WebGLRenderer({\n            canvas,\n            antialias: true,\n            powerPreference: 'high-performance',\n            alpha: true,\n          });\n\n          if (shadows) {\n            renderer.shadowMap.enabled = true;\n            if (typeof shadows === 'object')\n              Object.assign(renderer.shadowMap, shadows);\n            else renderer.shadowMap.type = PCFSoftShadowMap;\n          }\n\n          if (!isLinear) {\n            renderer.toneMapping = ACESFilmicToneMapping;\n            renderer.outputEncoding = sRGBEncoding;\n          }\n\n          renderer.setClearAlpha(0);\n          renderer.setPixelRatio(dpr);\n          renderer.setSize(size.width, size.height);\n\n          this.patchState({ renderer });\n        }\n      )\n    );\n  });\n\n  readonly initSceneEffect = this.effect<SceneOptions | undefined>(\n    (sceneOptions$) =>\n      sceneOptions$.pipe(\n        tap((sceneOptions: SceneOptions | undefined) => {\n          const scene = new Scene();\n          applyProps(scene, sceneOptions as UnknownRecord);\n          this.patchState({ scene });\n        })\n      )\n  );\n\n  readonly initCameraEffect = this.effect<CameraOptions | undefined>(\n    (cameraOptions$) =>\n      cameraOptions$.pipe(\n        withLatestFrom(this.isOrthographic$, this.canvasInternal$),\n        tap(\n          ([cameraOptions, isOrthographic, { size }]: [\n            CameraOptions | undefined,\n            boolean,\n            CanvasInternal\n          ]) => {\n            const isCamera = cameraOptions instanceof Camera;\n            let camera: ThreeCameraAlias;\n\n            if (isCamera) {\n              camera = cameraOptions as ThreeCameraAlias;\n            } else {\n              if (isOrthographic) {\n                camera = new OrthographicCamera(0, 0, 0, 0, 0.1, 1000);\n                camera.zoom = 100;\n              } else {\n                camera = new PerspectiveCamera(\n                  75,\n                  size.width / size.height ?? 0,\n                  0.1,\n                  1000\n                );\n              }\n\n              camera.position.z = 5;\n\n              applyProps(camera, cameraOptions as UnknownRecord);\n              // Update projection matrix after applying props\n              camera.updateProjectionMatrix();\n            }\n\n            // look at center by default\n            camera.lookAt(0, 0, 0);\n\n            this.patchState({ camera });\n            this.setViewport();\n          }\n        )\n      )\n  );\n\n  readonly initRaycasterEffect = this.effect<RaycasterOptions | undefined>(\n    (raycasterOptions$) =>\n      raycasterOptions$.pipe(\n        tap((raycasterOptions: RaycasterOptions | undefined) => {\n          const raycaster = new Raycaster() as ThreeRaycaster;\n          raycaster.enabled = true;\n          applyProps(\n            raycaster as unknown as ThreeInstance,\n            raycasterOptions as UnknownRecord\n          );\n          this.patchState({ raycaster });\n        })\n      )\n  );\n\n  readonly windowResizeEffect = this.effect<WindowResizeEffectParams>(\n    (params$) =>\n      params$.pipe(\n        withLatestFrom(\n          this.renderer$ as Observable<WebGLRenderer>,\n          this.camera$ as Observable<ThreeCameraAlias>\n        ),\n        tap(\n          ([{ dpr, size }, renderer, camera]: [\n            WindowResizeEffectParams,\n            WebGLRenderer,\n            ThreeCameraAlias\n          ]) => {\n            if (camera.type === 'PerspectiveCamera') {\n              camera.aspect = size.width / size.height;\n            } else {\n              camera.left = size.width / -2;\n              camera.right = size.width / 2;\n              camera.top = size.height / 2;\n              camera.bottom = size.height / -2;\n            }\n            camera.updateProjectionMatrix();\n            camera.updateMatrixWorld();\n\n            renderer.setPixelRatio(dpr);\n            renderer.setSize(size.width, size.height);\n            this.setSize(size);\n            this.setDpr(dpr);\n            this.setViewport();\n          }\n        )\n      )\n  );\n\n  ngOnDestroy() {\n    const { renderer } = this.getImperativeState();\n    if (renderer) {\n      renderer.renderLists.dispose();\n      renderer.forceContextLoss();\n    }\n    super.ngOnDestroy();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport type { BufferGeometry, Material } from 'three';\nimport type { InstancesStoreState, ThreeInstance } from '../typings';\nimport { ImperativeComponentStore } from './imperative-component-store.abstract';\n\n@Injectable()\nexport class InstancesStore extends ImperativeComponentStore<InstancesStoreState> {\n  constructor() {\n    super({ materials: {}, bufferGeometries: {}, objects: {} });\n  }\n\n  readonly saveMaterial = this.updater<{\n    material: Material;\n    id?: string;\n  }>((state, { material, id = material.uuid }) => ({\n    ...state,\n    materials: { ...state.materials, [id]: material },\n  }));\n\n  readonly removeMaterial = this.updater<string>((state, id) => {\n    const { [id]: _, ...materials } = state.materials;\n\n    return {\n      ...state,\n      materials,\n    };\n  });\n\n  readonly saveBufferGeometry = this.updater<{\n    bufferGeometry: BufferGeometry;\n    id?: string;\n  }>((state, { bufferGeometry, id = bufferGeometry.uuid }) => ({\n    ...state,\n    bufferGeometries: { ...state.bufferGeometries, [id]: bufferGeometry },\n  }));\n\n  readonly removeBufferGeometry = this.updater<string>((state, id) => {\n    const { [id]: _, ...bufferGeometries } = state.bufferGeometries;\n\n    return {\n      ...state,\n      bufferGeometries,\n    };\n  });\n\n  readonly saveObject = this.updater<ThreeInstance>((state, obj) => ({\n    ...state,\n    objects: { ...state.objects, [obj.uuid]: obj },\n  }));\n\n  readonly removeObject = this.updater<string>((state, id) => {\n    const { [id]: _, ...objects } = state.objects;\n    return { ...state, objects };\n  });\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { tap } from 'rxjs/operators';\nimport type { Object3D } from 'three';\nimport type {\n  EventsStoreState,\n  ThreeDomEvent,\n  ThreeIntersection,\n} from '../typings';\nimport { createEvents } from '../utils';\nimport { CanvasStore } from './canvas.store';\nimport { ImperativeComponentStore } from './imperative-component-store.abstract';\nimport { InstancesStore } from './instances.store';\n\nconst events = {\n  click: false,\n  contextmenu: false,\n  dblclick: false,\n  wheel: true,\n  pointerdown: true,\n  pointerup: true,\n  pointerleave: true,\n  pointermove: true,\n  pointercancel: true,\n  lostpointercapture: true,\n} as const;\n\n@Injectable()\nexport class EventsStore\n  extends ImperativeComponentStore<EventsStoreState>\n  implements OnDestroy\n{\n  constructor(\n    private readonly canvasStore: CanvasStore,\n    private readonly instancesStore: InstancesStore\n  ) {\n    super({\n      connected: false,\n      internal: {\n        interaction: [],\n        hovered: new Map<string, ThreeDomEvent>(),\n        capturedMap: new Map<number, Map<Object3D, ThreeIntersection>>(),\n        initialClick: [0, 0],\n        initialHits: [],\n      },\n    });\n    this.initHandlersEffect();\n  }\n\n  readonly initHandlersEffect = this.effect((trigger$) =>\n    trigger$.pipe(\n      tap(() => {\n        const { handlePointer } = createEvents(\n          () => this.canvasStore.getImperativeState(),\n          () => this.getImperativeState(),\n          () => this.instancesStore.getImperativeState()\n        );\n        this.patchState({\n          handlers: Object.keys(events).reduce(\n            (handlers, supportedEventName) => {\n              handlers[supportedEventName] = handlePointer(supportedEventName);\n              return handlers;\n            },\n            {} as Record<string, unknown>\n          ) as EventsStoreState['handlers'],\n        });\n      })\n    )\n  );\n\n  readonly connectEffect = this.effect<HTMLElement>((target$) =>\n    target$.pipe(\n      tap((target: HTMLElement) => {\n        this.disconnectEffect();\n        const { handlers } = this.getImperativeState();\n        this.patchState({ connected: target });\n        Object.entries(handlers ?? []).forEach(([name, event]) => {\n          const passive = events[name as keyof typeof events];\n          target.addEventListener(name, event, { passive });\n        });\n      })\n    )\n  );\n\n  readonly disconnectEffect = this.effect((trigger$) =>\n    trigger$.pipe(\n      tap(() => {\n        const { handlers, connected } = this.getImperativeState();\n        if (connected) {\n          Object.entries(handlers ?? []).forEach(([name, event]) => {\n            if (connected instanceof HTMLElement) {\n              connected.removeEventListener(name, event);\n            }\n          });\n\n          this.patchState({ connected: false });\n        }\n      })\n    )\n  );\n\n  ngOnDestroy() {\n    this.disconnectEffect();\n    super.ngOnDestroy();\n  }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Clock } from 'three';\nimport { AnimationStore, CanvasStore } from '../stores';\n\n@Injectable()\nexport class LoopService implements OnDestroy {\n  private readonly loopClock = new Clock();\n  // TODO: rethink limit 60fps\n  // private readonly interval = 1 / 60; // 60fps;\n  // private internalDelta = 0;\n\n  constructor(\n    private readonly canvasStore: CanvasStore,\n    private readonly animationStore: AnimationStore\n  ) {}\n\n  start() {\n    const { renderer } = this.canvasStore.getImperativeState();\n    if (renderer) {\n      renderer.setAnimationLoop(() => {\n        this.tick(this.loopClock.getDelta());\n      });\n    }\n  }\n\n  stop() {\n    const { renderer } = this.canvasStore.getImperativeState();\n    if (renderer) {\n      renderer.setAnimationLoop(null);\n    }\n  }\n\n  private tick(delta: number) {\n    // this.internalDelta += delta;\n    //\n    // if (this.internalDelta >= this.interval) {\n    //   const {\n    //     renderer,\n    //     scene,\n    //     camera,\n    //     internal: { size, viewport },\n    //     clock,\n    //     mouse,\n    //   } = this.canvasStore.getImperativeState();\n    //   const { animationCallbacks, hasPriority } =\n    //     this.animationStore.getImperativeState();\n    //\n    //   if (renderer && scene && camera) {\n    //     if (hasPriority) {\n    //       animationCallbacks.sort(\n    //         ({ priority: a = 0 }, { priority: b = 0 }) => a - b\n    //       );\n    //     } else {\n    //       renderer.render(scene, camera);\n    //     }\n    //\n    //     const renderState = {\n    //       clock,\n    //       camera,\n    //       scene,\n    //       renderer,\n    //       mouse,\n    //       size,\n    //       viewport,\n    //       delta,\n    //     };\n    //     for (const animationCallback of animationCallbacks) {\n    //       if (animationCallback.obj) {\n    //         animationCallback.callback(animationCallback.obj, renderState);\n    //       } else {\n    //         animationCallback.callback(renderState);\n    //       }\n    //     }\n    //   }\n    //\n    //   this.internalDelta = this.internalDelta % this.interval;\n    // }\n    const {\n      renderer,\n      scene,\n      camera,\n      internal: { size, viewport },\n      clock,\n      mouse,\n    } = this.canvasStore.getImperativeState();\n    const { animationCallbacks, hasPriority } =\n      this.animationStore.getImperativeState();\n\n    if (renderer && scene && camera) {\n      if (hasPriority) {\n        animationCallbacks.sort(\n          ({ priority: a = 0 }, { priority: b = 0 }) => a - b\n        );\n      } else {\n        renderer.render(scene, camera);\n      }\n\n      const renderState = {\n        clock,\n        camera,\n        scene,\n        renderer,\n        mouse,\n        size,\n        viewport,\n        delta,\n      };\n      for (const animationCallback of animationCallbacks) {\n        if (animationCallback.obj) {\n          animationCallback.callback(animationCallback.obj, renderState);\n        } else {\n          animationCallback.callback(renderState);\n        }\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this.stop();\n  }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable()\nexport class DestroyedService extends Subject<void> implements OnDestroy {\n  ngOnDestroy() {\n    this.next();\n    this.complete();\n  }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { defer, forkJoin, Observable, of, shareReplay, throwError } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport type { Material, Object3D, Scene } from 'three';\nimport type { GLTF } from 'three/examples/jsm/loaders/GLTFLoader';\nimport type {\n  BranchingReturn,\n  LoaderExtensions,\n  ThreeLoaderResult,\n  ThreeObjectMap,\n  UnknownRecord,\n} from '../typings';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoaderService implements OnDestroy {\n  private readonly cached = new Map<string, BranchingReturn>();\n\n  use<TReturnType, TUrl extends string | string[]>(\n    loaderConstructor: new () => ThreeLoaderResult<TReturnType>,\n    input: TUrl,\n    extensions?: LoaderExtensions,\n    onProgress?: (event: ProgressEvent) => void\n  ): TUrl extends any[]\n    ? Observable<BranchingReturn<TReturnType, GLTF, GLTF & ThreeObjectMap>[]>\n    : Observable<BranchingReturn<TReturnType, GLTF, GLTF & ThreeObjectMap>> {\n    const keys = (Array.isArray(input) ? input : [input]) as string[];\n    const loader = new loaderConstructor();\n    if (extensions) {\n      extensions(loader);\n    }\n\n    const results$ = forkJoin(\n      keys.map((key) => {\n        if (this.cached.has(key)) {\n          return of(this.cached.get(key));\n        }\n\n        return defer(() => loader.loadAsync(key, onProgress)).pipe(\n          tap((data) => {\n            if (data.scene) {\n              Object.assign(data, this.buildGraph(data.scene as Scene));\n            }\n            this.cached.set(key, data);\n          }),\n          catchError((err) => {\n            console.error(`Error loading ${key}: ${err.message}`);\n            return throwError(err);\n          })\n        );\n      })\n    ) as Observable<\n      BranchingReturn<TReturnType, GLTF, GLTF & ThreeObjectMap>[]\n    >;\n\n    return defer(() =>\n      Array.isArray(input)\n        ? results$\n        : results$.pipe(map((results) => results[0]))\n    ).pipe(shareReplay({ bufferSize: 1, refCount: true })) as TUrl extends any[]\n      ? Observable<BranchingReturn<TReturnType, GLTF, GLTF & ThreeObjectMap>[]>\n      : Observable<BranchingReturn<TReturnType, GLTF, GLTF & ThreeObjectMap>>;\n  }\n\n  ngOnDestroy() {\n    this.cached.clear();\n  }\n\n  private buildGraph(object: Object3D): ThreeObjectMap {\n    const data: ThreeObjectMap = { nodes: {}, materials: {} };\n    if (object) {\n      object.traverse((obj) => {\n        if (obj.name) {\n          data.nodes[obj.name] = obj;\n        }\n        if (\n          (obj as unknown as UnknownRecord).material &&\n          !data.materials[\n            (\n              (obj as unknown as UnknownRecord)\n                .material as unknown as UnknownRecord\n            ).name as string\n          ]\n        ) {\n          data.materials[\n            (\n              (obj as unknown as UnknownRecord)\n                .material as unknown as UnknownRecord\n            ).name as string\n          ] = (obj as unknown as UnknownRecord).material as Material;\n        }\n      });\n    }\n    return data;\n  }\n}\n","import { DOCUMENT } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  Inject,\n  Input,\n  NgZone,\n  OnInit,\n  Output,\n  Self,\n  ViewChild,\n} from '@angular/core';\nimport { asapScheduler, fromEvent } from 'rxjs';\nimport { observeOn, takeUntil } from 'rxjs/operators';\nimport type { Scene, WebGLRenderer, WebGLShadowMap } from 'three';\nimport { DestroyedService, LoopService } from './services';\nimport {\n  AnimationStore,\n  CanvasStore,\n  EventsStore,\n  InstancesStore,\n} from './stores';\nimport type {\n  CameraOptions,\n  RaycasterOptions,\n  SceneOptions,\n  ThreeCameraAlias,\n} from './typings';\n\n@Component({\n  selector: 'ngt-canvas',\n  exportAs: 'ngtCanvas',\n  template: ` <canvas #rendererCanvas></canvas> `,\n  styles: [\n    `\n      :host {\n        display: block;\n        position: relative;\n        width: 100%;\n        height: 100%;\n        overflow: hidden;\n      }\n\n      :host canvas {\n        display: block;\n      }\n    `,\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    CanvasStore,\n    EventsStore,\n    InstancesStore,\n    AnimationStore,\n    LoopService,\n    DestroyedService,\n  ],\n})\nexport class CanvasComponent implements OnInit {\n  @HostBinding('class.ngt-canvas') hostClass = true;\n\n  @Input() set orthographic(v: boolean) {\n    this.canvasStore.setIsOrthographic(v);\n  }\n\n  @Input() set linear(v: boolean) {\n    this.canvasStore.setIsLinear(v);\n  }\n\n  @Input() set shadows(v: boolean | Partial<WebGLShadowMap>) {\n    this.canvasStore.setShadows(v);\n  }\n\n  @Input() camera?: CameraOptions;\n  @Input() scene?: SceneOptions;\n  @Input() raycaster?: RaycasterOptions = {};\n\n  @Output() created = new EventEmitter<{\n    gl: WebGLRenderer;\n    camera: ThreeCameraAlias;\n    scene: Scene;\n  }>();\n\n  @ViewChild('rendererCanvas', { static: true })\n  rendererCanvas!: ElementRef<HTMLCanvasElement>;\n\n  constructor(\n    @Self() private readonly canvasStore: CanvasStore,\n    @Self() private readonly animationStore: AnimationStore,\n    @Self() private readonly eventsStore: EventsStore,\n    @Self() private readonly loopService: LoopService,\n    private readonly ngZone: NgZone,\n    private readonly hostElement: ElementRef<HTMLElement>,\n    @Inject(DOCUMENT) private readonly document: Document,\n    private readonly destroyed: DestroyedService\n  ) {}\n\n  ngOnInit(): void {\n    this.ngZone.runOutsideAngular(() => {\n      this.canvasStore.setSize({\n        width: this.hostElement.nativeElement.clientWidth,\n        height: this.hostElement.nativeElement.clientHeight,\n      });\n\n      this.canvasStore.setDpr(\n        (this.document as Document).defaultView?.devicePixelRatio || 1\n      );\n\n      this.canvasStore.initRendererEffect(this.rendererCanvas.nativeElement);\n      this.canvasStore.initSceneEffect(this.scene);\n      this.canvasStore.initCameraEffect(this.camera);\n      this.canvasStore.initRaycasterEffect(this.raycaster);\n\n      this.initWindowResizeListener();\n      this.initActiveListener();\n    });\n  }\n\n  private initWindowResizeListener() {\n    if (this.document?.defaultView) {\n      fromEvent(this.document.defaultView, 'resize')\n        .pipe(takeUntil(this.destroyed))\n        .subscribe(() => {\n          this.ngZone.runOutsideAngular(() => {\n            this.canvasStore.windowResizeEffect({\n              size: {\n                width: this.hostElement.nativeElement.clientWidth,\n                height: this.hostElement.nativeElement.clientHeight,\n              },\n              dpr:\n                (this.document as Document).defaultView?.devicePixelRatio || 1,\n            });\n          });\n        });\n    }\n  }\n\n  private initActiveListener() {\n    this.canvasStore.active$\n      .pipe(takeUntil(this.destroyed), observeOn(asapScheduler))\n      .subscribe((active) => {\n        this.ngZone.runOutsideAngular(() => {\n          if (active) {\n            const { renderer, camera, scene } =\n              this.canvasStore.getImperativeState();\n            if (renderer && camera && scene) {\n              this.created.emit({ gl: renderer, camera, scene });\n              this.eventsStore.connectEffect(renderer.domElement);\n              this.loopService.start();\n            }\n          }\n        });\n      });\n  }\n}\n","import { Directive, OnChanges, SimpleChanges } from '@angular/core';\nimport { ReplaySubject } from 'rxjs';\n\n@Directive()\nexport abstract class Controller implements OnChanges {\n  readonly change$ = new ReplaySubject<SimpleChanges>(1);\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.change$.next(changes);\n  }\n}\n","// GENERATED\n\nimport { Directive, EventEmitter, Input, Output } from '@angular/core';\nimport { Object3D } from 'three';\nimport {\n  ThreeColor,\n  ThreeEuler,\n  ThreeEvent,\n  ThreeQuaternion,\n  ThreeVector3,\n  UnknownRecord,\n} from '../typings';\nimport { Controller } from './controller.abstract';\n\n@Directive({\n  selector: `\n    ngt-primitive[o3d],\n    ngt-mesh[o3d],\n    ngt-instanced-mesh[o3d],\n    ngt-skinned-mesh[o3d],\n    ngt-bone[o3d],\n    ngt-group[o3d],\n    ngt-lod[o3d],\n    ngt-scene[o3d],\n    ngt-points[o3d],\n    ngt-cube-camera[o3d],\n    ngt-contact-shadows[o3d],\n    ngt-html[o3d],\n    ngt-light-probe[o3d],\n    ngt-ambient-light[o3d],\n    ngt-ambient-light-probe[o3d],\n    ngt-hemisphere-light[o3d],\n    ngt-hemisphere-light-probe[o3d],\n    ngt-directional-light[o3d],\n    ngt-point-light[o3d],\n    ngt-spot-light[o3d],\n    ngt-rect-area-light[o3d],\n    ngt-arrow-helper[o3d],\n    ngt-axes-helper[o3d],\n    ngt-box-helper[o3d],\n    ngt-box3-helper[o3d],\n    ngt-grid-helper[o3d],\n    ngt-camera-helper[o3d],\n    ngt-directional-light-helper[o3d],\n    ngt-hemisphere-light-helper[o3d],\n    ngt-plane-helper[o3d],\n    ngt-point-light-helper[o3d],\n    ngt-polar-grid-helper[o3d],\n    ngt-skeleton-helper[o3d],\n    ngt-spot-light-helper[o3d],\n    ngt-line[o3d],\n    ngt-line-loop[o3d],\n    ngt-line-segments[o3d],\n    ngt-sprite[o3d],\n    ngt-camera[o3d],\n    ngt-perspective-camera[o3d],\n    ngt-orthographic-camera[o3d],\n    ngt-array-camera[o3d],\n    ngt-stereo-camera[o3d]\n  `,\n  exportAs: 'ngtObject3dController',\n})\nexport class Object3dControllerDirective extends Controller {\n  @Input() name?: string;\n  @Input() position?: ThreeVector3;\n  @Input() rotation?: ThreeEuler;\n  @Input() quaternion?: ThreeQuaternion;\n  @Input() scale?: ThreeVector3;\n  @Input() color?: ThreeColor;\n  @Input() userData?: UnknownRecord;\n  @Input() dispose?: () => void;\n  @Input() castShadow = false;\n  @Input() receiveShadow = false;\n  @Input() visible = true;\n  @Input() matrixAutoUpdate = true;\n\n  @Input() appendMode: 'immediate' | 'root' = 'immediate';\n  @Input() appendTo?: Object3D;\n\n  // events\n  @Output() click = new EventEmitter<ThreeEvent<MouseEvent>>();\n  @Output() contextmenu = new EventEmitter<ThreeEvent<MouseEvent>>();\n  @Output() dblclick = new EventEmitter<ThreeEvent<MouseEvent>>();\n  @Output() pointerup = new EventEmitter<ThreeEvent<PointerEvent>>();\n  @Output() pointerdown = new EventEmitter<ThreeEvent<PointerEvent>>();\n  @Output() pointerover = new EventEmitter<ThreeEvent<PointerEvent>>();\n  @Output() pointerout = new EventEmitter<ThreeEvent<PointerEvent>>();\n  @Output() pointerenter = new EventEmitter<ThreeEvent<PointerEvent>>();\n  @Output() pointerleave = new EventEmitter<ThreeEvent<PointerEvent>>();\n  @Output() pointermove = new EventEmitter<ThreeEvent<PointerEvent>>();\n  @Output() pointermissed = new EventEmitter<ThreeEvent<PointerEvent>>();\n  @Output() pointercancel = new EventEmitter<ThreeEvent<PointerEvent>>();\n  @Output() wheel = new EventEmitter<ThreeEvent<WheelEvent>>();\n}\n","import { NgModule } from '@angular/core';\nimport { CanvasComponent } from './canvas.component';\nimport { Object3dControllerDirective } from './controllers';\n\n@NgModule({\n  declarations: [CanvasComponent, Object3dControllerDirective],\n  exports: [CanvasComponent, Object3dControllerDirective],\n})\nexport class ThreeCoreModule {}\n","import {\n  ChangeDetectorRef,\n  InjectionToken,\n  Optional,\n  Provider,\n} from '@angular/core';\nimport { takeUntil } from 'rxjs/operators';\nimport { Object3dControllerDirective } from '../controllers';\nimport { DestroyedService } from '../services';\n\nexport const OBJECT_3D_WATCHED_CONTROLLER = new InjectionToken(\n  'Watched Object3D Controller'\n);\n\nexport const OBJECT_3D_CONTROLLER_PROVIDER: Provider[] = [\n  DestroyedService,\n  {\n    provide: OBJECT_3D_WATCHED_CONTROLLER,\n    deps: [\n      [new Optional(), Object3dControllerDirective],\n      ChangeDetectorRef,\n      DestroyedService,\n    ],\n    useFactory: object3dWatchedControllerFactory,\n  },\n];\n\nexport function object3dWatchedControllerFactory(\n  controller: Object3dControllerDirective | null,\n  changeDetectorRef: ChangeDetectorRef,\n  destroy$: DestroyedService\n) {\n  if (!controller) return null;\n\n  controller.change$.pipe(takeUntil(destroy$)).subscribe(() => {\n    changeDetectorRef.markForCheck();\n  });\n\n  return controller;\n}\n","import {\n  Directive,\n  EventEmitter,\n  NgZone,\n  OnDestroy,\n  Output,\n} from '@angular/core';\nimport { Object3D } from 'three';\nimport { AnimationStore } from '../stores';\nimport type { AnimationReady } from '../typings';\n\n@Directive()\nexport abstract class AnimationLoopParticipant<TObject = unknown>\n  implements OnDestroy\n{\n  @Output() animateReady = new EventEmitter<AnimationReady<TObject>>();\n\n  private animateTeardown?: () => void;\n\n  protected constructor(\n    protected readonly animationStore: AnimationStore,\n    protected readonly ngZone: NgZone\n  ) {}\n\n  protected participate(animateObject: TObject) {\n    this.ngZone.runOutsideAngular(() => {\n      if (this.animateReady.observed) {\n        if (animateObject instanceof Object3D) {\n          this.animateTeardown = this.animationStore.registerAnimation(\n            animateObject as Object3D,\n            (obj, state) => {\n              this.animateReady.emit({\n                animateObject: obj as unknown as TObject,\n                renderState: state,\n              });\n            }\n          );\n        } else {\n          this.animateTeardown = this.animationStore.registerAnimation(\n            (state) => {\n              this.animateReady.emit({\n                animateObject,\n                renderState: state,\n              });\n            }\n          );\n        }\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.ngZone.runOutsideAngular(() => {\n      if (this.animateTeardown) {\n        this.animateTeardown();\n      }\n    });\n  }\n}\n","import {\n  Directive,\n  Inject,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  Optional,\n  Output,\n  SkipSelf,\n} from '@angular/core';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\nimport { filter, take } from 'rxjs/operators';\nimport type { Object3D } from 'three';\nimport { Color } from 'three';\nimport { Object3dControllerDirective } from '../controllers';\nimport { OBJECT_3D_WATCHED_CONTROLLER } from '../di';\nimport {\n  AnimationStore,\n  CanvasStore,\n  EventsStore,\n  InstancesStore,\n} from '../stores';\nimport type {\n  EventHandlers,\n  InstanceInternal,\n  ThreeEvent,\n  ThreeInstance,\n  UnknownRecord,\n} from '../typings';\nimport { applyProps } from '../utils';\nimport { AnimationLoopParticipant } from './animation-loop-participant.abstract';\n\n@Directive()\nexport abstract class ThreeObject3d<TObject extends Object3D = Object3D>\n  extends AnimationLoopParticipant<TObject>\n  implements OnDestroy, OnChanges\n{\n  private $object3d = new BehaviorSubject<TObject | null>(null);\n\n  get object3d$(): Observable<TObject | null> {\n    return this.$object3d.asObservable();\n  }\n\n  @Output() ready = this.object3d$.pipe(filter(Boolean)) as Observable<TObject>;\n\n  private changesSubscription?: Subscription;\n\n  constructor(\n    @Inject(OBJECT_3D_WATCHED_CONTROLLER)\n    protected readonly object3dController: Object3dControllerDirective,\n    protected readonly canvasStore: CanvasStore,\n    protected readonly instancesStore: InstancesStore,\n    protected readonly eventsStore: EventsStore,\n    readonly animationStore: AnimationStore,\n    readonly ngZone: NgZone,\n    @Optional()\n    @SkipSelf()\n    protected readonly parentObjectDirective?: ThreeObject3d\n  ) {\n    super(animationStore, ngZone);\n\n    this.changesSubscription = object3dController.change$.subscribe(() => {\n      if (this.object3d) {\n        this.applyCustomProps();\n      }\n      if (this.inputChangeHandler) {\n        this.inputChangeHandler();\n      }\n    });\n  }\n\n  ngOnChanges() {\n    if (this.object3d) {\n      this.applyCustomProps();\n    }\n  }\n\n  protected init() {\n    this.ngZone.runOutsideAngular(() => {\n      this.initObject();\n\n      if (this.object3d) {\n        this.applyCustomProps();\n\n        applyProps(this.object3d, {\n          __ngt: {\n            canvasStateGetter: () => this.canvasStore.getImperativeState(),\n            eventsStateGetter: () => this.eventsStore.getImperativeState(),\n            handlers: this.applyEvents(),\n          } as InstanceInternal,\n        });\n\n        this.instancesStore.saveObject(\n          this.object3d as unknown as ThreeInstance\n        );\n\n        this.appendToParent();\n        this.objectReady();\n      }\n    });\n  }\n\n  protected addToScene() {\n    const { scene } = this.canvasStore.getImperativeState();\n    if (scene) {\n      scene.add(this.object3d);\n    }\n  }\n\n  protected addToParent() {\n    if (this.parentObjectDirective) {\n      this.parentObjectDirective.object3d.add(this.object3d);\n    } else {\n      this.addToScene();\n    }\n  }\n\n  protected remove() {\n    if (this.object3dController.appendTo) {\n      this.object3dController.appendTo.remove(this.object3d);\n    } else if (\n      this.parentObjectDirective &&\n      this.object3dController.appendMode === 'immediate'\n    ) {\n      this.parentObjectDirective.object3d.remove(this.object3d);\n    } else {\n      const { scene } = this.canvasStore.getImperativeState();\n      if (scene) {\n        scene.remove(this.object3d);\n      }\n    }\n\n    this.object3d.clear();\n  }\n\n  protected objectReady() {\n    this.$object3d.next(this.object3d);\n    this.participate(this.object3d);\n  }\n\n  protected inputChangeHandler?: () => void;\n\n  private applyCustomProps() {\n    this.ngZone.runOutsideAngular(() => {\n      const customProps = {\n        castShadow: this.object3dController.castShadow,\n        receiveShadow: this.object3dController.receiveShadow,\n        visible: this.object3dController.visible,\n        matrixAutoUpdate: this.object3dController.matrixAutoUpdate,\n      } as UnknownRecord;\n\n      if (this.object3dController.name) {\n        customProps['name'] = this.object3dController.name;\n      }\n\n      if (this.object3dController.position) {\n        customProps['position'] = this.object3dController.position;\n      }\n\n      if (this.object3dController.rotation) {\n        customProps['rotation'] = this.object3dController.rotation;\n      } else if (this.object3dController.quaternion) {\n        customProps['quaternion'] = this.object3dController.quaternion;\n      }\n\n      if (this.object3dController.scale) {\n        customProps['scale'] = this.object3dController.scale;\n      }\n\n      if (this.object3dController.userData) {\n        customProps['userData'] = this.object3dController.userData;\n      }\n\n      if (this.object3dController.color) {\n        this.object3dController.color = Array.isArray(\n          this.object3dController.color\n        )\n          ? new Color(...this.object3dController.color)\n          : new Color(this.object3dController.color);\n        if (!this.canvasStore.getImperativeState().isLinear) {\n          this.object3dController.color.convertSRGBToLinear();\n        }\n        customProps['color'] = this.object3dController.color;\n      }\n\n      if (this.object3dController.dispose) {\n        customProps['dispose'] = this.object3dController.dispose;\n      }\n\n      this.object3dController.change$.pipe(take(1)).subscribe((changes) => {\n        if (changes) {\n          for (const [inputName, inputChange] of Object.entries(changes)) {\n            if (\n              !inputChange.isFirstChange() ||\n              [\n                'name',\n                'position',\n                'rotation',\n                'quaternion',\n                'scale',\n                'userData',\n                'color',\n                'dispose',\n                'castShadow',\n                'receiveShadow',\n                'visible',\n                'matrixAutoUpdate',\n              ].includes(inputName) // skip 12 common inputs\n            ) {\n              continue;\n            }\n            customProps[inputName] = inputChange.currentValue;\n          }\n        }\n      });\n\n      applyProps(this.object3d, customProps);\n      this.object3d.updateMatrix();\n    });\n  }\n\n  private applyEvents(): EventHandlers {\n    const handlers: EventHandlers = {};\n\n    (\n      [\n        'click',\n        'contextmenu',\n        'dblclick',\n        'pointerup',\n        'pointerdown',\n        'pointerover',\n        'pointerout',\n        'pointerenter',\n        'pointerleave',\n        'pointermove',\n        'pointermissed',\n        'pointercancel',\n        'wheel',\n      ] as const\n    ).forEach((eventName) => {\n      if (this.object3dController[eventName].observed) {\n        handlers[eventName] = (\n          event: Parameters<\n            Exclude<EventHandlers[typeof eventName], undefined>\n          >[0]\n        ) => {\n          this.ngZone.run(() => {\n            this.object3dController[eventName].emit(event as ThreeEvent<any>);\n          });\n        };\n      }\n    });\n\n    return handlers;\n  }\n\n  private appendToParent(): void {\n    if (this.object3dController.appendTo) {\n      this.object3dController.appendTo.add(this.object3d);\n      return;\n    }\n\n    if (this.object3dController.appendMode === 'root') {\n      this.addToScene();\n      return;\n    }\n\n    if (this.object3dController.appendMode === 'immediate') {\n      this.addToParent();\n    }\n  }\n\n  ngOnDestroy(): void {\n    super.ngOnDestroy();\n    if (this.changesSubscription) {\n      this.changesSubscription.unsubscribe();\n    }\n    this.ngZone.runOutsideAngular(() => {\n      if (this.object3d) {\n        this.remove();\n        this.instancesStore.removeObject(this.object3d.uuid);\n        this.animationStore.unregisterAnimationEffect(this.object3d.uuid);\n      }\n    });\n  }\n\n  protected abstract initObject(): void;\n\n  abstract get object3d(): TObject;\n}\n","import { AfterContentInit, Directive, Input } from '@angular/core';\nimport { BufferGeometry, Material, Object3D } from 'three';\nimport { AnyConstructor, UnknownRecord } from '../typings';\nimport { ThreeObject3d } from './object-3d.abstract';\n\n@Directive()\nexport abstract class ThreeObject3dMaterialGeometry<\n    TObject extends Object3D = Object3D\n  >\n  extends ThreeObject3d<TObject>\n  implements AfterContentInit\n{\n  abstract get objectType(): AnyConstructor<TObject>;\n\n  @Input() geometry?: string | BufferGeometry | null;\n  @Input() material?: string | string[] | Material | Material[] | null;\n  @Input() morphTargetInfluences?: number[];\n  @Input() morphTargetDictionary?: { [key: string]: number };\n\n  private _objectMaterialGeometry!: TObject;\n\n  private _extraArgs?: unknown[];\n  set extraArgs(v: unknown[]) {\n    this._extraArgs = v;\n  }\n\n  ngAfterContentInit() {\n    this.init();\n  }\n\n  protected initObject() {\n    if (this.canCreate()) {\n      const material = this.getMaterial();\n      const geometry = this.getGeometry();\n\n      this._objectMaterialGeometry = new this.objectType(\n        geometry,\n        material,\n        ...(this._extraArgs || [])\n      );\n\n      if (\n        this.morphTargetDictionary &&\n        'morphTargetDictionary' in this._objectMaterialGeometry\n      ) {\n        (this._objectMaterialGeometry as UnknownRecord).morphTargetDictionary =\n          this.morphTargetDictionary;\n      }\n\n      if (\n        this.morphTargetInfluences &&\n        'morphTargetInfluences' in this._objectMaterialGeometry\n      ) {\n        (this._objectMaterialGeometry as UnknownRecord).morphTargetInfluences =\n          this.morphTargetInfluences;\n      }\n\n      if (this.customize) {\n        this.customize();\n      }\n    }\n  }\n\n  protected customize?: () => void;\n\n  protected canCreate() {\n    return true;\n  }\n\n  get object3d(): TObject {\n    return this._objectMaterialGeometry;\n  }\n\n  private getMaterial(): Material[] | Material | undefined {\n    if (this.material) {\n      if (\n        (Array.isArray(this.material) &&\n          this.material[0] instanceof Material) ||\n        this.material instanceof Material\n      ) {\n        return this.material as Material | Material[];\n      }\n\n      if (Array.isArray(this.material)) {\n        return (this.material as string[]).map(\n          (materialId) =>\n            this.instancesStore.getImperativeState().materials[materialId]\n        );\n      }\n\n      return this.instancesStore.getImperativeState().materials[this.material];\n    }\n\n    return undefined;\n  }\n\n  private getGeometry(): BufferGeometry | undefined {\n    if (this.geometry) {\n      if (this.geometry instanceof BufferGeometry) {\n        return this.geometry;\n      }\n\n      return this.instancesStore.getImperativeState().bufferGeometries[\n        this.geometry\n      ];\n    }\n    return undefined;\n  }\n}\n","import {\n  Directive,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  SkipSelf,\n} from '@angular/core';\nimport { Color, Material, MaterialParameters } from 'three';\nimport { CanvasStore, InstancesStore } from '../stores';\nimport type { AnyConstructor, ThreeColor, UnknownRecord } from '../typings';\n\n@Directive()\nexport abstract class ThreeMaterial<\n  TMaterial extends Material = Material,\n  TMaterialParameters extends MaterialParameters = MaterialParameters\n> implements OnInit, OnDestroy\n{\n  @Input() ngtId?: string;\n\n  @Input() set parameters(v: TMaterialParameters | undefined) {\n    this._parameters = v;\n    if (v && this.material) {\n      this.ngZone.runOutsideAngular(() => {\n        this.convertColorToLinear(v);\n        this.material.setValues(v);\n        this.material.needsUpdate = true;\n      });\n    }\n  }\n\n  get parameters(): TMaterialParameters | undefined {\n    return this._parameters;\n  }\n\n  private _parameters?: TMaterialParameters;\n\n  constructor(\n    protected readonly ngZone: NgZone,\n    @SkipSelf() protected readonly instancesStore: InstancesStore,\n    @SkipSelf() protected readonly canvasStore: CanvasStore\n  ) {}\n\n  abstract materialType: AnyConstructor<TMaterial>;\n\n  ngOnInit() {\n    this.ngZone.runOutsideAngular(() => {\n      if (this.parameters) {\n        this.convertColorToLinear(this.parameters);\n      }\n      this._material = new this.materialType(this.parameters);\n      this.instancesStore.saveMaterial({\n        id: this.ngtId,\n        material: this._material,\n      });\n    });\n  }\n\n  private _material!: TMaterial;\n  get material(): TMaterial {\n    return this._material;\n  }\n\n  private convertColorToLinear(parameters: TMaterialParameters) {\n    if ('color' in parameters) {\n      const colorParams = (parameters as UnknownRecord)['color'] as ThreeColor;\n      (parameters as UnknownRecord)['color'] = Array.isArray(colorParams)\n        ? new Color(...colorParams)\n        : new Color(colorParams);\n\n      if (!this.canvasStore.getImperativeState().isLinear) {\n        ((parameters as UnknownRecord)['color'] as Color).convertSRGBToLinear();\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this.ngZone.runOutsideAngular(() => {\n      if (this.material) {\n        this.instancesStore.removeMaterial(this.ngtId || this.material.uuid);\n        this.material.dispose();\n      }\n    });\n  }\n}\n","import { Directive, NgZone, OnDestroy, OnInit } from '@angular/core';\nimport { Texture } from 'three';\nimport type { AnyConstructor } from '../typings';\n\n@Directive()\nexport abstract class ThreeTexture<TTexture extends Texture = Texture>\n  implements OnInit, OnDestroy\n{\n  abstract textureType: AnyConstructor<TTexture>;\n\n  constructor(private readonly ngZone: NgZone) {}\n\n  private _extraArgs: unknown[] = [];\n\n  protected set extraArgs(v: unknown[]) {\n    this._extraArgs = v;\n    this.ngZone.runOutsideAngular(() => {\n      this._texture = new this.textureType(...this._extraArgs);\n    });\n  }\n\n  private _texture?: TTexture;\n\n  ngOnInit() {\n    this.ngZone.runOutsideAngular(() => {\n      if (!this.texture) {\n        this._texture = new this.textureType(...this._extraArgs);\n      }\n    });\n  }\n\n  get texture(): TTexture | undefined {\n    return this._texture;\n  }\n\n  ngOnDestroy() {\n    this.ngZone.runOutsideAngular(() => {\n      if (this.texture) {\n        this.texture.dispose();\n      }\n    });\n  }\n}\n","import { Directive, Input, OnInit } from '@angular/core';\nimport { Light } from 'three';\nimport type { AnyConstructor } from '../typings';\nimport { ThreeObject3d } from './object-3d.abstract';\n\n@Directive()\nexport abstract class ThreeLight<TLight extends Light = Light>\n  extends ThreeObject3d<TLight>\n  implements OnInit\n{\n  abstract lightType: AnyConstructor<TLight>;\n\n  @Input() intensity?: number;\n\n  private _extraArgs: unknown[] = [];\n  protected set extraArgs(v: unknown[]) {\n    this._extraArgs = v;\n    this.ngZone.runOutsideAngular(() => {\n      this.init();\n    });\n  }\n\n  private _light!: TLight;\n\n  ngOnInit() {\n    if (!this.object3d) {\n      this.init();\n    }\n  }\n\n  protected initObject() {\n    if (this.intensity) {\n      this._extraArgs[1] = this.intensity;\n    }\n    this._light = new this.lightType(...this._extraArgs);\n  }\n\n  get object3d(): TLight {\n    return this._light;\n  }\n}\n","import { Directive, OnChanges, OnInit } from '@angular/core';\nimport { Object3D } from 'three';\nimport type { AnyConstructor } from '../typings';\nimport { ThreeObject3d } from './object-3d.abstract';\n\n@Directive()\nexport abstract class ThreeHelper<THelper extends Object3D>\n  extends ThreeObject3d<THelper>\n  implements OnInit, OnChanges\n{\n  abstract helperType: AnyConstructor<THelper>;\n\n  private _extraArgs: unknown[] = [];\n\n  private _helper!: THelper;\n\n  protected set extraArgs(v: unknown[]) {\n    this._extraArgs = v;\n    this.ngZone.runOutsideAngular(() => {\n      this.init();\n    });\n  }\n\n  ngOnChanges() {\n    super.ngOnChanges();\n    this.inputChangeHandler();\n  }\n\n  inputChangeHandler = () => {\n    if (!this.object3d) {\n      this.init();\n    }\n  };\n\n  ngOnInit() {\n    this.inputChangeHandler();\n  }\n\n  protected initObject() {\n    try {\n      this._helper = new this.helperType(...this._extraArgs);\n    } catch (e) {\n      console.log('Failed to initialize Helper');\n    }\n  }\n\n  get object3d(): THelper {\n    return this._helper;\n  }\n}\n","import {\n  Directive,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  SkipSelf,\n} from '@angular/core';\nimport type { BufferGeometry } from 'three';\nimport { InstancesStore } from '../stores';\nimport type { AnyConstructor } from '../typings';\n\n@Directive()\nexport abstract class ThreeBufferGeometry<\n  TGeometry extends BufferGeometry = BufferGeometry\n> implements OnInit, OnDestroy\n{\n  @Input() ngtId?: string;\n\n  constructor(\n    @SkipSelf() protected readonly instancesStore: InstancesStore,\n    private readonly ngZone: NgZone\n  ) {}\n\n  abstract geometryType: AnyConstructor<TGeometry>;\n\n  private _extraArgs: unknown[] = [];\n  protected set extraArgs(v: unknown[]) {\n    this._extraArgs = v;\n    this.ngZone.runOutsideAngular(() => {\n      this.init();\n    });\n  }\n\n  ngOnInit() {\n    this.ngZone.runOutsideAngular(() => {\n      if (!this.bufferGeometry) {\n        this.init();\n      }\n    });\n  }\n\n  private init() {\n    this._bufferGeometry = new this.geometryType(...this._extraArgs);\n\n    this.instancesStore.saveBufferGeometry({\n      id: this.ngtId,\n      bufferGeometry: this._bufferGeometry,\n    });\n  }\n\n  private _bufferGeometry!: TGeometry;\n  get bufferGeometry(): TGeometry {\n    return this._bufferGeometry;\n  }\n\n  ngOnDestroy() {\n    this.ngZone.runOutsideAngular(() => {\n      if (this.bufferGeometry) {\n        this.instancesStore.removeBufferGeometry(\n          this.ngtId || this.bufferGeometry.uuid\n        );\n        this.bufferGeometry.dispose();\n      }\n    });\n  }\n}\n","import { Directive, Input, NgZone, OnInit, Optional } from '@angular/core';\nimport { Curve, Vector, Vector2, Vector3 } from 'three';\nimport type { AnyConstructor } from '../typings';\nimport { ThreeBufferGeometry } from './geometry.abstract';\n\n@Directive()\nexport abstract class ThreeCurve<TCurve extends Curve<Vector> = Curve<Vector>>\n  implements OnInit\n{\n  @Input() divisions?: number;\n\n  abstract curveType: AnyConstructor<TCurve>;\n\n  private _extraArgs: unknown[] = [];\n\n  protected set extraArgs(v: unknown[]) {\n    this._extraArgs = v;\n    this.ngZone.runOutsideAngular(() => {\n      this.init();\n    });\n  }\n\n  constructor(\n    private readonly ngZone: NgZone,\n    @Optional() private readonly geometryDirective?: ThreeBufferGeometry\n  ) {}\n\n  private _curve?: TCurve;\n\n  ngOnInit() {\n    this.ngZone.runOutsideAngular(() => {\n      if (!this.curve) {\n        this.init();\n      }\n    });\n  }\n\n  private init() {\n    this._curve = new this.curveType(...this._extraArgs);\n    if (this.curve && this.geometryDirective) {\n      const points = this.curve.getPoints(this.divisions);\n      this.geometryDirective.bufferGeometry.setFromPoints(\n        points as unknown as Vector3[] | Vector2[]\n      );\n    }\n  }\n\n  get curve(): TCurve | undefined {\n    return this._curve;\n  }\n}\n","import {\n  Directive,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n} from '@angular/core';\nimport type { BuiltinShaderAttributeName } from 'three';\nimport { BufferAttribute } from 'three';\nimport type { AnyConstructor } from '../typings';\nimport { ThreeBufferGeometry } from './geometry.abstract';\n\n@Directive()\nexport abstract class ThreeAttribute<\n  TAttribute extends BufferAttribute = BufferAttribute\n> implements OnInit, OnChanges, OnDestroy\n{\n  @Input() attach?: BuiltinShaderAttributeName;\n\n  abstract attributeType: AnyConstructor<TAttribute>;\n\n  constructor(\n    protected readonly ngZone: NgZone,\n    @Optional() protected readonly geometryDirective?: ThreeBufferGeometry\n  ) {}\n\n  private _extraArgs: unknown[] = [];\n\n  protected set extraArgs(v: unknown[]) {\n    this._extraArgs = v;\n    this.ngZone.runOutsideAngular(() => {\n      this.init();\n    });\n  }\n\n  private _attribute?: TAttribute;\n\n  ngOnChanges() {\n    this.ngZone.runOutsideAngular(() => {\n      if (this.attribute) {\n        this.attribute.needsUpdate = true;\n      }\n    });\n  }\n\n  ngOnInit() {\n    this.ngZone.runOutsideAngular(() => {\n      if (!this.attribute) {\n        this.init();\n      }\n    });\n  }\n\n  private init() {\n    if (this.geometryDirective && this.attach) {\n      this._attribute = new this.attributeType(...this._extraArgs);\n      if (this.attribute) {\n        this.geometryDirective.bufferGeometry.setAttribute(\n          this.attach,\n          this.attribute\n        );\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this.ngZone.runOutsideAngular(() => {\n      if (this.geometryDirective && this.attach) {\n        this.geometryDirective.bufferGeometry.deleteAttribute(this.attach);\n      }\n    });\n  }\n\n  get attribute(): TAttribute | undefined {\n    return this._attribute;\n  }\n}\n","import type { QueryList } from '@angular/core';\nimport { ContentChild, ContentChildren, Directive } from '@angular/core';\nimport { Line } from 'three';\nimport type { AnyConstructor } from '../typings';\nimport { ThreeBufferGeometry } from './geometry.abstract';\nimport { ThreeMaterial } from './material.abstract';\nimport { ThreeObject3dMaterialGeometry } from './object-3d-material-geometry.abstract';\n\n@Directive()\nexport abstract class ThreeLine<\n  TLine extends Line = Line\n> extends ThreeObject3dMaterialGeometry<TLine> {\n  @ContentChildren(ThreeMaterial) set materialDirectives(\n    v: QueryList<ThreeMaterial>\n  ) {\n    if (this.material == null && v) {\n      this.material =\n        v.length === 1\n          ? v.first.material\n          : v.toArray().map((dir) => dir.material);\n    }\n  }\n\n  @ContentChild(ThreeBufferGeometry)\n  set bufferGeometryDirective(v: ThreeBufferGeometry) {\n    if (this.geometry == null) {\n      this.geometry = v.bufferGeometry;\n    }\n  }\n\n  abstract lineType: AnyConstructor<TLine>;\n\n  get objectType(): AnyConstructor<TLine> {\n    return this.lineType;\n  }\n}\n","import type { QueryList } from '@angular/core';\nimport { ContentChild, ContentChildren, Directive } from '@angular/core';\nimport { Mesh } from 'three';\nimport type { AnyConstructor } from '../typings';\nimport { ThreeBufferGeometry } from './geometry.abstract';\nimport { ThreeMaterial } from './material.abstract';\nimport { ThreeObject3dMaterialGeometry } from './object-3d-material-geometry.abstract';\n\n@Directive()\nexport abstract class ThreeMesh<\n  TMesh extends Mesh = Mesh\n> extends ThreeObject3dMaterialGeometry<TMesh> {\n  @ContentChildren(ThreeMaterial) set materialDirectives(\n    v: QueryList<ThreeMaterial>\n  ) {\n    if (this.material == null && v) {\n      this.material =\n        v.length === 1\n          ? v.first.material\n          : v.toArray().map((dir) => dir.material);\n    }\n  }\n\n  @ContentChild(ThreeBufferGeometry)\n  set bufferGeometryDirective(v: ThreeBufferGeometry) {\n    if (this.geometry == null && v) {\n      this.geometry = v.bufferGeometry;\n    }\n  }\n\n  abstract meshType: AnyConstructor<TMesh>;\n\n  get objectType(): AnyConstructor<TMesh> {\n    return this.meshType;\n  }\n}\n","import {\n  AfterContentInit,\n  ContentChild,\n  Directive,\n  Input,\n} from '@angular/core';\nimport { Sprite, SpriteMaterial } from 'three';\nimport { AnyConstructor } from '../typings';\nimport { ThreeMaterial } from './material.abstract';\nimport { ThreeObject3d } from './object-3d.abstract';\n\n@Directive()\nexport abstract class ThreeSprite<TSprite extends Sprite = Sprite>\n  extends ThreeObject3d<TSprite>\n  implements AfterContentInit\n{\n  @Input() material?: SpriteMaterial;\n\n  @ContentChild(ThreeMaterial) materialDirective?: ThreeMaterial;\n\n  abstract spriteType: AnyConstructor<TSprite>;\n\n  private _sprite!: TSprite;\n\n  ngAfterContentInit() {\n    this.init();\n  }\n\n  protected initObject() {\n    if (this.material) {\n      this._sprite = new this.spriteType(this.material);\n      return;\n    }\n\n    if (this.materialDirective) {\n      if (this.materialDirective.material instanceof SpriteMaterial) {\n        this._sprite = new this.spriteType(this.materialDirective.material);\n        return;\n      }\n\n      console.warn(`Sprite can only be instantiated with SpriteMaterial`);\n    }\n  }\n\n  get object3d(): TSprite {\n    return this._sprite;\n  }\n}\n","import { Directive, OnInit } from '@angular/core';\nimport type { Camera } from 'three';\nimport type { AnyConstructor } from '../typings';\nimport { ThreeObject3d } from './object-3d.abstract';\n\n@Directive()\nexport abstract class ThreeCamera<TCamera extends Camera = Camera>\n  extends ThreeObject3d<TCamera>\n  implements OnInit\n{\n  abstract cameraType: AnyConstructor<TCamera>;\n\n  private _extraArgs: unknown[] = [];\n  protected set extraArgs(v: unknown[]) {\n    this._extraArgs = v;\n    this.ngZone.runOutsideAngular(() => {\n      this.init();\n    });\n  }\n\n  private _camera!: TCamera;\n\n  ngOnInit() {\n    if (!this.object3d) {\n      this.init();\n    }\n  }\n\n  protected initObject() {\n    this._camera = new this.cameraType(...this._extraArgs);\n  }\n\n  get object3d(): TCamera {\n    return this._camera;\n  }\n}\n","import {\n  Directive,\n  EventEmitter,\n  Inject,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  SkipSelf,\n} from '@angular/core';\nimport { Object3D } from 'three';\nimport { AnimationLoopParticipant, ThreeObject3d } from '../abstracts';\nimport { Object3dControllerDirective } from '../controllers';\nimport {\n  OBJECT_3D_CONTROLLER_PROVIDER,\n  OBJECT_3D_WATCHED_CONTROLLER,\n} from '../di';\nimport { AnimationStore, CanvasStore } from '../stores';\n\n@Directive({\n  selector: 'ngt-primitive',\n  exportAs: 'ngtPrimitive',\n  providers: [\n    {\n      provide: ThreeObject3d,\n      useExisting: PrimitiveDirective,\n    },\n    OBJECT_3D_CONTROLLER_PROVIDER,\n  ],\n})\nexport class PrimitiveDirective<TObject = unknown>\n  extends AnimationLoopParticipant<TObject>\n  implements OnInit, OnDestroy\n{\n  @Output() ready = new EventEmitter<TObject>();\n\n  get object(): TObject {\n    return this._object;\n  }\n\n  @Input()\n  set object(value: TObject) {\n    if (value == null) {\n      console.error('[object] is required');\n    }\n    this._object = value;\n    if (value) {\n      this.ready.emit(value);\n      this.participate(value);\n    }\n  }\n\n  private _object!: TObject;\n\n  constructor(\n    readonly animationStore: AnimationStore,\n    readonly ngZone: NgZone,\n    @Inject(OBJECT_3D_WATCHED_CONTROLLER)\n    private readonly object3dController: Object3dControllerDirective,\n    private readonly canvasStore: CanvasStore,\n    @Optional()\n    @SkipSelf()\n    protected readonly parentObjectDirective?: ThreeObject3d\n  ) {\n    super(animationStore, ngZone);\n  }\n\n  get object3d(): TObject {\n    return this._object;\n  }\n\n  ngOnInit() {\n    this.ngZone.runOutsideAngular(() => {\n      this.appendToParent();\n    });\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this.ngZone.runOutsideAngular(() => {\n      if (this.object3d) {\n        this.remove();\n      }\n    });\n  }\n\n  private appendToParent() {\n    if (this.object3d && this.object3d instanceof Object3D) {\n      if (this.object3dController.appendTo) {\n        this.object3dController.appendTo.add(this.object3d);\n        return;\n      }\n\n      const { scene } = this.canvasStore.getImperativeState();\n      if (this.object3dController.appendMode === 'root') {\n        if (scene) {\n          scene.add(this.object3d);\n        }\n        return;\n      }\n\n      if (this.object3dController.appendMode === 'immediate') {\n        if (this.parentObjectDirective) {\n          this.parentObjectDirective.object3d.add(this.object3d);\n        } else {\n          if (scene) {\n            scene.add(this.object3d);\n          }\n        }\n      }\n    }\n  }\n\n  protected remove() {\n    if (this.object3d instanceof Object3D) {\n      if (this.object3dController.appendTo) {\n        this.object3dController.appendTo.remove(this.object3d);\n      } else if (\n        this.parentObjectDirective &&\n        this.object3dController.appendMode === 'immediate'\n      ) {\n        this.parentObjectDirective.object3d.remove(this.object3d);\n      } else {\n        const { scene } = this.canvasStore.getImperativeState();\n        if (scene) {\n          scene.remove(this.object3d);\n        }\n      }\n\n      this.object3d.clear();\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { PrimitiveDirective } from './primitive.directive';\n\n@NgModule({\n  declarations: [PrimitiveDirective],\n  exports: [PrimitiveDirective],\n})\nexport class ThreePrimitiveModule {}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'math',\n  pure: true,\n})\nexport class MathPipe implements PipeTransform {\n  transform(\n    value: number | number[],\n    keyOfMath: keyof Omit<\n      Math,\n      | 'PI'\n      | 'E'\n      | 'LN2'\n      | 'LOG2E'\n      | 'LN10'\n      | 'LOG10E'\n      | 'SQRT1_2'\n      | 'SQRT2'\n      | 'random'\n    >\n  ): ReturnType<Extract<Math[typeof keyOfMath], 'string'>> {\n    const params: number[] = Array.isArray(value) ? value : [value];\n    return (Math[keyOfMath] as unknown as (...args: number[]) => number)(\n      ...params\n    ) as ReturnType<Extract<Math[typeof keyOfMath], 'string'>>;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { MathPipe } from './math.pipe';\n\n@NgModule({\n  declarations: [MathPipe],\n  exports: [MathPipe],\n})\nexport class ThreeMathPipeModule {}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'mathConst',\n  pure: true,\n})\nexport class MathConstantPipe implements PipeTransform {\n  transform(\n    value: number | 0,\n    keyOfMathConst:\n      | 'PI'\n      | 'E'\n      | 'LN2'\n      | 'LOG2E'\n      | 'LN10'\n      | 'LOG10E'\n      | 'SQRT1_2'\n      | 'SQRT2'\n      | 'random'\n  ): number {\n    if (keyOfMathConst === 'random') {\n      return Math.random();\n    }\n\n    return value * Math[keyOfMathConst];\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { MathConstantPipe } from './math-constant.pipe';\n\n@NgModule({\n  declarations: [MathConstantPipe],\n  exports: [MathConstantPipe],\n})\nexport class ThreeMathConstantPipeModule {}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport * as THREE from 'three';\n\n@Pipe({\n  name: 'color',\n  pure: true,\n})\nexport class ColorPipe implements PipeTransform {\n  /**\n   * ConstructorParameters<typeof THREE.Color> has a limitation on THREE.Color constructor overloads\n   */\n  transform(\n    args: Array<THREE.Color | string | number> | [number, number, number]\n  ): THREE.Color {\n    return new THREE.Color(...args);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { ColorPipe } from './color.pipe';\n\n@NgModule({\n  declarations: [ColorPipe],\n  exports: [ColorPipe],\n})\nexport class ThreeColorPipeModule {}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport * as THREE from 'three';\n\n@Pipe({\n  name: 'fog',\n  pure: true,\n})\nexport class FogPipe implements PipeTransform {\n  transform(args: ConstructorParameters<typeof THREE.Fog>): THREE.Fog {\n    return new THREE.Fog(...args);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { FogPipe } from './fog.pipe';\n\n@NgModule({\n  declarations: [FogPipe],\n  exports: [FogPipe],\n})\nexport class ThreeFogPipeModule {}\n","import {\n  Directive,\n  Inject,\n  Input,\n  TemplateRef,\n  ViewContainerRef,\n} from '@angular/core';\n\nconst MAX_VALUE = 0x10000;\n\nexport interface RepeatContext {\n  $implicit: number;\n  isOdd: boolean;\n  isEven: boolean;\n  isFirst: boolean;\n  isLast: boolean;\n}\n\n@Directive({\n  selector: '[repeat][repeatOf]',\n})\nexport class RepeatDirective {\n  @Input()\n  set repeatOf(count: number) {\n    const safeCount = Math.floor(Math.max(0, Math.min(count, MAX_VALUE)));\n    const { length } = this.viewContainer;\n\n    if (safeCount < length) {\n      this.removeContainers(length - safeCount);\n    } else {\n      this.addContainers(length, safeCount);\n    }\n  }\n\n  constructor(\n    @Inject(ViewContainerRef) private readonly viewContainer: ViewContainerRef,\n    @Inject(TemplateRef)\n    private readonly templateRef: TemplateRef<RepeatContext>\n  ) {}\n\n  private addContainers(length: number, count: number) {\n    for (let index = length; index < count; index++) {\n      this.viewContainer.createEmbeddedView<RepeatContext>(this.templateRef, {\n        $implicit: index,\n        isFirst: index === length,\n        isLast: index === count - 1,\n        isOdd: !(index % 2),\n        isEven: !!(index % 2),\n      });\n    }\n  }\n\n  private removeContainers(amount: number) {\n    for (let index = 0; index < amount; index++) {\n      this.viewContainer.remove();\n    }\n  }\n\n  static ngTemplateContextGuard(\n    dir: RepeatDirective,\n    ctx: unknown\n  ): ctx is RepeatContext {\n    return true;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RepeatDirective } from './repeat.directive';\n\n@NgModule({\n  declarations: [RepeatDirective],\n  exports: [RepeatDirective],\n})\nexport class ThreeRepeatModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}