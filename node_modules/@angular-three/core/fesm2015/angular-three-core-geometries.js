import { ThreeBufferGeometry } from '@angular-three/core';
import * as i0 from '@angular/core';
import { Directive, Input, NgModule } from '@angular/core';
import { BufferGeometry, InstancedBufferGeometry, BoxBufferGeometry, CircleBufferGeometry, ConeBufferGeometry, CylinderBufferGeometry, DodecahedronBufferGeometry, ExtrudeBufferGeometry, IcosahedronBufferGeometry, LatheBufferGeometry, OctahedronBufferGeometry, PlaneBufferGeometry, PolyhedronBufferGeometry, RingBufferGeometry, ShapeBufferGeometry, SphereBufferGeometry, TetrahedronBufferGeometry, TorusBufferGeometry, TorusKnotBufferGeometry, TubeBufferGeometry, WireframeGeometry, EdgesGeometry } from 'three';
import { BoxLineGeometry } from 'three/examples/jsm/geometries/BoxLineGeometry';
import { ConvexGeometry } from 'three/examples/jsm/geometries/ConvexGeometry';
import { DecalGeometry } from 'three/examples/jsm/geometries/DecalGeometry';
import { ParametricGeometry } from 'three/examples/jsm/geometries/ParametricGeometry';
import { RoundedBoxGeometry } from 'three/examples/jsm/geometries/RoundedBoxGeometry';
import { TeapotGeometry } from 'three/examples/jsm/geometries/TeapotGeometry';
import { TextGeometry } from 'three/examples/jsm/geometries/TextGeometry';

// GENERATED
class BufferGeometryDirective extends ThreeBufferGeometry {
    constructor() {
        super(...arguments);
        this.geometryType = BufferGeometry;
    }
    set args(v) {
        this.extraArgs = v;
    }
}
BufferGeometryDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: BufferGeometryDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
BufferGeometryDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.10", type: BufferGeometryDirective, selector: "ngt-buffer-geometry", inputs: { args: "args" }, providers: [
        {
            provide: ThreeBufferGeometry,
            useExisting: BufferGeometryDirective,
        },
    ], exportAs: ["ngtBufferGeometry"], usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: BufferGeometryDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'ngt-buffer-geometry',
                    exportAs: 'ngtBufferGeometry',
                    providers: [
                        {
                            provide: ThreeBufferGeometry,
                            useExisting: BufferGeometryDirective,
                        },
                    ],
                }]
        }], propDecorators: { args: [{
                type: Input
            }] } });

// GENERATED
class ThreeBufferGeometryModule {
}
ThreeBufferGeometryModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeBufferGeometryModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
ThreeBufferGeometryModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeBufferGeometryModule, declarations: [BufferGeometryDirective], exports: [BufferGeometryDirective] });
ThreeBufferGeometryModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeBufferGeometryModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeBufferGeometryModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [BufferGeometryDirective],
                    exports: [BufferGeometryDirective],
                }]
        }] });

// GENERATED

// GENERATED
class InstancedBufferGeometryDirective extends ThreeBufferGeometry {
    constructor() {
        super(...arguments);
        this.geometryType = InstancedBufferGeometry;
    }
    set args(v) {
        this.extraArgs = v;
    }
}
InstancedBufferGeometryDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: InstancedBufferGeometryDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
InstancedBufferGeometryDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.10", type: InstancedBufferGeometryDirective, selector: "ngt-instanced-buffer-geometry,ngt-instanced-geometry", inputs: { args: "args" }, providers: [
        {
            provide: ThreeBufferGeometry,
            useExisting: InstancedBufferGeometryDirective,
        },
    ], exportAs: ["ngtInstancedBufferGeometry"], usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: InstancedBufferGeometryDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'ngt-instanced-buffer-geometry,ngt-instanced-geometry',
                    exportAs: 'ngtInstancedBufferGeometry',
                    providers: [
                        {
                            provide: ThreeBufferGeometry,
                            useExisting: InstancedBufferGeometryDirective,
                        },
                    ],
                }]
        }], propDecorators: { args: [{
                type: Input
            }] } });

// GENERATED
class ThreeInstancedBufferGeometryModule {
}
ThreeInstancedBufferGeometryModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeInstancedBufferGeometryModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
ThreeInstancedBufferGeometryModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeInstancedBufferGeometryModule, declarations: [InstancedBufferGeometryDirective], exports: [InstancedBufferGeometryDirective] });
ThreeInstancedBufferGeometryModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeInstancedBufferGeometryModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeInstancedBufferGeometryModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [InstancedBufferGeometryDirective],
                    exports: [InstancedBufferGeometryDirective],
                }]
        }] });

// GENERATED

// GENERATED
class BoxBufferGeometryDirective extends ThreeBufferGeometry {
    constructor() {
        super(...arguments);
        this.geometryType = BoxBufferGeometry;
    }
    set args(v) {
        this.extraArgs = v;
    }
}
BoxBufferGeometryDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: BoxBufferGeometryDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
BoxBufferGeometryDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.10", type: BoxBufferGeometryDirective, selector: "ngt-box-buffer-geometry,ngt-box-geometry", inputs: { args: "args" }, providers: [
        {
            provide: ThreeBufferGeometry,
            useExisting: BoxBufferGeometryDirective,
        },
    ], exportAs: ["ngtBoxBufferGeometry"], usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: BoxBufferGeometryDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'ngt-box-buffer-geometry,ngt-box-geometry',
                    exportAs: 'ngtBoxBufferGeometry',
                    providers: [
                        {
                            provide: ThreeBufferGeometry,
                            useExisting: BoxBufferGeometryDirective,
                        },
                    ],
                }]
        }], propDecorators: { args: [{
                type: Input
            }] } });

// GENERATED
class ThreeBoxBufferGeometryModule {
}
ThreeBoxBufferGeometryModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeBoxBufferGeometryModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
ThreeBoxBufferGeometryModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeBoxBufferGeometryModule, declarations: [BoxBufferGeometryDirective], exports: [BoxBufferGeometryDirective] });
ThreeBoxBufferGeometryModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeBoxBufferGeometryModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeBoxBufferGeometryModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [BoxBufferGeometryDirective],
                    exports: [BoxBufferGeometryDirective],
                }]
        }] });

// GENERATED

// GENERATED
class CircleBufferGeometryDirective extends ThreeBufferGeometry {
    constructor() {
        super(...arguments);
        this.geometryType = CircleBufferGeometry;
    }
    set args(v) {
        this.extraArgs = v;
    }
}
CircleBufferGeometryDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: CircleBufferGeometryDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
CircleBufferGeometryDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.10", type: CircleBufferGeometryDirective, selector: "ngt-circle-buffer-geometry,ngt-circle-geometry", inputs: { args: "args" }, providers: [
        {
            provide: ThreeBufferGeometry,
            useExisting: CircleBufferGeometryDirective,
        },
    ], exportAs: ["ngtCircleBufferGeometry"], usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: CircleBufferGeometryDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'ngt-circle-buffer-geometry,ngt-circle-geometry',
                    exportAs: 'ngtCircleBufferGeometry',
                    providers: [
                        {
                            provide: ThreeBufferGeometry,
                            useExisting: CircleBufferGeometryDirective,
                        },
                    ],
                }]
        }], propDecorators: { args: [{
                type: Input
            }] } });

// GENERATED
class ThreeCircleBufferGeometryModule {
}
ThreeCircleBufferGeometryModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeCircleBufferGeometryModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
ThreeCircleBufferGeometryModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeCircleBufferGeometryModule, declarations: [CircleBufferGeometryDirective], exports: [CircleBufferGeometryDirective] });
ThreeCircleBufferGeometryModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeCircleBufferGeometryModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeCircleBufferGeometryModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [CircleBufferGeometryDirective],
                    exports: [CircleBufferGeometryDirective],
                }]
        }] });

// GENERATED

// GENERATED
class ConeBufferGeometryDirective extends ThreeBufferGeometry {
    constructor() {
        super(...arguments);
        this.geometryType = ConeBufferGeometry;
    }
    set args(v) {
        this.extraArgs = v;
    }
}
ConeBufferGeometryDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ConeBufferGeometryDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
ConeBufferGeometryDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.10", type: ConeBufferGeometryDirective, selector: "ngt-cone-buffer-geometry,ngt-cone-geometry", inputs: { args: "args" }, providers: [
        {
            provide: ThreeBufferGeometry,
            useExisting: ConeBufferGeometryDirective,
        },
    ], exportAs: ["ngtConeBufferGeometry"], usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ConeBufferGeometryDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'ngt-cone-buffer-geometry,ngt-cone-geometry',
                    exportAs: 'ngtConeBufferGeometry',
                    providers: [
                        {
                            provide: ThreeBufferGeometry,
                            useExisting: ConeBufferGeometryDirective,
                        },
                    ],
                }]
        }], propDecorators: { args: [{
                type: Input
            }] } });

// GENERATED
class ThreeConeBufferGeometryModule {
}
ThreeConeBufferGeometryModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeConeBufferGeometryModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
ThreeConeBufferGeometryModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeConeBufferGeometryModule, declarations: [ConeBufferGeometryDirective], exports: [ConeBufferGeometryDirective] });
ThreeConeBufferGeometryModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeConeBufferGeometryModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeConeBufferGeometryModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [ConeBufferGeometryDirective],
                    exports: [ConeBufferGeometryDirective],
                }]
        }] });

// GENERATED

// GENERATED
class CylinderBufferGeometryDirective extends ThreeBufferGeometry {
    constructor() {
        super(...arguments);
        this.geometryType = CylinderBufferGeometry;
    }
    set args(v) {
        this.extraArgs = v;
    }
}
CylinderBufferGeometryDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: CylinderBufferGeometryDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
CylinderBufferGeometryDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.10", type: CylinderBufferGeometryDirective, selector: "ngt-cylinder-buffer-geometry,ngt-cylinder-geometry", inputs: { args: "args" }, providers: [
        {
            provide: ThreeBufferGeometry,
            useExisting: CylinderBufferGeometryDirective,
        },
    ], exportAs: ["ngtCylinderBufferGeometry"], usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: CylinderBufferGeometryDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'ngt-cylinder-buffer-geometry,ngt-cylinder-geometry',
                    exportAs: 'ngtCylinderBufferGeometry',
                    providers: [
                        {
                            provide: ThreeBufferGeometry,
                            useExisting: CylinderBufferGeometryDirective,
                        },
                    ],
                }]
        }], propDecorators: { args: [{
                type: Input
            }] } });

// GENERATED
class ThreeCylinderBufferGeometryModule {
}
ThreeCylinderBufferGeometryModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeCylinderBufferGeometryModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
ThreeCylinderBufferGeometryModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeCylinderBufferGeometryModule, declarations: [CylinderBufferGeometryDirective], exports: [CylinderBufferGeometryDirective] });
ThreeCylinderBufferGeometryModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeCylinderBufferGeometryModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeCylinderBufferGeometryModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [CylinderBufferGeometryDirective],
                    exports: [CylinderBufferGeometryDirective],
                }]
        }] });

// GENERATED

// GENERATED
class DodecahedronBufferGeometryDirective extends ThreeBufferGeometry {
    constructor() {
        super(...arguments);
        this.geometryType = DodecahedronBufferGeometry;
    }
    set args(v) {
        this.extraArgs = v;
    }
}
DodecahedronBufferGeometryDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: DodecahedronBufferGeometryDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
DodecahedronBufferGeometryDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.10", type: DodecahedronBufferGeometryDirective, selector: "ngt-dodecahedron-buffer-geometry,ngt-dodecahedron-geometry", inputs: { args: "args" }, providers: [
        {
            provide: ThreeBufferGeometry,
            useExisting: DodecahedronBufferGeometryDirective,
        },
    ], exportAs: ["ngtDodecahedronBufferGeometry"], usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: DodecahedronBufferGeometryDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'ngt-dodecahedron-buffer-geometry,ngt-dodecahedron-geometry',
                    exportAs: 'ngtDodecahedronBufferGeometry',
                    providers: [
                        {
                            provide: ThreeBufferGeometry,
                            useExisting: DodecahedronBufferGeometryDirective,
                        },
                    ],
                }]
        }], propDecorators: { args: [{
                type: Input
            }] } });

// GENERATED
class ThreeDodecahedronBufferGeometryModule {
}
ThreeDodecahedronBufferGeometryModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeDodecahedronBufferGeometryModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
ThreeDodecahedronBufferGeometryModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeDodecahedronBufferGeometryModule, declarations: [DodecahedronBufferGeometryDirective], exports: [DodecahedronBufferGeometryDirective] });
ThreeDodecahedronBufferGeometryModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeDodecahedronBufferGeometryModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeDodecahedronBufferGeometryModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [DodecahedronBufferGeometryDirective],
                    exports: [DodecahedronBufferGeometryDirective],
                }]
        }] });

// GENERATED

// GENERATED
class ExtrudeBufferGeometryDirective extends ThreeBufferGeometry {
    constructor() {
        super(...arguments);
        this.geometryType = ExtrudeBufferGeometry;
    }
    set args(v) {
        this.extraArgs = v;
    }
}
ExtrudeBufferGeometryDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ExtrudeBufferGeometryDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
ExtrudeBufferGeometryDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.10", type: ExtrudeBufferGeometryDirective, selector: "ngt-extrude-buffer-geometry,ngt-extrude-geometry", inputs: { args: "args" }, providers: [
        {
            provide: ThreeBufferGeometry,
            useExisting: ExtrudeBufferGeometryDirective,
        },
    ], exportAs: ["ngtExtrudeBufferGeometry"], usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ExtrudeBufferGeometryDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'ngt-extrude-buffer-geometry,ngt-extrude-geometry',
                    exportAs: 'ngtExtrudeBufferGeometry',
                    providers: [
                        {
                            provide: ThreeBufferGeometry,
                            useExisting: ExtrudeBufferGeometryDirective,
                        },
                    ],
                }]
        }], propDecorators: { args: [{
                type: Input
            }] } });

// GENERATED
class ThreeExtrudeBufferGeometryModule {
}
ThreeExtrudeBufferGeometryModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeExtrudeBufferGeometryModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
ThreeExtrudeBufferGeometryModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeExtrudeBufferGeometryModule, declarations: [ExtrudeBufferGeometryDirective], exports: [ExtrudeBufferGeometryDirective] });
ThreeExtrudeBufferGeometryModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeExtrudeBufferGeometryModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeExtrudeBufferGeometryModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [ExtrudeBufferGeometryDirective],
                    exports: [ExtrudeBufferGeometryDirective],
                }]
        }] });

// GENERATED

// GENERATED
class IcosahedronBufferGeometryDirective extends ThreeBufferGeometry {
    constructor() {
        super(...arguments);
        this.geometryType = IcosahedronBufferGeometry;
    }
    set args(v) {
        this.extraArgs = v;
    }
}
IcosahedronBufferGeometryDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: IcosahedronBufferGeometryDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
IcosahedronBufferGeometryDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.10", type: IcosahedronBufferGeometryDirective, selector: "ngt-icosahedron-buffer-geometry,ngt-icosahedron-geometry", inputs: { args: "args" }, providers: [
        {
            provide: ThreeBufferGeometry,
            useExisting: IcosahedronBufferGeometryDirective,
        },
    ], exportAs: ["ngtIcosahedronBufferGeometry"], usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: IcosahedronBufferGeometryDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'ngt-icosahedron-buffer-geometry,ngt-icosahedron-geometry',
                    exportAs: 'ngtIcosahedronBufferGeometry',
                    providers: [
                        {
                            provide: ThreeBufferGeometry,
                            useExisting: IcosahedronBufferGeometryDirective,
                        },
                    ],
                }]
        }], propDecorators: { args: [{
                type: Input
            }] } });

// GENERATED
class ThreeIcosahedronBufferGeometryModule {
}
ThreeIcosahedronBufferGeometryModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeIcosahedronBufferGeometryModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
ThreeIcosahedronBufferGeometryModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeIcosahedronBufferGeometryModule, declarations: [IcosahedronBufferGeometryDirective], exports: [IcosahedronBufferGeometryDirective] });
ThreeIcosahedronBufferGeometryModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeIcosahedronBufferGeometryModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeIcosahedronBufferGeometryModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [IcosahedronBufferGeometryDirective],
                    exports: [IcosahedronBufferGeometryDirective],
                }]
        }] });

// GENERATED

// GENERATED
class LatheBufferGeometryDirective extends ThreeBufferGeometry {
    constructor() {
        super(...arguments);
        this.geometryType = LatheBufferGeometry;
    }
    set args(v) {
        this.extraArgs = v;
    }
}
LatheBufferGeometryDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: LatheBufferGeometryDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
LatheBufferGeometryDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.10", type: LatheBufferGeometryDirective, selector: "ngt-lathe-buffer-geometry,ngt-lathe-geometry", inputs: { args: "args" }, providers: [
        {
            provide: ThreeBufferGeometry,
            useExisting: LatheBufferGeometryDirective,
        },
    ], exportAs: ["ngtLatheBufferGeometry"], usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: LatheBufferGeometryDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'ngt-lathe-buffer-geometry,ngt-lathe-geometry',
                    exportAs: 'ngtLatheBufferGeometry',
                    providers: [
                        {
                            provide: ThreeBufferGeometry,
                            useExisting: LatheBufferGeometryDirective,
                        },
                    ],
                }]
        }], propDecorators: { args: [{
                type: Input
            }] } });

// GENERATED
class ThreeLatheBufferGeometryModule {
}
ThreeLatheBufferGeometryModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeLatheBufferGeometryModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
ThreeLatheBufferGeometryModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeLatheBufferGeometryModule, declarations: [LatheBufferGeometryDirective], exports: [LatheBufferGeometryDirective] });
ThreeLatheBufferGeometryModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeLatheBufferGeometryModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeLatheBufferGeometryModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [LatheBufferGeometryDirective],
                    exports: [LatheBufferGeometryDirective],
                }]
        }] });

// GENERATED

// GENERATED
class OctahedronBufferGeometryDirective extends ThreeBufferGeometry {
    constructor() {
        super(...arguments);
        this.geometryType = OctahedronBufferGeometry;
    }
    set args(v) {
        this.extraArgs = v;
    }
}
OctahedronBufferGeometryDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: OctahedronBufferGeometryDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
OctahedronBufferGeometryDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.10", type: OctahedronBufferGeometryDirective, selector: "ngt-octahedron-buffer-geometry,ngt-octahedron-geometry", inputs: { args: "args" }, providers: [
        {
            provide: ThreeBufferGeometry,
            useExisting: OctahedronBufferGeometryDirective,
        },
    ], exportAs: ["ngtOctahedronBufferGeometry"], usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: OctahedronBufferGeometryDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'ngt-octahedron-buffer-geometry,ngt-octahedron-geometry',
                    exportAs: 'ngtOctahedronBufferGeometry',
                    providers: [
                        {
                            provide: ThreeBufferGeometry,
                            useExisting: OctahedronBufferGeometryDirective,
                        },
                    ],
                }]
        }], propDecorators: { args: [{
                type: Input
            }] } });

// GENERATED
class ThreeOctahedronBufferGeometryModule {
}
ThreeOctahedronBufferGeometryModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeOctahedronBufferGeometryModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
ThreeOctahedronBufferGeometryModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeOctahedronBufferGeometryModule, declarations: [OctahedronBufferGeometryDirective], exports: [OctahedronBufferGeometryDirective] });
ThreeOctahedronBufferGeometryModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeOctahedronBufferGeometryModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeOctahedronBufferGeometryModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [OctahedronBufferGeometryDirective],
                    exports: [OctahedronBufferGeometryDirective],
                }]
        }] });

// GENERATED

// GENERATED
class PlaneBufferGeometryDirective extends ThreeBufferGeometry {
    constructor() {
        super(...arguments);
        this.geometryType = PlaneBufferGeometry;
    }
    set args(v) {
        this.extraArgs = v;
    }
}
PlaneBufferGeometryDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: PlaneBufferGeometryDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
PlaneBufferGeometryDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.10", type: PlaneBufferGeometryDirective, selector: "ngt-plane-buffer-geometry,ngt-plane-geometry", inputs: { args: "args" }, providers: [
        {
            provide: ThreeBufferGeometry,
            useExisting: PlaneBufferGeometryDirective,
        },
    ], exportAs: ["ngtPlaneBufferGeometry"], usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: PlaneBufferGeometryDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'ngt-plane-buffer-geometry,ngt-plane-geometry',
                    exportAs: 'ngtPlaneBufferGeometry',
                    providers: [
                        {
                            provide: ThreeBufferGeometry,
                            useExisting: PlaneBufferGeometryDirective,
                        },
                    ],
                }]
        }], propDecorators: { args: [{
                type: Input
            }] } });

// GENERATED
class ThreePlaneBufferGeometryModule {
}
ThreePlaneBufferGeometryModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreePlaneBufferGeometryModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
ThreePlaneBufferGeometryModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreePlaneBufferGeometryModule, declarations: [PlaneBufferGeometryDirective], exports: [PlaneBufferGeometryDirective] });
ThreePlaneBufferGeometryModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreePlaneBufferGeometryModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreePlaneBufferGeometryModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [PlaneBufferGeometryDirective],
                    exports: [PlaneBufferGeometryDirective],
                }]
        }] });

// GENERATED

// GENERATED
class PolyhedronBufferGeometryDirective extends ThreeBufferGeometry {
    constructor() {
        super(...arguments);
        this.geometryType = PolyhedronBufferGeometry;
    }
    set args(v) {
        this.extraArgs = v;
    }
}
PolyhedronBufferGeometryDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: PolyhedronBufferGeometryDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
PolyhedronBufferGeometryDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.10", type: PolyhedronBufferGeometryDirective, selector: "ngt-polyhedron-buffer-geometry,ngt-polyhedron-geometry", inputs: { args: "args" }, providers: [
        {
            provide: ThreeBufferGeometry,
            useExisting: PolyhedronBufferGeometryDirective,
        },
    ], exportAs: ["ngtPolyhedronBufferGeometry"], usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: PolyhedronBufferGeometryDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'ngt-polyhedron-buffer-geometry,ngt-polyhedron-geometry',
                    exportAs: 'ngtPolyhedronBufferGeometry',
                    providers: [
                        {
                            provide: ThreeBufferGeometry,
                            useExisting: PolyhedronBufferGeometryDirective,
                        },
                    ],
                }]
        }], propDecorators: { args: [{
                type: Input
            }] } });

// GENERATED
class ThreePolyhedronBufferGeometryModule {
}
ThreePolyhedronBufferGeometryModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreePolyhedronBufferGeometryModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
ThreePolyhedronBufferGeometryModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreePolyhedronBufferGeometryModule, declarations: [PolyhedronBufferGeometryDirective], exports: [PolyhedronBufferGeometryDirective] });
ThreePolyhedronBufferGeometryModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreePolyhedronBufferGeometryModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreePolyhedronBufferGeometryModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [PolyhedronBufferGeometryDirective],
                    exports: [PolyhedronBufferGeometryDirective],
                }]
        }] });

// GENERATED

// GENERATED
class RingBufferGeometryDirective extends ThreeBufferGeometry {
    constructor() {
        super(...arguments);
        this.geometryType = RingBufferGeometry;
    }
    set args(v) {
        this.extraArgs = v;
    }
}
RingBufferGeometryDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: RingBufferGeometryDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
RingBufferGeometryDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.10", type: RingBufferGeometryDirective, selector: "ngt-ring-buffer-geometry,ngt-ring-geometry", inputs: { args: "args" }, providers: [
        {
            provide: ThreeBufferGeometry,
            useExisting: RingBufferGeometryDirective,
        },
    ], exportAs: ["ngtRingBufferGeometry"], usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: RingBufferGeometryDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'ngt-ring-buffer-geometry,ngt-ring-geometry',
                    exportAs: 'ngtRingBufferGeometry',
                    providers: [
                        {
                            provide: ThreeBufferGeometry,
                            useExisting: RingBufferGeometryDirective,
                        },
                    ],
                }]
        }], propDecorators: { args: [{
                type: Input
            }] } });

// GENERATED
class ThreeRingBufferGeometryModule {
}
ThreeRingBufferGeometryModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeRingBufferGeometryModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
ThreeRingBufferGeometryModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeRingBufferGeometryModule, declarations: [RingBufferGeometryDirective], exports: [RingBufferGeometryDirective] });
ThreeRingBufferGeometryModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeRingBufferGeometryModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeRingBufferGeometryModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [RingBufferGeometryDirective],
                    exports: [RingBufferGeometryDirective],
                }]
        }] });

// GENERATED

// GENERATED
class ShapeBufferGeometryDirective extends ThreeBufferGeometry {
    constructor() {
        super(...arguments);
        this.geometryType = ShapeBufferGeometry;
    }
    set args(v) {
        this.extraArgs = v;
    }
}
ShapeBufferGeometryDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ShapeBufferGeometryDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
ShapeBufferGeometryDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.10", type: ShapeBufferGeometryDirective, selector: "ngt-shape-buffer-geometry,ngt-shape-geometry", inputs: { args: "args" }, providers: [
        {
            provide: ThreeBufferGeometry,
            useExisting: ShapeBufferGeometryDirective,
        },
    ], exportAs: ["ngtShapeBufferGeometry"], usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ShapeBufferGeometryDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'ngt-shape-buffer-geometry,ngt-shape-geometry',
                    exportAs: 'ngtShapeBufferGeometry',
                    providers: [
                        {
                            provide: ThreeBufferGeometry,
                            useExisting: ShapeBufferGeometryDirective,
                        },
                    ],
                }]
        }], propDecorators: { args: [{
                type: Input
            }] } });

// GENERATED
class ThreeShapeBufferGeometryModule {
}
ThreeShapeBufferGeometryModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeShapeBufferGeometryModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
ThreeShapeBufferGeometryModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeShapeBufferGeometryModule, declarations: [ShapeBufferGeometryDirective], exports: [ShapeBufferGeometryDirective] });
ThreeShapeBufferGeometryModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeShapeBufferGeometryModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeShapeBufferGeometryModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [ShapeBufferGeometryDirective],
                    exports: [ShapeBufferGeometryDirective],
                }]
        }] });

// GENERATED

// GENERATED
class SphereBufferGeometryDirective extends ThreeBufferGeometry {
    constructor() {
        super(...arguments);
        this.geometryType = SphereBufferGeometry;
    }
    set args(v) {
        this.extraArgs = v;
    }
}
SphereBufferGeometryDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: SphereBufferGeometryDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
SphereBufferGeometryDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.10", type: SphereBufferGeometryDirective, selector: "ngt-sphere-buffer-geometry,ngt-sphere-geometry", inputs: { args: "args" }, providers: [
        {
            provide: ThreeBufferGeometry,
            useExisting: SphereBufferGeometryDirective,
        },
    ], exportAs: ["ngtSphereBufferGeometry"], usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: SphereBufferGeometryDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'ngt-sphere-buffer-geometry,ngt-sphere-geometry',
                    exportAs: 'ngtSphereBufferGeometry',
                    providers: [
                        {
                            provide: ThreeBufferGeometry,
                            useExisting: SphereBufferGeometryDirective,
                        },
                    ],
                }]
        }], propDecorators: { args: [{
                type: Input
            }] } });

// GENERATED
class ThreeSphereBufferGeometryModule {
}
ThreeSphereBufferGeometryModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeSphereBufferGeometryModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
ThreeSphereBufferGeometryModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeSphereBufferGeometryModule, declarations: [SphereBufferGeometryDirective], exports: [SphereBufferGeometryDirective] });
ThreeSphereBufferGeometryModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeSphereBufferGeometryModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeSphereBufferGeometryModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [SphereBufferGeometryDirective],
                    exports: [SphereBufferGeometryDirective],
                }]
        }] });

// GENERATED

// GENERATED
class TetrahedronBufferGeometryDirective extends ThreeBufferGeometry {
    constructor() {
        super(...arguments);
        this.geometryType = TetrahedronBufferGeometry;
    }
    set args(v) {
        this.extraArgs = v;
    }
}
TetrahedronBufferGeometryDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: TetrahedronBufferGeometryDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
TetrahedronBufferGeometryDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.10", type: TetrahedronBufferGeometryDirective, selector: "ngt-tetrahedron-buffer-geometry,ngt-tetrahedron-geometry", inputs: { args: "args" }, providers: [
        {
            provide: ThreeBufferGeometry,
            useExisting: TetrahedronBufferGeometryDirective,
        },
    ], exportAs: ["ngtTetrahedronBufferGeometry"], usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: TetrahedronBufferGeometryDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'ngt-tetrahedron-buffer-geometry,ngt-tetrahedron-geometry',
                    exportAs: 'ngtTetrahedronBufferGeometry',
                    providers: [
                        {
                            provide: ThreeBufferGeometry,
                            useExisting: TetrahedronBufferGeometryDirective,
                        },
                    ],
                }]
        }], propDecorators: { args: [{
                type: Input
            }] } });

// GENERATED
class ThreeTetrahedronBufferGeometryModule {
}
ThreeTetrahedronBufferGeometryModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeTetrahedronBufferGeometryModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
ThreeTetrahedronBufferGeometryModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeTetrahedronBufferGeometryModule, declarations: [TetrahedronBufferGeometryDirective], exports: [TetrahedronBufferGeometryDirective] });
ThreeTetrahedronBufferGeometryModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeTetrahedronBufferGeometryModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeTetrahedronBufferGeometryModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [TetrahedronBufferGeometryDirective],
                    exports: [TetrahedronBufferGeometryDirective],
                }]
        }] });

// GENERATED

// GENERATED
class TorusBufferGeometryDirective extends ThreeBufferGeometry {
    constructor() {
        super(...arguments);
        this.geometryType = TorusBufferGeometry;
    }
    set args(v) {
        this.extraArgs = v;
    }
}
TorusBufferGeometryDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: TorusBufferGeometryDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
TorusBufferGeometryDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.10", type: TorusBufferGeometryDirective, selector: "ngt-torus-buffer-geometry,ngt-torus-geometry", inputs: { args: "args" }, providers: [
        {
            provide: ThreeBufferGeometry,
            useExisting: TorusBufferGeometryDirective,
        },
    ], exportAs: ["ngtTorusBufferGeometry"], usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: TorusBufferGeometryDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'ngt-torus-buffer-geometry,ngt-torus-geometry',
                    exportAs: 'ngtTorusBufferGeometry',
                    providers: [
                        {
                            provide: ThreeBufferGeometry,
                            useExisting: TorusBufferGeometryDirective,
                        },
                    ],
                }]
        }], propDecorators: { args: [{
                type: Input
            }] } });

// GENERATED
class ThreeTorusBufferGeometryModule {
}
ThreeTorusBufferGeometryModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeTorusBufferGeometryModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
ThreeTorusBufferGeometryModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeTorusBufferGeometryModule, declarations: [TorusBufferGeometryDirective], exports: [TorusBufferGeometryDirective] });
ThreeTorusBufferGeometryModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeTorusBufferGeometryModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeTorusBufferGeometryModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [TorusBufferGeometryDirective],
                    exports: [TorusBufferGeometryDirective],
                }]
        }] });

// GENERATED

// GENERATED
class TorusKnotBufferGeometryDirective extends ThreeBufferGeometry {
    constructor() {
        super(...arguments);
        this.geometryType = TorusKnotBufferGeometry;
    }
    set args(v) {
        this.extraArgs = v;
    }
}
TorusKnotBufferGeometryDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: TorusKnotBufferGeometryDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
TorusKnotBufferGeometryDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.10", type: TorusKnotBufferGeometryDirective, selector: "ngt-torus-knot-buffer-geometry,ngt-torus-knot-geometry", inputs: { args: "args" }, providers: [
        {
            provide: ThreeBufferGeometry,
            useExisting: TorusKnotBufferGeometryDirective,
        },
    ], exportAs: ["ngtTorusKnotBufferGeometry"], usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: TorusKnotBufferGeometryDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'ngt-torus-knot-buffer-geometry,ngt-torus-knot-geometry',
                    exportAs: 'ngtTorusKnotBufferGeometry',
                    providers: [
                        {
                            provide: ThreeBufferGeometry,
                            useExisting: TorusKnotBufferGeometryDirective,
                        },
                    ],
                }]
        }], propDecorators: { args: [{
                type: Input
            }] } });

// GENERATED
class ThreeTorusKnotBufferGeometryModule {
}
ThreeTorusKnotBufferGeometryModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeTorusKnotBufferGeometryModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
ThreeTorusKnotBufferGeometryModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeTorusKnotBufferGeometryModule, declarations: [TorusKnotBufferGeometryDirective], exports: [TorusKnotBufferGeometryDirective] });
ThreeTorusKnotBufferGeometryModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeTorusKnotBufferGeometryModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeTorusKnotBufferGeometryModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [TorusKnotBufferGeometryDirective],
                    exports: [TorusKnotBufferGeometryDirective],
                }]
        }] });

// GENERATED

// GENERATED
class TubeBufferGeometryDirective extends ThreeBufferGeometry {
    constructor() {
        super(...arguments);
        this.geometryType = TubeBufferGeometry;
    }
    set args(v) {
        this.extraArgs = v;
    }
}
TubeBufferGeometryDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: TubeBufferGeometryDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
TubeBufferGeometryDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.10", type: TubeBufferGeometryDirective, selector: "ngt-tube-buffer-geometry,ngt-tube-geometry", inputs: { args: "args" }, providers: [
        {
            provide: ThreeBufferGeometry,
            useExisting: TubeBufferGeometryDirective,
        },
    ], exportAs: ["ngtTubeBufferGeometry"], usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: TubeBufferGeometryDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'ngt-tube-buffer-geometry,ngt-tube-geometry',
                    exportAs: 'ngtTubeBufferGeometry',
                    providers: [
                        {
                            provide: ThreeBufferGeometry,
                            useExisting: TubeBufferGeometryDirective,
                        },
                    ],
                }]
        }], propDecorators: { args: [{
                type: Input
            }] } });

// GENERATED
class ThreeTubeBufferGeometryModule {
}
ThreeTubeBufferGeometryModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeTubeBufferGeometryModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
ThreeTubeBufferGeometryModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeTubeBufferGeometryModule, declarations: [TubeBufferGeometryDirective], exports: [TubeBufferGeometryDirective] });
ThreeTubeBufferGeometryModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeTubeBufferGeometryModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeTubeBufferGeometryModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [TubeBufferGeometryDirective],
                    exports: [TubeBufferGeometryDirective],
                }]
        }] });

// GENERATED

// GENERATED
class WireframeGeometryDirective extends ThreeBufferGeometry {
    constructor() {
        super(...arguments);
        this.geometryType = WireframeGeometry;
    }
    set args(v) {
        this.extraArgs = v;
    }
}
WireframeGeometryDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: WireframeGeometryDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
WireframeGeometryDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.10", type: WireframeGeometryDirective, selector: "ngt-wireframe-geometry", inputs: { args: "args" }, providers: [
        {
            provide: ThreeBufferGeometry,
            useExisting: WireframeGeometryDirective,
        },
    ], exportAs: ["ngtWireframeGeometry"], usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: WireframeGeometryDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'ngt-wireframe-geometry',
                    exportAs: 'ngtWireframeGeometry',
                    providers: [
                        {
                            provide: ThreeBufferGeometry,
                            useExisting: WireframeGeometryDirective,
                        },
                    ],
                }]
        }], propDecorators: { args: [{
                type: Input
            }] } });

// GENERATED
class ThreeWireframeGeometryModule {
}
ThreeWireframeGeometryModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeWireframeGeometryModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
ThreeWireframeGeometryModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeWireframeGeometryModule, declarations: [WireframeGeometryDirective], exports: [WireframeGeometryDirective] });
ThreeWireframeGeometryModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeWireframeGeometryModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeWireframeGeometryModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [WireframeGeometryDirective],
                    exports: [WireframeGeometryDirective],
                }]
        }] });

// GENERATED

// GENERATED
class EdgesGeometryDirective extends ThreeBufferGeometry {
    constructor() {
        super(...arguments);
        this.geometryType = EdgesGeometry;
    }
    set args(v) {
        this.extraArgs = v;
    }
}
EdgesGeometryDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: EdgesGeometryDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
EdgesGeometryDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.10", type: EdgesGeometryDirective, selector: "ngt-edges-geometry", inputs: { args: "args" }, providers: [
        {
            provide: ThreeBufferGeometry,
            useExisting: EdgesGeometryDirective,
        },
    ], exportAs: ["ngtEdgesGeometry"], usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: EdgesGeometryDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'ngt-edges-geometry',
                    exportAs: 'ngtEdgesGeometry',
                    providers: [
                        {
                            provide: ThreeBufferGeometry,
                            useExisting: EdgesGeometryDirective,
                        },
                    ],
                }]
        }], propDecorators: { args: [{
                type: Input
            }] } });

// GENERATED
class ThreeEdgesGeometryModule {
}
ThreeEdgesGeometryModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeEdgesGeometryModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
ThreeEdgesGeometryModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeEdgesGeometryModule, declarations: [EdgesGeometryDirective], exports: [EdgesGeometryDirective] });
ThreeEdgesGeometryModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeEdgesGeometryModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeEdgesGeometryModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [EdgesGeometryDirective],
                    exports: [EdgesGeometryDirective],
                }]
        }] });

// GENERATED

// GENERATED
class BoxLineGeometryDirective extends ThreeBufferGeometry {
    constructor() {
        super(...arguments);
        this.geometryType = BoxLineGeometry;
    }
    set args(v) {
        this.extraArgs = v;
    }
}
BoxLineGeometryDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: BoxLineGeometryDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
BoxLineGeometryDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.10", type: BoxLineGeometryDirective, selector: "ngt-box-line-geometry", inputs: { args: "args" }, providers: [
        {
            provide: ThreeBufferGeometry,
            useExisting: BoxLineGeometryDirective,
        },
    ], exportAs: ["ngtBoxLineGeometry"], usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: BoxLineGeometryDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'ngt-box-line-geometry',
                    exportAs: 'ngtBoxLineGeometry',
                    providers: [
                        {
                            provide: ThreeBufferGeometry,
                            useExisting: BoxLineGeometryDirective,
                        },
                    ],
                }]
        }], propDecorators: { args: [{
                type: Input
            }] } });

// GENERATED
class ThreeBoxLineGeometryModule {
}
ThreeBoxLineGeometryModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeBoxLineGeometryModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
ThreeBoxLineGeometryModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeBoxLineGeometryModule, declarations: [BoxLineGeometryDirective], exports: [BoxLineGeometryDirective] });
ThreeBoxLineGeometryModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeBoxLineGeometryModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeBoxLineGeometryModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [BoxLineGeometryDirective],
                    exports: [BoxLineGeometryDirective],
                }]
        }] });

// GENERATED

// GENERATED
class ConvexGeometryDirective extends ThreeBufferGeometry {
    constructor() {
        super(...arguments);
        this.geometryType = ConvexGeometry;
    }
    set args(v) {
        this.extraArgs = v;
    }
}
ConvexGeometryDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ConvexGeometryDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
ConvexGeometryDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.10", type: ConvexGeometryDirective, selector: "ngt-convex-geometry", inputs: { args: "args" }, providers: [
        {
            provide: ThreeBufferGeometry,
            useExisting: ConvexGeometryDirective,
        },
    ], exportAs: ["ngtConvexGeometry"], usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ConvexGeometryDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'ngt-convex-geometry',
                    exportAs: 'ngtConvexGeometry',
                    providers: [
                        {
                            provide: ThreeBufferGeometry,
                            useExisting: ConvexGeometryDirective,
                        },
                    ],
                }]
        }], propDecorators: { args: [{
                type: Input
            }] } });

// GENERATED
class ThreeConvexGeometryModule {
}
ThreeConvexGeometryModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeConvexGeometryModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
ThreeConvexGeometryModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeConvexGeometryModule, declarations: [ConvexGeometryDirective], exports: [ConvexGeometryDirective] });
ThreeConvexGeometryModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeConvexGeometryModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeConvexGeometryModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [ConvexGeometryDirective],
                    exports: [ConvexGeometryDirective],
                }]
        }] });

// GENERATED

// GENERATED
class DecalGeometryDirective extends ThreeBufferGeometry {
    constructor() {
        super(...arguments);
        this.geometryType = DecalGeometry;
    }
    set args(v) {
        this.extraArgs = v;
    }
}
DecalGeometryDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: DecalGeometryDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
DecalGeometryDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.10", type: DecalGeometryDirective, selector: "ngt-decal-geometry", inputs: { args: "args" }, providers: [
        {
            provide: ThreeBufferGeometry,
            useExisting: DecalGeometryDirective,
        },
    ], exportAs: ["ngtDecalGeometry"], usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: DecalGeometryDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'ngt-decal-geometry',
                    exportAs: 'ngtDecalGeometry',
                    providers: [
                        {
                            provide: ThreeBufferGeometry,
                            useExisting: DecalGeometryDirective,
                        },
                    ],
                }]
        }], propDecorators: { args: [{
                type: Input
            }] } });

// GENERATED
class ThreeDecalGeometryModule {
}
ThreeDecalGeometryModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeDecalGeometryModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
ThreeDecalGeometryModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeDecalGeometryModule, declarations: [DecalGeometryDirective], exports: [DecalGeometryDirective] });
ThreeDecalGeometryModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeDecalGeometryModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeDecalGeometryModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [DecalGeometryDirective],
                    exports: [DecalGeometryDirective],
                }]
        }] });

// GENERATED

// GENERATED
class ParametricGeometryDirective extends ThreeBufferGeometry {
    constructor() {
        super(...arguments);
        this.geometryType = ParametricGeometry;
    }
    set args(v) {
        this.extraArgs = v;
    }
}
ParametricGeometryDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ParametricGeometryDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
ParametricGeometryDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.10", type: ParametricGeometryDirective, selector: "ngt-parametric-geometry", inputs: { args: "args" }, providers: [
        {
            provide: ThreeBufferGeometry,
            useExisting: ParametricGeometryDirective,
        },
    ], exportAs: ["ngtParametricGeometry"], usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ParametricGeometryDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'ngt-parametric-geometry',
                    exportAs: 'ngtParametricGeometry',
                    providers: [
                        {
                            provide: ThreeBufferGeometry,
                            useExisting: ParametricGeometryDirective,
                        },
                    ],
                }]
        }], propDecorators: { args: [{
                type: Input
            }] } });

// GENERATED
class ThreeParametricGeometryModule {
}
ThreeParametricGeometryModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeParametricGeometryModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
ThreeParametricGeometryModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeParametricGeometryModule, declarations: [ParametricGeometryDirective], exports: [ParametricGeometryDirective] });
ThreeParametricGeometryModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeParametricGeometryModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeParametricGeometryModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [ParametricGeometryDirective],
                    exports: [ParametricGeometryDirective],
                }]
        }] });

// GENERATED

// GENERATED
class RoundedBoxGeometryDirective extends ThreeBufferGeometry {
    constructor() {
        super(...arguments);
        this.geometryType = RoundedBoxGeometry;
    }
    set args(v) {
        this.extraArgs = v;
    }
}
RoundedBoxGeometryDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: RoundedBoxGeometryDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
RoundedBoxGeometryDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.10", type: RoundedBoxGeometryDirective, selector: "ngt-rounded-box-geometry", inputs: { args: "args" }, providers: [
        {
            provide: ThreeBufferGeometry,
            useExisting: RoundedBoxGeometryDirective,
        },
    ], exportAs: ["ngtRoundedBoxGeometry"], usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: RoundedBoxGeometryDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'ngt-rounded-box-geometry',
                    exportAs: 'ngtRoundedBoxGeometry',
                    providers: [
                        {
                            provide: ThreeBufferGeometry,
                            useExisting: RoundedBoxGeometryDirective,
                        },
                    ],
                }]
        }], propDecorators: { args: [{
                type: Input
            }] } });

// GENERATED
class ThreeRoundedBoxGeometryModule {
}
ThreeRoundedBoxGeometryModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeRoundedBoxGeometryModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
ThreeRoundedBoxGeometryModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeRoundedBoxGeometryModule, declarations: [RoundedBoxGeometryDirective], exports: [RoundedBoxGeometryDirective] });
ThreeRoundedBoxGeometryModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeRoundedBoxGeometryModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeRoundedBoxGeometryModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [RoundedBoxGeometryDirective],
                    exports: [RoundedBoxGeometryDirective],
                }]
        }] });

// GENERATED

// GENERATED
class TeapotGeometryDirective extends ThreeBufferGeometry {
    constructor() {
        super(...arguments);
        this.geometryType = TeapotGeometry;
    }
    set args(v) {
        this.extraArgs = v;
    }
}
TeapotGeometryDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: TeapotGeometryDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
TeapotGeometryDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.10", type: TeapotGeometryDirective, selector: "ngt-teapot-geometry", inputs: { args: "args" }, providers: [
        {
            provide: ThreeBufferGeometry,
            useExisting: TeapotGeometryDirective,
        },
    ], exportAs: ["ngtTeapotGeometry"], usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: TeapotGeometryDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'ngt-teapot-geometry',
                    exportAs: 'ngtTeapotGeometry',
                    providers: [
                        {
                            provide: ThreeBufferGeometry,
                            useExisting: TeapotGeometryDirective,
                        },
                    ],
                }]
        }], propDecorators: { args: [{
                type: Input
            }] } });

// GENERATED
class ThreeTeapotGeometryModule {
}
ThreeTeapotGeometryModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeTeapotGeometryModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
ThreeTeapotGeometryModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeTeapotGeometryModule, declarations: [TeapotGeometryDirective], exports: [TeapotGeometryDirective] });
ThreeTeapotGeometryModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeTeapotGeometryModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeTeapotGeometryModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [TeapotGeometryDirective],
                    exports: [TeapotGeometryDirective],
                }]
        }] });

// GENERATED

// GENERATED
class TextGeometryDirective extends ThreeBufferGeometry {
    constructor() {
        super(...arguments);
        this.geometryType = TextGeometry;
    }
    set args(v) {
        this.extraArgs = v;
    }
}
TextGeometryDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: TextGeometryDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
TextGeometryDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.10", type: TextGeometryDirective, selector: "ngt-text-geometry", inputs: { args: "args" }, providers: [
        {
            provide: ThreeBufferGeometry,
            useExisting: TextGeometryDirective,
        },
    ], exportAs: ["ngtTextGeometry"], usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: TextGeometryDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'ngt-text-geometry',
                    exportAs: 'ngtTextGeometry',
                    providers: [
                        {
                            provide: ThreeBufferGeometry,
                            useExisting: TextGeometryDirective,
                        },
                    ],
                }]
        }], propDecorators: { args: [{
                type: Input
            }] } });

// GENERATED
class ThreeTextGeometryModule {
}
ThreeTextGeometryModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeTextGeometryModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
ThreeTextGeometryModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeTextGeometryModule, declarations: [TextGeometryDirective], exports: [TextGeometryDirective] });
ThreeTextGeometryModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeTextGeometryModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeTextGeometryModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [TextGeometryDirective],
                    exports: [TextGeometryDirective],
                }]
        }] });

// GENERATED

// GENERATED

/**
 * Generated bundle index. Do not edit.
 */

export { BoxBufferGeometryDirective, BoxLineGeometryDirective, BufferGeometryDirective, CircleBufferGeometryDirective, ConeBufferGeometryDirective, ConvexGeometryDirective, CylinderBufferGeometryDirective, DecalGeometryDirective, DodecahedronBufferGeometryDirective, EdgesGeometryDirective, ExtrudeBufferGeometryDirective, IcosahedronBufferGeometryDirective, InstancedBufferGeometryDirective, LatheBufferGeometryDirective, OctahedronBufferGeometryDirective, ParametricGeometryDirective, PlaneBufferGeometryDirective, PolyhedronBufferGeometryDirective, RingBufferGeometryDirective, RoundedBoxGeometryDirective, ShapeBufferGeometryDirective, SphereBufferGeometryDirective, TeapotGeometryDirective, TetrahedronBufferGeometryDirective, TextGeometryDirective, ThreeBoxBufferGeometryModule, ThreeBoxLineGeometryModule, ThreeBufferGeometryModule, ThreeCircleBufferGeometryModule, ThreeConeBufferGeometryModule, ThreeConvexGeometryModule, ThreeCylinderBufferGeometryModule, ThreeDecalGeometryModule, ThreeDodecahedronBufferGeometryModule, ThreeEdgesGeometryModule, ThreeExtrudeBufferGeometryModule, ThreeIcosahedronBufferGeometryModule, ThreeInstancedBufferGeometryModule, ThreeLatheBufferGeometryModule, ThreeOctahedronBufferGeometryModule, ThreeParametricGeometryModule, ThreePlaneBufferGeometryModule, ThreePolyhedronBufferGeometryModule, ThreeRingBufferGeometryModule, ThreeRoundedBoxGeometryModule, ThreeShapeBufferGeometryModule, ThreeSphereBufferGeometryModule, ThreeTeapotGeometryModule, ThreeTetrahedronBufferGeometryModule, ThreeTextGeometryModule, ThreeTorusBufferGeometryModule, ThreeTorusKnotBufferGeometryModule, ThreeTubeBufferGeometryModule, ThreeWireframeGeometryModule, TorusBufferGeometryDirective, TorusKnotBufferGeometryDirective, TubeBufferGeometryDirective, WireframeGeometryDirective };
//# sourceMappingURL=angular-three-core-geometries.js.map
