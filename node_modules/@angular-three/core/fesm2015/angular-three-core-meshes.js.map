{"version":3,"file":"angular-three-core-meshes.js","sources":["../../../../packages/core/meshes/src/lib/mesh/mesh.directive.ts","../../../../packages/core/meshes/src/lib/mesh/mesh.module.ts","../../../../packages/core/meshes/src/lib/instanced-mesh/instanced-mesh.directive.ts","../../../../packages/core/meshes/src/lib/instanced-mesh/instanced-mesh.module.ts","../../../../packages/core/meshes/src/lib/skinned-mesh/skinned-mesh.directive.ts","../../../../packages/core/meshes/src/lib/skinned-mesh/bone.directive.ts","../../../../packages/core/meshes/src/lib/skinned-mesh/skeleton.directive.ts","../../../../packages/core/meshes/src/lib/skinned-mesh/skinned-mesh.module.ts","../../../../packages/core/meshes/src/angular-three-core-meshes.ts"],"sourcesContent":["import {\n  OBJECT_3D_CONTROLLER_PROVIDER,\n  ThreeMesh,\n  ThreeObject3d,\n} from '@angular-three/core';\nimport { Directive } from '@angular/core';\nimport { Mesh } from 'three';\n\n@Directive({\n  selector: 'ngt-mesh',\n  exportAs: 'ngtMesh',\n  providers: [\n    { provide: ThreeObject3d, useExisting: MeshDirective },\n    OBJECT_3D_CONTROLLER_PROVIDER,\n  ],\n})\nexport class MeshDirective extends ThreeMesh {\n  meshType = Mesh;\n}\n","import { NgModule } from '@angular/core';\nimport { MeshDirective } from './mesh.directive';\n\n@NgModule({\n  declarations: [MeshDirective],\n  exports: [MeshDirective],\n})\nexport class ThreeMeshModule {}\n","import {\n  OBJECT_3D_CONTROLLER_PROVIDER,\n  ThreeMesh,\n  ThreeObject3d,\n} from '@angular-three/core';\nimport { Directive, Input, OnChanges } from '@angular/core';\nimport { DynamicDrawUsage, InstancedMesh } from 'three';\n\n@Directive({\n  selector: 'ngt-instanced-mesh',\n  exportAs: 'ngtInstancedMesh',\n  providers: [\n    {\n      provide: ThreeObject3d,\n      useExisting: InstancedMeshDirective,\n    },\n    OBJECT_3D_CONTROLLER_PROVIDER,\n  ],\n})\nexport class InstancedMeshDirective\n  extends ThreeMesh<InstancedMesh>\n  implements OnChanges\n{\n  @Input() set args(v: [number]) {\n    this.extraArgs = v;\n  }\n\n  meshType = InstancedMesh;\n\n  ngOnChanges() {\n    this.init();\n    super.ngOnChanges();\n  }\n\n  protected canCreate(): boolean {\n    return !this.object3d && this.geometry;\n  }\n\n  customize = () => {\n    this.object3d.instanceMatrix.setUsage(DynamicDrawUsage);\n  };\n}\n","import { NgModule } from '@angular/core';\nimport { InstancedMeshDirective } from './instanced-mesh.directive';\n\n@NgModule({\n  declarations: [InstancedMeshDirective],\n  exports: [InstancedMeshDirective],\n})\nexport class ThreeInstancedMeshModule {}\n","import {\n  OBJECT_3D_CONTROLLER_PROVIDER,\n  ThreeMatrix4,\n  ThreeMesh,\n  ThreeObject3d,\n} from '@angular-three/core';\nimport { Directive, Input } from '@angular/core';\nimport { SkinnedMesh } from 'three';\n\n@Directive({\n  selector: 'ngt-skinned-mesh',\n  exportAs: 'ngtSkinnedMesh',\n  providers: [\n    { provide: ThreeObject3d, useExisting: SkinnedMeshDirective },\n    OBJECT_3D_CONTROLLER_PROVIDER,\n  ],\n})\nexport class SkinnedMeshDirective extends ThreeMesh<SkinnedMesh> {\n  @Input() set args(v: [boolean]) {\n    this.extraArgs = v;\n  }\n\n  @Input() bindMatrix?: ThreeMatrix4;\n  @Input() bindMode?: string;\n\n  meshType = SkinnedMesh;\n}\n","import {\n  OBJECT_3D_CONTROLLER_PROVIDER,\n  ThreeObject3d,\n} from '@angular-three/core';\nimport { Directive, OnInit } from '@angular/core';\nimport { Bone } from 'three';\n\n@Directive({\n  selector: 'ngt-bone',\n  exportAs: 'ngtBone',\n  providers: [\n    { provide: ThreeObject3d, useExisting: BoneDirective },\n    OBJECT_3D_CONTROLLER_PROVIDER,\n  ],\n})\nexport class BoneDirective extends ThreeObject3d<Bone> implements OnInit {\n  private _bone!: Bone;\n\n  ngOnInit() {\n    this.init();\n  }\n\n  protected initObject() {\n    this._bone = new Bone();\n  }\n\n  get object3d(): Bone {\n    return this._bone;\n  }\n}\n","import { ThreeMatrix4, ThreeObject3d } from '@angular-three/core';\nimport type { QueryList } from '@angular/core';\nimport {\n  ContentChildren,\n  Directive,\n  EventEmitter,\n  Input,\n  NgZone,\n  OnInit,\n  Optional,\n  Output,\n  SkipSelf,\n} from '@angular/core';\nimport { Matrix4, Skeleton } from 'three';\nimport { BoneDirective } from './bone.directive';\nimport { SkinnedMeshDirective } from './skinned-mesh.directive';\n\n@Directive({\n  selector: 'ngt-skeleton',\n  exportAs: 'ngtSkeleton',\n})\nexport class SkeletonDirective implements OnInit {\n  @Input() boneInverses?: ThreeMatrix4[];\n  @Output() ready = new EventEmitter<Skeleton>();\n\n  @ContentChildren(BoneDirective) bones?: QueryList<BoneDirective>;\n\n  constructor(\n    private readonly ngZone: NgZone,\n    @Optional() @SkipSelf() private readonly hostObject?: ThreeObject3d\n  ) {}\n\n  private _skeleton!: Skeleton;\n\n  ngOnInit() {\n    this.ngZone.runOutsideAngular(() => {\n      if (this.bones) {\n        const boneInverses: Matrix4[] | undefined = this.boneInverses\n          ? this.boneInverses.map((threeMaxtrix) => {\n              if (threeMaxtrix instanceof Matrix4) return threeMaxtrix;\n              return new Matrix4().set(...threeMaxtrix);\n            })\n          : undefined;\n        this._skeleton = new Skeleton(\n          this.bones.map((b) => b.object3d),\n          boneInverses\n        );\n\n        this.ready.emit(this.skeleton);\n\n        if (this.hostObject) {\n          if (this.hostObject instanceof SkinnedMeshDirective) {\n            const bindMatrix: Matrix4 | undefined = this.hostObject.bindMatrix\n              ? this.hostObject.bindMatrix instanceof Matrix4\n                ? this.hostObject.bindMatrix\n                : new Matrix4().set(...this.hostObject.bindMatrix)\n              : undefined;\n            this.hostObject.object3d.bind(this._skeleton, bindMatrix);\n          }\n        }\n      }\n    });\n  }\n\n  get skeleton(): Skeleton {\n    return this._skeleton;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { BoneDirective } from './bone.directive';\nimport { SkeletonDirective } from './skeleton.directive';\nimport { SkinnedMeshDirective } from './skinned-mesh.directive';\n\n@NgModule({\n  declarations: [SkinnedMeshDirective, BoneDirective, SkeletonDirective],\n  exports: [SkinnedMeshDirective, BoneDirective, SkeletonDirective],\n})\nexport class ThreeSkinnedMeshModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}