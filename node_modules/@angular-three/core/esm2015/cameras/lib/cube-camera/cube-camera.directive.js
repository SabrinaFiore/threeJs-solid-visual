import { OBJECT_3D_CONTROLLER_PROVIDER, ThreeObject3d, } from '@angular-three/core';
import { Directive, Input } from '@angular/core';
import { CubeCamera } from 'three';
import * as i0 from "@angular/core";
export class CubeCameraDirective extends ThreeObject3d {
    ngOnInit() {
        this.init();
    }
    initObject() {
        this._camera = new CubeCamera(...this.args);
    }
    get object3d() {
        return this._camera;
    }
}
CubeCameraDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: CubeCameraDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
CubeCameraDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.10", type: CubeCameraDirective, selector: "ngt-cube-camera", inputs: { args: "args" }, providers: [
        {
            provide: ThreeObject3d,
            useExisting: CubeCameraDirective,
        },
        OBJECT_3D_CONTROLLER_PROVIDER,
    ], exportAs: ["ngtCubeCamera"], usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: CubeCameraDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'ngt-cube-camera',
                    exportAs: 'ngtCubeCamera',
                    providers: [
                        {
                            provide: ThreeObject3d,
                            useExisting: CubeCameraDirective,
                        },
                        OBJECT_3D_CONTROLLER_PROVIDER,
                    ],
                }]
        }], propDecorators: { args: [{
                type: Input
            }] } });
//# sourceMappingURL=cube-camera.directive.js.map