import { OBJECT_3D_CONTROLLER_PROVIDER, ThreeMesh, ThreeObject3d, } from '@angular-three/core';
import { Directive, Input } from '@angular/core';
import { DynamicDrawUsage, InstancedMesh } from 'three';
import * as i0 from "@angular/core";
export class InstancedMeshDirective extends ThreeMesh {
    constructor() {
        super(...arguments);
        this.meshType = InstancedMesh;
        this.customize = () => {
            this.object3d.instanceMatrix.setUsage(DynamicDrawUsage);
        };
    }
    set args(v) {
        this.extraArgs = v;
    }
    ngOnChanges() {
        this.init();
        super.ngOnChanges();
    }
    canCreate() {
        return !this.object3d && this.geometry;
    }
}
InstancedMeshDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: InstancedMeshDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
InstancedMeshDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.10", type: InstancedMeshDirective, selector: "ngt-instanced-mesh", inputs: { args: "args" }, providers: [
        {
            provide: ThreeObject3d,
            useExisting: InstancedMeshDirective,
        },
        OBJECT_3D_CONTROLLER_PROVIDER,
    ], exportAs: ["ngtInstancedMesh"], usesInheritance: true, usesOnChanges: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: InstancedMeshDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'ngt-instanced-mesh',
                    exportAs: 'ngtInstancedMesh',
                    providers: [
                        {
                            provide: ThreeObject3d,
                            useExisting: InstancedMeshDirective,
                        },
                        OBJECT_3D_CONTROLLER_PROVIDER,
                    ],
                }]
        }], propDecorators: { args: [{
                type: Input
            }] } });
//# sourceMappingURL=instanced-mesh.directive.js.map