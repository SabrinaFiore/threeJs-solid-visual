{"version":3,"file":"skeleton.directive.js","sourceRoot":"","sources":["../../../../../../../packages/core/meshes/src/lib/skinned-mesh/skeleton.directive.ts"],"names":[],"mappings":"AAAA,OAAO,EAAgB,aAAa,EAAE,MAAM,qBAAqB,CAAC;AAElE,OAAO,EACL,eAAe,EACf,SAAS,EACT,YAAY,EACZ,KAAK,EACL,MAAM,EAEN,QAAQ,EACR,MAAM,EACN,QAAQ,GACT,MAAM,eAAe,CAAC;AACvB,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AAC1C,OAAO,EAAE,aAAa,EAAE,MAAM,kBAAkB,CAAC;AACjD,OAAO,EAAE,oBAAoB,EAAE,MAAM,0BAA0B,CAAC;;;AAMhE,MAAM,OAAO,iBAAiB;IAM5B,YACmB,MAAc,EACU,UAA0B;QADlD,WAAM,GAAN,MAAM,CAAQ;QACU,eAAU,GAAV,UAAU,CAAgB;QAN3D,UAAK,GAAG,IAAI,YAAY,EAAY,CAAC;IAO5C,CAAC;IAIJ,QAAQ;QACN,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,GAAG,EAAE;YACjC,IAAI,IAAI,CAAC,KAAK,EAAE;gBACd,MAAM,YAAY,GAA0B,IAAI,CAAC,YAAY;oBAC3D,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,YAAY,EAAE,EAAE;wBACrC,IAAI,YAAY,YAAY,OAAO;4BAAE,OAAO,YAAY,CAAC;wBACzD,OAAO,IAAI,OAAO,EAAE,CAAC,GAAG,CAAC,GAAG,YAAY,CAAC,CAAC;oBAC5C,CAAC,CAAC;oBACJ,CAAC,CAAC,SAAS,CAAC;gBACd,IAAI,CAAC,SAAS,GAAG,IAAI,QAAQ,CAC3B,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,EACjC,YAAY,CACb,CAAC;gBAEF,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBAE/B,IAAI,IAAI,CAAC,UAAU,EAAE;oBACnB,IAAI,IAAI,CAAC,UAAU,YAAY,oBAAoB,EAAE;wBACnD,MAAM,UAAU,GAAwB,IAAI,CAAC,UAAU,CAAC,UAAU;4BAChE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,YAAY,OAAO;gCAC7C,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU;gCAC5B,CAAC,CAAC,IAAI,OAAO,EAAE,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC;4BACpD,CAAC,CAAC,SAAS,CAAC;wBACd,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;qBAC3D;iBACF;aACF;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,SAAS,CAAC;IACxB,CAAC;;+GA7CU,iBAAiB;mGAAjB,iBAAiB,iJAIX,aAAa;4FAJnB,iBAAiB;kBAJ7B,SAAS;mBAAC;oBACT,QAAQ,EAAE,cAAc;oBACxB,QAAQ,EAAE,aAAa;iBACxB;;0BASI,QAAQ;;0BAAI,QAAQ;4CAPd,YAAY;sBAApB,KAAK;gBACI,KAAK;sBAAd,MAAM;gBAEyB,KAAK;sBAApC,eAAe;uBAAC,aAAa","sourcesContent":["import { ThreeMatrix4, ThreeObject3d } from '@angular-three/core';\nimport type { QueryList } from '@angular/core';\nimport {\n  ContentChildren,\n  Directive,\n  EventEmitter,\n  Input,\n  NgZone,\n  OnInit,\n  Optional,\n  Output,\n  SkipSelf,\n} from '@angular/core';\nimport { Matrix4, Skeleton } from 'three';\nimport { BoneDirective } from './bone.directive';\nimport { SkinnedMeshDirective } from './skinned-mesh.directive';\n\n@Directive({\n  selector: 'ngt-skeleton',\n  exportAs: 'ngtSkeleton',\n})\nexport class SkeletonDirective implements OnInit {\n  @Input() boneInverses?: ThreeMatrix4[];\n  @Output() ready = new EventEmitter<Skeleton>();\n\n  @ContentChildren(BoneDirective) bones?: QueryList<BoneDirective>;\n\n  constructor(\n    private readonly ngZone: NgZone,\n    @Optional() @SkipSelf() private readonly hostObject?: ThreeObject3d\n  ) {}\n\n  private _skeleton!: Skeleton;\n\n  ngOnInit() {\n    this.ngZone.runOutsideAngular(() => {\n      if (this.bones) {\n        const boneInverses: Matrix4[] | undefined = this.boneInverses\n          ? this.boneInverses.map((threeMaxtrix) => {\n              if (threeMaxtrix instanceof Matrix4) return threeMaxtrix;\n              return new Matrix4().set(...threeMaxtrix);\n            })\n          : undefined;\n        this._skeleton = new Skeleton(\n          this.bones.map((b) => b.object3d),\n          boneInverses\n        );\n\n        this.ready.emit(this.skeleton);\n\n        if (this.hostObject) {\n          if (this.hostObject instanceof SkinnedMeshDirective) {\n            const bindMatrix: Matrix4 | undefined = this.hostObject.bindMatrix\n              ? this.hostObject.bindMatrix instanceof Matrix4\n                ? this.hostObject.bindMatrix\n                : new Matrix4().set(...this.hostObject.bindMatrix)\n              : undefined;\n            this.hostObject.object3d.bind(this._skeleton, bindMatrix);\n          }\n        }\n      }\n    });\n  }\n\n  get skeleton(): Skeleton {\n    return this._skeleton;\n  }\n}\n"]}