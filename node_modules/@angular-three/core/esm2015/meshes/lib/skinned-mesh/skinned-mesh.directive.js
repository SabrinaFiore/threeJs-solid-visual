import { OBJECT_3D_CONTROLLER_PROVIDER, ThreeMesh, ThreeObject3d, } from '@angular-three/core';
import { Directive, Input } from '@angular/core';
import { SkinnedMesh } from 'three';
import * as i0 from "@angular/core";
export class SkinnedMeshDirective extends ThreeMesh {
    constructor() {
        super(...arguments);
        this.meshType = SkinnedMesh;
    }
    set args(v) {
        this.extraArgs = v;
    }
}
SkinnedMeshDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: SkinnedMeshDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
SkinnedMeshDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.10", type: SkinnedMeshDirective, selector: "ngt-skinned-mesh", inputs: { args: "args", bindMatrix: "bindMatrix", bindMode: "bindMode" }, providers: [
        { provide: ThreeObject3d, useExisting: SkinnedMeshDirective },
        OBJECT_3D_CONTROLLER_PROVIDER,
    ], exportAs: ["ngtSkinnedMesh"], usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: SkinnedMeshDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'ngt-skinned-mesh',
                    exportAs: 'ngtSkinnedMesh',
                    providers: [
                        { provide: ThreeObject3d, useExisting: SkinnedMeshDirective },
                        OBJECT_3D_CONTROLLER_PROVIDER,
                    ],
                }]
        }], propDecorators: { args: [{
                type: Input
            }], bindMatrix: [{
                type: Input
            }], bindMode: [{
                type: Input
            }] } });
//# sourceMappingURL=skinned-mesh.directive.js.map