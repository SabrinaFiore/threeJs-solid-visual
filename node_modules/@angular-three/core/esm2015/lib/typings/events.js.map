{"version":3,"file":"events.js","sourceRoot":"","sources":["../../../../../../packages/core/src/lib/typings/events.ts"],"names":[],"mappings":"","sourcesContent":["import type { ThreeIntersectionEvent } from './intersection';\n\nexport type ThreeEvent<TEvent> = TEvent & ThreeIntersectionEvent<TEvent>;\nexport type ThreeDomEvent = ThreeEvent<PointerEvent | MouseEvent | WheelEvent>;\n\nexport interface EventHandlers {\n  click?: (event: ThreeEvent<MouseEvent>) => void;\n  contextmenu?: (event: ThreeEvent<MouseEvent>) => void;\n  dblclick?: (event: ThreeEvent<MouseEvent>) => void;\n  pointerup?: (event: ThreeEvent<PointerEvent>) => void;\n  pointerdown?: (event: ThreeEvent<PointerEvent>) => void;\n  pointerover?: (event: ThreeEvent<PointerEvent>) => void;\n  pointerout?: (event: ThreeEvent<PointerEvent>) => void;\n  pointerenter?: (event: ThreeEvent<PointerEvent>) => void;\n  pointerleave?: (event: ThreeEvent<PointerEvent>) => void;\n  pointermove?: (event: ThreeEvent<PointerEvent>) => void;\n  pointermissed?: (event: ThreeEvent<PointerEvent>) => void;\n  pointercancel?: (event: ThreeEvent<PointerEvent>) => void;\n  wheel?: (event: ThreeEvent<WheelEvent>) => void;\n}\n"]}