{"version":3,"file":"events.js","sourceRoot":"","sources":["../../../../../../../packages/core/src/lib/typings/stores/events.ts"],"names":[],"mappings":"","sourcesContent":["import type { Object3D } from 'three';\nimport type { ThreeDomEvent } from '../events';\nimport type { ThreeIntersection } from '../intersection';\n\nexport type SupportedEvents =\n  | 'click'\n  | 'contextmenu'\n  | 'dblclick'\n  | 'wheel'\n  | 'pointerdown'\n  | 'pointerup'\n  | 'pointerleave'\n  | 'pointermove'\n  | 'pointercancel'\n  | 'lostpointercapture';\n\nexport interface EventsInternal {\n  interaction: Object3D[];\n  hovered: Map<string, ThreeDomEvent>;\n  capturedMap: Map<number, Map<Object3D, ThreeIntersection>>;\n  initialClick: [x: number, y: number];\n  initialHits: Object3D[];\n}\n\nexport interface EventsStoreState {\n  connected: false | HTMLElement;\n  internal: EventsInternal;\n  handlers?: Record<SupportedEvents, EventListener>;\n}\n"]}