{"version":3,"file":"animation.js","sourceRoot":"","sources":["../../../../../../../packages/core/src/lib/typings/stores/animation.ts"],"names":[],"mappings":"","sourcesContent":["import type { Subscription } from 'rxjs';\nimport type { Object3D } from 'three';\nimport type { RenderState } from '../render';\n\nexport interface AnimationReady<TObject = any> {\n  animateObject: TObject;\n  renderState: RenderState;\n}\n\nexport type AnimationCallback<TObject = null> = TObject extends null\n  ? (state: RenderState) => void\n  : (obj: TObject, state: RenderState) => void;\n\nexport interface AnimationRecord {\n  obj: Object3D;\n  callback: AnimationCallback<Object3D>;\n  priority?: number;\n}\n\nexport interface AnimationRecordNoObject {\n  obj: null;\n  callback: AnimationCallback;\n  priority?: number;\n}\n\nexport interface AnimationStoreState {\n  animations: Record<string, AnimationRecord | AnimationRecordNoObject>;\n  animationCallbacks: Array<AnimationRecord | AnimationRecordNoObject>;\n  hasPriority: boolean;\n  objectSubscriptions: Array<[string | null, Subscription]>;\n}\n"]}