{"version":3,"file":"common.js","sourceRoot":"","sources":["../../../../../../packages/core/src/lib/typings/common.ts"],"names":[],"mappings":"","sourcesContent":["export type UnknownRecord = Record<string, unknown>;\nexport type AnyConstructor<TObject> = new (...args: any[]) => TObject;\n\nexport type ConditionalType<Child, Parent, Truthy, Falsy> = Child extends Parent\n  ? Truthy\n  : Falsy;\n\nexport type BranchingReturn<\n  T = any,\n  Parent = any,\n  Coerced = any\n> = ConditionalType<T, Parent, Coerced, T>;\n"]}