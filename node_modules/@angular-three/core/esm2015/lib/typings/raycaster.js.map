{"version":3,"file":"raycaster.js","sourceRoot":"","sources":["../../../../../../packages/core/src/lib/typings/raycaster.ts"],"names":[],"mappings":"","sourcesContent":["import type { Intersection, Raycaster } from 'three';\nimport type { RenderState } from './render';\nimport type { ThreeVector3 } from './three';\n\nexport type FilterFunction = (\n  items: Intersection[],\n  state: RenderState\n) => Intersection[];\nexport type ComputeOffsetsFunction = <TEvent = unknown>(\n  event: TEvent,\n  state: RenderState\n) => { offsetX: number; offsetY: number };\n\nexport interface ThreeRaycaster extends Raycaster {\n  enabled: boolean;\n  filter?: FilterFunction;\n  computeOffsets?: ComputeOffsetsFunction;\n}\n\nexport interface RaycasterOptions {\n  origin?: ThreeVector3;\n  direction?: ThreeVector3;\n  near?: number;\n  far?: number;\n}\n"]}