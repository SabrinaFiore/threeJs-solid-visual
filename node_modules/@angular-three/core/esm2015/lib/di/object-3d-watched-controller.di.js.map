{"version":3,"file":"object-3d-watched-controller.di.js","sourceRoot":"","sources":["../../../../../../packages/core/src/lib/di/object-3d-watched-controller.di.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,iBAAiB,EACjB,cAAc,EACd,QAAQ,GAET,MAAM,eAAe,CAAC;AACvB,OAAO,EAAE,SAAS,EAAE,MAAM,gBAAgB,CAAC;AAC3C,OAAO,EAAE,2BAA2B,EAAE,MAAM,gBAAgB,CAAC;AAC7D,OAAO,EAAE,gBAAgB,EAAE,MAAM,aAAa,CAAC;AAE/C,MAAM,CAAC,MAAM,4BAA4B,GAAG,IAAI,cAAc,CAC5D,6BAA6B,CAC9B,CAAC;AAEF,MAAM,CAAC,MAAM,6BAA6B,GAAe;IACvD,gBAAgB;IAChB;QACE,OAAO,EAAE,4BAA4B;QACrC,IAAI,EAAE;YACJ,CAAC,IAAI,QAAQ,EAAE,EAAE,2BAA2B,CAAC;YAC7C,iBAAiB;YACjB,gBAAgB;SACjB;QACD,UAAU,EAAE,gCAAgC;KAC7C;CACF,CAAC;AAEF,MAAM,UAAU,gCAAgC,CAC9C,UAA8C,EAC9C,iBAAoC,EACpC,QAA0B;IAE1B,IAAI,CAAC,UAAU;QAAE,OAAO,IAAI,CAAC;IAE7B,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC,GAAG,EAAE;QAC1D,iBAAiB,CAAC,YAAY,EAAE,CAAC;IACnC,CAAC,CAAC,CAAC;IAEH,OAAO,UAAU,CAAC;AACpB,CAAC","sourcesContent":["import {\n  ChangeDetectorRef,\n  InjectionToken,\n  Optional,\n  Provider,\n} from '@angular/core';\nimport { takeUntil } from 'rxjs/operators';\nimport { Object3dControllerDirective } from '../controllers';\nimport { DestroyedService } from '../services';\n\nexport const OBJECT_3D_WATCHED_CONTROLLER = new InjectionToken(\n  'Watched Object3D Controller'\n);\n\nexport const OBJECT_3D_CONTROLLER_PROVIDER: Provider[] = [\n  DestroyedService,\n  {\n    provide: OBJECT_3D_WATCHED_CONTROLLER,\n    deps: [\n      [new Optional(), Object3dControllerDirective],\n      ChangeDetectorRef,\n      DestroyedService,\n    ],\n    useFactory: object3dWatchedControllerFactory,\n  },\n];\n\nexport function object3dWatchedControllerFactory(\n  controller: Object3dControllerDirective | null,\n  changeDetectorRef: ChangeDetectorRef,\n  destroy$: DestroyedService\n) {\n  if (!controller) return null;\n\n  controller.change$.pipe(takeUntil(destroy$)).subscribe(() => {\n    changeDetectorRef.markForCheck();\n  });\n\n  return controller;\n}\n"]}