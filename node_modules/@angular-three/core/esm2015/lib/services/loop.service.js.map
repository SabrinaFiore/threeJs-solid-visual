{"version":3,"file":"loop.service.js","sourceRoot":"","sources":["../../../../../../packages/core/src/lib/services/loop.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable, OnDestroy } from '@angular/core';\nimport { Clock } from 'three';\nimport { AnimationStore, CanvasStore } from '../stores';\n\n@Injectable()\nexport class LoopService implements OnDestroy {\n  private readonly loopClock = new Clock();\n  // TODO: rethink limit 60fps\n  // private readonly interval = 1 / 60; // 60fps;\n  // private internalDelta = 0;\n\n  constructor(\n    private readonly canvasStore: CanvasStore,\n    private readonly animationStore: AnimationStore\n  ) {}\n\n  start() {\n    const { renderer } = this.canvasStore.getImperativeState();\n    if (renderer) {\n      renderer.setAnimationLoop(() => {\n        this.tick(this.loopClock.getDelta());\n      });\n    }\n  }\n\n  stop() {\n    const { renderer } = this.canvasStore.getImperativeState();\n    if (renderer) {\n      renderer.setAnimationLoop(null);\n    }\n  }\n\n  private tick(delta: number) {\n    // this.internalDelta += delta;\n    //\n    // if (this.internalDelta >= this.interval) {\n    //   const {\n    //     renderer,\n    //     scene,\n    //     camera,\n    //     internal: { size, viewport },\n    //     clock,\n    //     mouse,\n    //   } = this.canvasStore.getImperativeState();\n    //   const { animationCallbacks, hasPriority } =\n    //     this.animationStore.getImperativeState();\n    //\n    //   if (renderer && scene && camera) {\n    //     if (hasPriority) {\n    //       animationCallbacks.sort(\n    //         ({ priority: a = 0 }, { priority: b = 0 }) => a - b\n    //       );\n    //     } else {\n    //       renderer.render(scene, camera);\n    //     }\n    //\n    //     const renderState = {\n    //       clock,\n    //       camera,\n    //       scene,\n    //       renderer,\n    //       mouse,\n    //       size,\n    //       viewport,\n    //       delta,\n    //     };\n    //     for (const animationCallback of animationCallbacks) {\n    //       if (animationCallback.obj) {\n    //         animationCallback.callback(animationCallback.obj, renderState);\n    //       } else {\n    //         animationCallback.callback(renderState);\n    //       }\n    //     }\n    //   }\n    //\n    //   this.internalDelta = this.internalDelta % this.interval;\n    // }\n    const {\n      renderer,\n      scene,\n      camera,\n      internal: { size, viewport },\n      clock,\n      mouse,\n    } = this.canvasStore.getImperativeState();\n    const { animationCallbacks, hasPriority } =\n      this.animationStore.getImperativeState();\n\n    if (renderer && scene && camera) {\n      if (hasPriority) {\n        animationCallbacks.sort(\n          ({ priority: a = 0 }, { priority: b = 0 }) => a - b\n        );\n      } else {\n        renderer.render(scene, camera);\n      }\n\n      const renderState = {\n        clock,\n        camera,\n        scene,\n        renderer,\n        mouse,\n        size,\n        viewport,\n        delta,\n      };\n      for (const animationCallback of animationCallbacks) {\n        if (animationCallback.obj) {\n          animationCallback.callback(animationCallback.obj, renderState);\n        } else {\n          animationCallback.callback(renderState);\n        }\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this.stop();\n  }\n}\n"]}