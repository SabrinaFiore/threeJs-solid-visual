// GENERATED
import { Directive, EventEmitter, Input, Output } from '@angular/core';
import { Object3D } from 'three';
import { Controller } from './controller.abstract';
import * as i0 from "@angular/core";
export class Object3dControllerDirective extends Controller {
    constructor() {
        super(...arguments);
        this.castShadow = false;
        this.receiveShadow = false;
        this.visible = true;
        this.matrixAutoUpdate = true;
        this.appendMode = 'immediate';
        // events
        this.click = new EventEmitter();
        this.contextmenu = new EventEmitter();
        this.dblclick = new EventEmitter();
        this.pointerup = new EventEmitter();
        this.pointerdown = new EventEmitter();
        this.pointerover = new EventEmitter();
        this.pointerout = new EventEmitter();
        this.pointerenter = new EventEmitter();
        this.pointerleave = new EventEmitter();
        this.pointermove = new EventEmitter();
        this.pointermissed = new EventEmitter();
        this.pointercancel = new EventEmitter();
        this.wheel = new EventEmitter();
    }
}
Object3dControllerDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: Object3dControllerDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
Object3dControllerDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.10", type: Object3dControllerDirective, selector: "\n    ngt-primitive[o3d],\n    ngt-mesh[o3d],\n    ngt-instanced-mesh[o3d],\n    ngt-skinned-mesh[o3d],\n    ngt-bone[o3d],\n    ngt-group[o3d],\n    ngt-lod[o3d],\n    ngt-scene[o3d],\n    ngt-points[o3d],\n    ngt-cube-camera[o3d],\n    ngt-contact-shadows[o3d],\n    ngt-html[o3d],\n    ngt-light-probe[o3d],\n    ngt-ambient-light[o3d],\n    ngt-ambient-light-probe[o3d],\n    ngt-hemisphere-light[o3d],\n    ngt-hemisphere-light-probe[o3d],\n    ngt-directional-light[o3d],\n    ngt-point-light[o3d],\n    ngt-spot-light[o3d],\n    ngt-rect-area-light[o3d],\n    ngt-arrow-helper[o3d],\n    ngt-axes-helper[o3d],\n    ngt-box-helper[o3d],\n    ngt-box3-helper[o3d],\n    ngt-grid-helper[o3d],\n    ngt-camera-helper[o3d],\n    ngt-directional-light-helper[o3d],\n    ngt-hemisphere-light-helper[o3d],\n    ngt-plane-helper[o3d],\n    ngt-point-light-helper[o3d],\n    ngt-polar-grid-helper[o3d],\n    ngt-skeleton-helper[o3d],\n    ngt-spot-light-helper[o3d],\n    ngt-line[o3d],\n    ngt-line-loop[o3d],\n    ngt-line-segments[o3d],\n    ngt-sprite[o3d],\n    ngt-camera[o3d],\n    ngt-perspective-camera[o3d],\n    ngt-orthographic-camera[o3d],\n    ngt-array-camera[o3d],\n    ngt-stereo-camera[o3d]\n  ", inputs: { name: "name", position: "position", rotation: "rotation", quaternion: "quaternion", scale: "scale", color: "color", userData: "userData", dispose: "dispose", castShadow: "castShadow", receiveShadow: "receiveShadow", visible: "visible", matrixAutoUpdate: "matrixAutoUpdate", appendMode: "appendMode", appendTo: "appendTo" }, outputs: { click: "click", contextmenu: "contextmenu", dblclick: "dblclick", pointerup: "pointerup", pointerdown: "pointerdown", pointerover: "pointerover", pointerout: "pointerout", pointerenter: "pointerenter", pointerleave: "pointerleave", pointermove: "pointermove", pointermissed: "pointermissed", pointercancel: "pointercancel", wheel: "wheel" }, exportAs: ["ngtObject3dController"], usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: Object3dControllerDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: `
    ngt-primitive[o3d],
    ngt-mesh[o3d],
    ngt-instanced-mesh[o3d],
    ngt-skinned-mesh[o3d],
    ngt-bone[o3d],
    ngt-group[o3d],
    ngt-lod[o3d],
    ngt-scene[o3d],
    ngt-points[o3d],
    ngt-cube-camera[o3d],
    ngt-contact-shadows[o3d],
    ngt-html[o3d],
    ngt-light-probe[o3d],
    ngt-ambient-light[o3d],
    ngt-ambient-light-probe[o3d],
    ngt-hemisphere-light[o3d],
    ngt-hemisphere-light-probe[o3d],
    ngt-directional-light[o3d],
    ngt-point-light[o3d],
    ngt-spot-light[o3d],
    ngt-rect-area-light[o3d],
    ngt-arrow-helper[o3d],
    ngt-axes-helper[o3d],
    ngt-box-helper[o3d],
    ngt-box3-helper[o3d],
    ngt-grid-helper[o3d],
    ngt-camera-helper[o3d],
    ngt-directional-light-helper[o3d],
    ngt-hemisphere-light-helper[o3d],
    ngt-plane-helper[o3d],
    ngt-point-light-helper[o3d],
    ngt-polar-grid-helper[o3d],
    ngt-skeleton-helper[o3d],
    ngt-spot-light-helper[o3d],
    ngt-line[o3d],
    ngt-line-loop[o3d],
    ngt-line-segments[o3d],
    ngt-sprite[o3d],
    ngt-camera[o3d],
    ngt-perspective-camera[o3d],
    ngt-orthographic-camera[o3d],
    ngt-array-camera[o3d],
    ngt-stereo-camera[o3d]
  `,
                    exportAs: 'ngtObject3dController',
                }]
        }], propDecorators: { name: [{
                type: Input
            }], position: [{
                type: Input
            }], rotation: [{
                type: Input
            }], quaternion: [{
                type: Input
            }], scale: [{
                type: Input
            }], color: [{
                type: Input
            }], userData: [{
                type: Input
            }], dispose: [{
                type: Input
            }], castShadow: [{
                type: Input
            }], receiveShadow: [{
                type: Input
            }], visible: [{
                type: Input
            }], matrixAutoUpdate: [{
                type: Input
            }], appendMode: [{
                type: Input
            }], appendTo: [{
                type: Input
            }], click: [{
                type: Output
            }], contextmenu: [{
                type: Output
            }], dblclick: [{
                type: Output
            }], pointerup: [{
                type: Output
            }], pointerdown: [{
                type: Output
            }], pointerover: [{
                type: Output
            }], pointerout: [{
                type: Output
            }], pointerenter: [{
                type: Output
            }], pointerleave: [{
                type: Output
            }], pointermove: [{
                type: Output
            }], pointermissed: [{
                type: Output
            }], pointercancel: [{
                type: Output
            }], wheel: [{
                type: Output
            }] } });
//# sourceMappingURL=object-3d-controller.directive.js.map