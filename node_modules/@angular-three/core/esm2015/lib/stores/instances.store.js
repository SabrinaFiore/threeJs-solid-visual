import { __rest } from "tslib";
import { Injectable } from '@angular/core';
import { ImperativeComponentStore } from './imperative-component-store.abstract';
import * as i0 from "@angular/core";
export class InstancesStore extends ImperativeComponentStore {
    constructor() {
        super({ materials: {}, bufferGeometries: {}, objects: {} });
        this.saveMaterial = this.updater((state, { material, id = material.uuid }) => (Object.assign(Object.assign({}, state), { materials: Object.assign(Object.assign({}, state.materials), { [id]: material }) })));
        this.removeMaterial = this.updater((state, id) => {
            const _a = state.materials, _b = id, _ = _a[_b], materials = __rest(_a, [typeof _b === "symbol" ? _b : _b + ""]);
            return Object.assign(Object.assign({}, state), { materials });
        });
        this.saveBufferGeometry = this.updater((state, { bufferGeometry, id = bufferGeometry.uuid }) => (Object.assign(Object.assign({}, state), { bufferGeometries: Object.assign(Object.assign({}, state.bufferGeometries), { [id]: bufferGeometry }) })));
        this.removeBufferGeometry = this.updater((state, id) => {
            const _a = state.bufferGeometries, _b = id, _ = _a[_b], bufferGeometries = __rest(_a, [typeof _b === "symbol" ? _b : _b + ""]);
            return Object.assign(Object.assign({}, state), { bufferGeometries });
        });
        this.saveObject = this.updater((state, obj) => (Object.assign(Object.assign({}, state), { objects: Object.assign(Object.assign({}, state.objects), { [obj.uuid]: obj }) })));
        this.removeObject = this.updater((state, id) => {
            const _a = state.objects, _b = id, _ = _a[_b], objects = __rest(_a, [typeof _b === "symbol" ? _b : _b + ""]);
            return Object.assign(Object.assign({}, state), { objects });
        });
    }
}
InstancesStore.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: InstancesStore, deps: [], target: i0.ɵɵFactoryTarget.Injectable });
InstancesStore.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: InstancesStore });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: InstancesStore, decorators: [{
            type: Injectable
        }], ctorParameters: function () { return []; } });
//# sourceMappingURL=instances.store.js.map