{"version":3,"file":"animation.store.js","sourceRoot":"","sources":["../../../../../../packages/core/src/lib/stores/animation.store.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable, OnDestroy } from '@angular/core';\nimport { isObservable, Observable } from 'rxjs';\nimport { filter, skip, tap, withLatestFrom } from 'rxjs/operators';\nimport type { Object3D } from 'three';\nimport type {\n  AnimationCallback,\n  AnimationStoreState,\n  RenderState,\n} from '../typings';\nimport { makeId } from '../utils';\nimport { ImperativeComponentStore } from './imperative-component-store.abstract';\n\n@Injectable()\nexport class AnimationStore\n  extends ImperativeComponentStore<AnimationStoreState>\n  implements OnDestroy\n{\n  constructor() {\n    super({\n      animations: {},\n      objectSubscriptions: [],\n      animationCallbacks: [],\n      hasPriority: false,\n    });\n\n    this.animationsChangedEffect(\n      this.select((s) => s.animations).pipe(skip(1))\n    );\n  }\n\n  readonly animationsChangedEffect = this.effect<\n    AnimationStoreState['animations']\n  >((animations$) =>\n    animations$.pipe(\n      tap((animations) => {\n        const animationCallbacks = Object.values(animations);\n        const hasPriority = animationCallbacks.some(\n          ({ priority }) => !!priority\n        );\n        this.patchState({ animationCallbacks, hasPriority });\n      })\n    )\n  );\n\n  readonly unregisterAnimationEffect = this.effect<string>((uuid$) =>\n    uuid$.pipe(\n      withLatestFrom(this.state$),\n      tap(\n        ([uuid, { animations, objectSubscriptions }]: [\n          string,\n          AnimationStoreState\n        ]) => {\n          const subscription = objectSubscriptions.find(\n            ([objectUuid]) => objectUuid === uuid\n          );\n          if (subscription) {\n            subscription[1].unsubscribe();\n          }\n\n          const { [uuid]: _, ...updatedAnimations } = animations;\n          this.patchState({\n            animations: updatedAnimations,\n            objectSubscriptions: objectSubscriptions.filter(\n              ([objectUuid]) => objectUuid !== uuid\n            ),\n          });\n        }\n      )\n    )\n  );\n\n  readonly clearEffect = this.effect((trigger$) =>\n    trigger$.pipe(\n      tap(() => {\n        this.patchState((state) => {\n          state.objectSubscriptions.forEach(([, subscription]) =>\n            subscription.unsubscribe()\n          );\n          return { animations: {}, objectSubscriptions: [] };\n        });\n      })\n    )\n  );\n\n  registerAnimation<TObject3d extends Object3D = Object3D>(\n    obj: TObject3d,\n    callback: AnimationCallback<TObject3d>,\n    priority?: number\n  ): () => void;\n  registerAnimation<TObject3d extends Object3D = Object3D>(\n    obs: Observable<TObject3d | null>,\n    callback: AnimationCallback<TObject3d>,\n    priority?: number\n  ): () => void;\n  registerAnimation(callback: AnimationCallback, priority?: number): () => void;\n  registerAnimation<TObject3d extends Object3D = Object3D>(\n    objOrObsOrCallback: TObject3d | Observable<TObject3d> | AnimationCallback,\n    callbackOrPriority?:\n      | ((obj: TObject3d, state: RenderState) => void)\n      | number,\n    priority = 0\n  ) {\n    if (objOrObsOrCallback === undefined) return;\n\n    if (typeof objOrObsOrCallback === 'function') {\n      const id = makeId();\n      this.patchState((state) => ({\n        ...state,\n        animations: {\n          ...state.animations,\n          [id]: {\n            obj: null,\n            callback: objOrObsOrCallback,\n            priority: (callbackOrPriority as number) || 0,\n          },\n        },\n      }));\n      return () => {\n        this.unregisterAnimationEffect(id);\n      };\n    }\n\n    if (isObservable(objOrObsOrCallback)) {\n      let id = '';\n      const subscription = objOrObsOrCallback\n        .pipe(filter((obj) => !!obj))\n        .subscribe((obj) => {\n          this.patchState((state) => {\n            const objectSubscriptions = state.objectSubscriptions;\n            if (objectSubscriptions[objectSubscriptions.length - 1]?.[0]) {\n              objectSubscriptions[objectSubscriptions.length - 1][0] = obj.uuid;\n            }\n            id = obj.uuid;\n            return {\n              animations: {\n                ...state.animations,\n                [id]: {\n                  obj,\n                  callback: callbackOrPriority as AnimationCallback<TObject3d>,\n                  priority,\n                },\n              },\n              objectSubscriptions,\n            };\n          });\n        });\n      this.patchState((state) => ({\n        objectSubscriptions: [\n          ...state.objectSubscriptions,\n          [null, subscription],\n        ],\n      }));\n      return () => {\n        this.unregisterAnimationEffect(id);\n      };\n    }\n\n    const uuid = (objOrObsOrCallback as Object3D).uuid;\n    this.patchState((state) => ({\n      animations: {\n        ...state.animations,\n        [uuid]: {\n          obj: objOrObsOrCallback,\n          callback: callbackOrPriority as AnimationCallback<TObject3d>,\n          priority,\n        },\n      },\n    }));\n    return () => {\n      this.unregisterAnimationEffect(uuid);\n    };\n  }\n\n  ngOnDestroy() {\n    this.clearEffect();\n    super.ngOnDestroy();\n  }\n}\n"]}