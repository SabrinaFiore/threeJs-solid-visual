{"version":3,"file":"events.store.js","sourceRoot":"","sources":["../../../../../../packages/core/src/lib/stores/events.store.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable, OnDestroy } from '@angular/core';\nimport { tap } from 'rxjs/operators';\nimport type { Object3D } from 'three';\nimport type {\n  EventsStoreState,\n  ThreeDomEvent,\n  ThreeIntersection,\n} from '../typings';\nimport { createEvents } from '../utils';\nimport { CanvasStore } from './canvas.store';\nimport { ImperativeComponentStore } from './imperative-component-store.abstract';\nimport { InstancesStore } from './instances.store';\n\nconst events = {\n  click: false,\n  contextmenu: false,\n  dblclick: false,\n  wheel: true,\n  pointerdown: true,\n  pointerup: true,\n  pointerleave: true,\n  pointermove: true,\n  pointercancel: true,\n  lostpointercapture: true,\n} as const;\n\n@Injectable()\nexport class EventsStore\n  extends ImperativeComponentStore<EventsStoreState>\n  implements OnDestroy\n{\n  constructor(\n    private readonly canvasStore: CanvasStore,\n    private readonly instancesStore: InstancesStore\n  ) {\n    super({\n      connected: false,\n      internal: {\n        interaction: [],\n        hovered: new Map<string, ThreeDomEvent>(),\n        capturedMap: new Map<number, Map<Object3D, ThreeIntersection>>(),\n        initialClick: [0, 0],\n        initialHits: [],\n      },\n    });\n    this.initHandlersEffect();\n  }\n\n  readonly initHandlersEffect = this.effect((trigger$) =>\n    trigger$.pipe(\n      tap(() => {\n        const { handlePointer } = createEvents(\n          () => this.canvasStore.getImperativeState(),\n          () => this.getImperativeState(),\n          () => this.instancesStore.getImperativeState()\n        );\n        this.patchState({\n          handlers: Object.keys(events).reduce(\n            (handlers, supportedEventName) => {\n              handlers[supportedEventName] = handlePointer(supportedEventName);\n              return handlers;\n            },\n            {} as Record<string, unknown>\n          ) as EventsStoreState['handlers'],\n        });\n      })\n    )\n  );\n\n  readonly connectEffect = this.effect<HTMLElement>((target$) =>\n    target$.pipe(\n      tap((target: HTMLElement) => {\n        this.disconnectEffect();\n        const { handlers } = this.getImperativeState();\n        this.patchState({ connected: target });\n        Object.entries(handlers ?? []).forEach(([name, event]) => {\n          const passive = events[name as keyof typeof events];\n          target.addEventListener(name, event, { passive });\n        });\n      })\n    )\n  );\n\n  readonly disconnectEffect = this.effect((trigger$) =>\n    trigger$.pipe(\n      tap(() => {\n        const { handlers, connected } = this.getImperativeState();\n        if (connected) {\n          Object.entries(handlers ?? []).forEach(([name, event]) => {\n            if (connected instanceof HTMLElement) {\n              connected.removeEventListener(name, event);\n            }\n          });\n\n          this.patchState({ connected: false });\n        }\n      })\n    )\n  );\n\n  ngOnDestroy() {\n    this.disconnectEffect();\n    super.ngOnDestroy();\n  }\n}\n"]}