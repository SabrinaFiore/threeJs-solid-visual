import { Directive, Input, NgZone, SkipSelf, } from '@angular/core';
import { InstancesStore } from '../stores';
import * as i0 from "@angular/core";
import * as i1 from "../stores";
export class ThreeBufferGeometry {
    constructor(instancesStore, ngZone) {
        this.instancesStore = instancesStore;
        this.ngZone = ngZone;
        this._extraArgs = [];
    }
    set extraArgs(v) {
        this._extraArgs = v;
        this.ngZone.runOutsideAngular(() => {
            this.init();
        });
    }
    ngOnInit() {
        this.ngZone.runOutsideAngular(() => {
            if (!this.bufferGeometry) {
                this.init();
            }
        });
    }
    init() {
        this._bufferGeometry = new this.geometryType(...this._extraArgs);
        this.instancesStore.saveBufferGeometry({
            id: this.ngtId,
            bufferGeometry: this._bufferGeometry,
        });
    }
    get bufferGeometry() {
        return this._bufferGeometry;
    }
    ngOnDestroy() {
        this.ngZone.runOutsideAngular(() => {
            if (this.bufferGeometry) {
                this.instancesStore.removeBufferGeometry(this.ngtId || this.bufferGeometry.uuid);
                this.bufferGeometry.dispose();
            }
        });
    }
}
ThreeBufferGeometry.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeBufferGeometry, deps: [{ token: i1.InstancesStore, skipSelf: true }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });
ThreeBufferGeometry.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.10", type: ThreeBufferGeometry, inputs: { ngtId: "ngtId" }, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeBufferGeometry, decorators: [{
            type: Directive
        }], ctorParameters: function () { return [{ type: i1.InstancesStore, decorators: [{
                    type: SkipSelf
                }] }, { type: i0.NgZone }]; }, propDecorators: { ngtId: [{
                type: Input
            }] } });
//# sourceMappingURL=geometry.abstract.js.map