{"version":3,"file":"geometry.abstract.js","sourceRoot":"","sources":["../../../../../../packages/core/src/lib/abstracts/geometry.abstract.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,SAAS,EACT,KAAK,EACL,MAAM,EAGN,QAAQ,GACT,MAAM,eAAe,CAAC;AAEvB,OAAO,EAAE,cAAc,EAAE,MAAM,WAAW,CAAC;;;AAI3C,MAAM,OAAgB,mBAAmB;IAMvC,YACiC,cAA8B,EAC5C,MAAc;QADA,mBAAc,GAAd,cAAc,CAAgB;QAC5C,WAAM,GAAN,MAAM,CAAQ;QAKzB,eAAU,GAAc,EAAE,CAAC;IAJhC,CAAC;IAKJ,IAAc,SAAS,CAAC,CAAY;QAClC,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,GAAG,EAAE;YACjC,IAAI,CAAC,IAAI,EAAE,CAAC;QACd,CAAC,CAAC,CAAC;IACL,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,GAAG,EAAE;YACjC,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE;gBACxB,IAAI,CAAC,IAAI,EAAE,CAAC;aACb;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,IAAI;QACV,IAAI,CAAC,eAAe,GAAG,IAAI,IAAI,CAAC,YAAY,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC;QAEjE,IAAI,CAAC,cAAc,CAAC,kBAAkB,CAAC;YACrC,EAAE,EAAE,IAAI,CAAC,KAAK;YACd,cAAc,EAAE,IAAI,CAAC,eAAe;SACrC,CAAC,CAAC;IACL,CAAC;IAGD,IAAI,cAAc;QAChB,OAAO,IAAI,CAAC,eAAe,CAAC;IAC9B,CAAC;IAED,WAAW;QACT,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,GAAG,EAAE;YACjC,IAAI,IAAI,CAAC,cAAc,EAAE;gBACvB,IAAI,CAAC,cAAc,CAAC,oBAAoB,CACtC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,cAAc,CAAC,IAAI,CACvC,CAAC;gBACF,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,CAAC;aAC/B;QACH,CAAC,CAAC,CAAC;IACL,CAAC;;iHApDmB,mBAAmB;qGAAnB,mBAAmB;4FAAnB,mBAAmB;kBADxC,SAAS;;0BAQL,QAAQ;iEAHF,KAAK;sBAAb,KAAK","sourcesContent":["import {\n  Directive,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  SkipSelf,\n} from '@angular/core';\nimport type { BufferGeometry } from 'three';\nimport { InstancesStore } from '../stores';\nimport type { AnyConstructor } from '../typings';\n\n@Directive()\nexport abstract class ThreeBufferGeometry<\n  TGeometry extends BufferGeometry = BufferGeometry\n> implements OnInit, OnDestroy\n{\n  @Input() ngtId?: string;\n\n  constructor(\n    @SkipSelf() protected readonly instancesStore: InstancesStore,\n    private readonly ngZone: NgZone\n  ) {}\n\n  abstract geometryType: AnyConstructor<TGeometry>;\n\n  private _extraArgs: unknown[] = [];\n  protected set extraArgs(v: unknown[]) {\n    this._extraArgs = v;\n    this.ngZone.runOutsideAngular(() => {\n      this.init();\n    });\n  }\n\n  ngOnInit() {\n    this.ngZone.runOutsideAngular(() => {\n      if (!this.bufferGeometry) {\n        this.init();\n      }\n    });\n  }\n\n  private init() {\n    this._bufferGeometry = new this.geometryType(...this._extraArgs);\n\n    this.instancesStore.saveBufferGeometry({\n      id: this.ngtId,\n      bufferGeometry: this._bufferGeometry,\n    });\n  }\n\n  private _bufferGeometry!: TGeometry;\n  get bufferGeometry(): TGeometry {\n    return this._bufferGeometry;\n  }\n\n  ngOnDestroy() {\n    this.ngZone.runOutsideAngular(() => {\n      if (this.bufferGeometry) {\n        this.instancesStore.removeBufferGeometry(\n          this.ngtId || this.bufferGeometry.uuid\n        );\n        this.bufferGeometry.dispose();\n      }\n    });\n  }\n}\n"]}