import { Directive, Input, NgZone, SkipSelf, } from '@angular/core';
import { Color } from 'three';
import { CanvasStore, InstancesStore } from '../stores';
import * as i0 from "@angular/core";
import * as i1 from "../stores";
export class ThreeMaterial {
    constructor(ngZone, instancesStore, canvasStore) {
        this.ngZone = ngZone;
        this.instancesStore = instancesStore;
        this.canvasStore = canvasStore;
    }
    set parameters(v) {
        this._parameters = v;
        if (v && this.material) {
            this.ngZone.runOutsideAngular(() => {
                this.convertColorToLinear(v);
                this.material.setValues(v);
                this.material.needsUpdate = true;
            });
        }
    }
    get parameters() {
        return this._parameters;
    }
    ngOnInit() {
        this.ngZone.runOutsideAngular(() => {
            if (this.parameters) {
                this.convertColorToLinear(this.parameters);
            }
            this._material = new this.materialType(this.parameters);
            this.instancesStore.saveMaterial({
                id: this.ngtId,
                material: this._material,
            });
        });
    }
    get material() {
        return this._material;
    }
    convertColorToLinear(parameters) {
        if ('color' in parameters) {
            const colorParams = parameters['color'];
            parameters['color'] = Array.isArray(colorParams)
                ? new Color(...colorParams)
                : new Color(colorParams);
            if (!this.canvasStore.getImperativeState().isLinear) {
                parameters['color'].convertSRGBToLinear();
            }
        }
    }
    ngOnDestroy() {
        this.ngZone.runOutsideAngular(() => {
            if (this.material) {
                this.instancesStore.removeMaterial(this.ngtId || this.material.uuid);
                this.material.dispose();
            }
        });
    }
}
ThreeMaterial.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeMaterial, deps: [{ token: i0.NgZone }, { token: i1.InstancesStore, skipSelf: true }, { token: i1.CanvasStore, skipSelf: true }], target: i0.ɵɵFactoryTarget.Directive });
ThreeMaterial.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.10", type: ThreeMaterial, inputs: { ngtId: "ngtId", parameters: "parameters" }, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeMaterial, decorators: [{
            type: Directive
        }], ctorParameters: function () { return [{ type: i0.NgZone }, { type: i1.InstancesStore, decorators: [{
                    type: SkipSelf
                }] }, { type: i1.CanvasStore, decorators: [{
                    type: SkipSelf
                }] }]; }, propDecorators: { ngtId: [{
                type: Input
            }], parameters: [{
                type: Input
            }] } });
//# sourceMappingURL=material.abstract.js.map