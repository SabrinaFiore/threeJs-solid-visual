import { Directive } from '@angular/core';
import { ThreeObject3d } from './object-3d.abstract';
import * as i0 from "@angular/core";
export class ThreeHelper extends ThreeObject3d {
    constructor() {
        super(...arguments);
        this._extraArgs = [];
        this.inputChangeHandler = () => {
            if (!this.object3d) {
                this.init();
            }
        };
    }
    set extraArgs(v) {
        this._extraArgs = v;
        this.ngZone.runOutsideAngular(() => {
            this.init();
        });
    }
    ngOnChanges() {
        super.ngOnChanges();
        this.inputChangeHandler();
    }
    ngOnInit() {
        this.inputChangeHandler();
    }
    initObject() {
        try {
            this._helper = new this.helperType(...this._extraArgs);
        }
        catch (e) {
            console.log('Failed to initialize Helper');
        }
    }
    get object3d() {
        return this._helper;
    }
}
ThreeHelper.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeHelper, deps: null, target: i0.ɵɵFactoryTarget.Directive });
ThreeHelper.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.10", type: ThreeHelper, usesInheritance: true, usesOnChanges: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeHelper, decorators: [{
            type: Directive
        }] });
//# sourceMappingURL=helper.abstract.js.map