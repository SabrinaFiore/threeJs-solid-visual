{"version":3,"file":"animation-loop-participant.abstract.js","sourceRoot":"","sources":["../../../../../../packages/core/src/lib/abstracts/animation-loop-participant.abstract.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,SAAS,EACT,YAAY,EACZ,MAAM,EAEN,MAAM,GACP,MAAM,eAAe,CAAC;AACvB,OAAO,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AACjC,OAAO,EAAE,cAAc,EAAE,MAAM,WAAW,CAAC;;;AAI3C,MAAM,OAAgB,wBAAwB;IAO5C,YACqB,cAA8B,EAC9B,MAAc;QADd,mBAAc,GAAd,cAAc,CAAgB;QAC9B,WAAM,GAAN,MAAM,CAAQ;QANzB,iBAAY,GAAG,IAAI,YAAY,EAA2B,CAAC;IAOlE,CAAC;IAEM,WAAW,CAAC,aAAsB;QAC1C,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,GAAG,EAAE;YACjC,IAAI,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE;gBAC9B,IAAI,aAAa,YAAY,QAAQ,EAAE;oBACrC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAC1D,aAAyB,EACzB,CAAC,GAAG,EAAE,KAAK,EAAE,EAAE;wBACb,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC;4BACrB,aAAa,EAAE,GAAyB;4BACxC,WAAW,EAAE,KAAK;yBACnB,CAAC,CAAC;oBACL,CAAC,CACF,CAAC;iBACH;qBAAM;oBACL,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAC1D,CAAC,KAAK,EAAE,EAAE;wBACR,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC;4BACrB,aAAa;4BACb,WAAW,EAAE,KAAK;yBACnB,CAAC,CAAC;oBACL,CAAC,CACF,CAAC;iBACH;aACF;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,WAAW;QACT,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,GAAG,EAAE;YACjC,IAAI,IAAI,CAAC,eAAe,EAAE;gBACxB,IAAI,CAAC,eAAe,EAAE,CAAC;aACxB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;;sHA7CmB,wBAAwB;0GAAxB,wBAAwB;4FAAxB,wBAAwB;kBAD7C,SAAS;0HAIE,YAAY;sBAArB,MAAM","sourcesContent":["import {\n  Directive,\n  EventEmitter,\n  NgZone,\n  OnDestroy,\n  Output,\n} from '@angular/core';\nimport { Object3D } from 'three';\nimport { AnimationStore } from '../stores';\nimport type { AnimationReady } from '../typings';\n\n@Directive()\nexport abstract class AnimationLoopParticipant<TObject = unknown>\n  implements OnDestroy\n{\n  @Output() animateReady = new EventEmitter<AnimationReady<TObject>>();\n\n  private animateTeardown?: () => void;\n\n  protected constructor(\n    protected readonly animationStore: AnimationStore,\n    protected readonly ngZone: NgZone\n  ) {}\n\n  protected participate(animateObject: TObject) {\n    this.ngZone.runOutsideAngular(() => {\n      if (this.animateReady.observed) {\n        if (animateObject instanceof Object3D) {\n          this.animateTeardown = this.animationStore.registerAnimation(\n            animateObject as Object3D,\n            (obj, state) => {\n              this.animateReady.emit({\n                animateObject: obj as unknown as TObject,\n                renderState: state,\n              });\n            }\n          );\n        } else {\n          this.animateTeardown = this.animationStore.registerAnimation(\n            (state) => {\n              this.animateReady.emit({\n                animateObject,\n                renderState: state,\n              });\n            }\n          );\n        }\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.ngZone.runOutsideAngular(() => {\n      if (this.animateTeardown) {\n        this.animateTeardown();\n      }\n    });\n  }\n}\n"]}