import { ContentChild, Directive, Input, } from '@angular/core';
import { SpriteMaterial } from 'three';
import { ThreeMaterial } from './material.abstract';
import { ThreeObject3d } from './object-3d.abstract';
import * as i0 from "@angular/core";
export class ThreeSprite extends ThreeObject3d {
    ngAfterContentInit() {
        this.init();
    }
    initObject() {
        if (this.material) {
            this._sprite = new this.spriteType(this.material);
            return;
        }
        if (this.materialDirective) {
            if (this.materialDirective.material instanceof SpriteMaterial) {
                this._sprite = new this.spriteType(this.materialDirective.material);
                return;
            }
            console.warn(`Sprite can only be instantiated with SpriteMaterial`);
        }
    }
    get object3d() {
        return this._sprite;
    }
}
ThreeSprite.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeSprite, deps: null, target: i0.ɵɵFactoryTarget.Directive });
ThreeSprite.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.10", type: ThreeSprite, inputs: { material: "material" }, queries: [{ propertyName: "materialDirective", first: true, predicate: ThreeMaterial, descendants: true }], usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: ThreeSprite, decorators: [{
            type: Directive
        }], propDecorators: { material: [{
                type: Input
            }], materialDirective: [{
                type: ContentChild,
                args: [ThreeMaterial]
            }] } });
//# sourceMappingURL=sprite.abstract.js.map