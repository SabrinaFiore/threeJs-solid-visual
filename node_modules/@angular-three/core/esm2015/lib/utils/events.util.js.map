{"version":3,"file":"events.util.js","sourceRoot":"","sources":["../../../../../../packages/core/src/lib/utils/events.util.ts"],"names":[],"mappings":"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","sourcesContent":["import type { Object3D } from 'three';\nimport { Vector3 } from 'three';\nimport type {\n  CanvasStoreState,\n  EventHandlers,\n  EventsStoreState,\n  InstanceInternal,\n  InstancesStoreState,\n  ThreeDomEvent,\n  ThreeEvent,\n  ThreeInstance,\n  ThreeIntersection,\n  UnknownRecord,\n} from '../typings';\nimport { makeId } from './make-id.util';\n\n/**\n * From r3f https://github.com/pmndrs/react-three-fiber/blob/master/packages/fiber/src/core/events.ts\n */\nexport function createEvents(\n  canvasStateGetter: () => CanvasStoreState,\n  eventsStateGetter: () => EventsStoreState,\n  instancesStateGetter: () => InstancesStoreState\n) {\n  const temp = new Vector3();\n\n  /** Sets up defaultRaycaster */\n  function prepareRay(event: ThreeDomEvent) {\n    const {\n      raycaster,\n      mouse,\n      camera,\n      clock,\n      renderer,\n      scene,\n      internal: { size, viewport },\n    } = canvasStateGetter();\n    const delta = clock.getDelta();\n    if (raycaster && camera && renderer && scene) {\n      const { offsetX, offsetY } =\n        raycaster.computeOffsets?.(event, {\n          camera,\n          clock,\n          size,\n          viewport,\n          renderer,\n          scene,\n          delta,\n          mouse,\n        }) ?? event;\n      const { width, height } = size;\n      mouse.set((offsetX / width) * 2 - 1, -(offsetY / height) * 2 + 1);\n      raycaster.setFromCamera(mouse, camera);\n    }\n  }\n\n  /** Calculates delta */\n  function calculateDistance(event: ThreeDomEvent) {\n    const {\n      internal: { initialClick },\n    } = eventsStateGetter();\n    const dx = event.offsetX - initialClick[0];\n    const dy = event.offsetY - initialClick[1];\n    return Math.round(Math.sqrt(dx * dx + dy * dy));\n  }\n\n  /** Returns true if an instance has a valid pointer-event registered, this excludes scroll, clicks etc */\n  function filterPointerEvents(objects: Object3D[]) {\n    return objects.filter((obj) =>\n      ['move', 'over', 'enter', 'out', 'leave'].some(\n        (name) =>\n          (obj as unknown as ThreeInstance).__ngt?.handlers?.[\n            ('pointer' + name) as keyof InstanceInternal['handlers']\n          ]\n      )\n    );\n  }\n\n  function intersect(filter?: (objects: Object3D[]) => Object3D[]) {\n    const { raycaster } = canvasStateGetter();\n    const { objects } = instancesStateGetter();\n    // Skip event handling when noEvents is set\n    if (!raycaster || (raycaster && !raycaster.enabled)) return [];\n\n    const seen = new Set<string>();\n    const intersections: ThreeIntersection[] = [];\n\n    // Allow callers to eliminate event objects\n    const eventsObjects = filter\n      ? filter(Object.values(objects))\n      : Object.values(objects);\n\n    // Intersect known handler objects and filter against duplicates\n    const intersects = raycaster\n      .intersectObjects(eventsObjects, true)\n      .filter((item) => {\n        const id = makeId(item as ThreeIntersection);\n        if (seen.has(id)) return false;\n        seen.add(id);\n        return true;\n      });\n\n    // https://github.com/mrdoob/three.js/issues/16031\n    // Allow custom userland intersect sort order\n    // if (raycaster.filter) intersects = raycaster.filter(intersects, state);\n\n    for (const intersect of intersects) {\n      let eventObject: Object3D | null = intersect.object;\n      // Bubble event up\n      while (eventObject) {\n        const handlers = (eventObject as unknown as ThreeInstance).__ngt\n          ?.handlers;\n        if (handlers) intersections.push({ ...intersect, eventObject });\n        eventObject = eventObject.parent;\n      }\n    }\n    return intersections;\n  }\n\n  /**  Creates filtered intersects and returns an array of positive hits */\n  function patchIntersects(\n    intersections: ThreeIntersection[],\n    event: ThreeDomEvent\n  ) {\n    const {\n      internal: { capturedMap },\n    } = eventsStateGetter();\n    // If the interaction is captured take that into account, the captured event has to be part of the intersects\n    if ('pointerId' in event && capturedMap.has(event.pointerId)) {\n      intersections.push(...capturedMap.get(event.pointerId)!.values());\n    }\n\n    return intersections;\n  }\n\n  /**  Handles intersections by forwarding them to handlers */\n  function handleIntersects(\n    intersections: ThreeIntersection[],\n    event: ThreeDomEvent,\n    callback: (event: ThreeDomEvent) => void\n  ) {\n    const { raycaster, mouse, camera } = canvasStateGetter();\n    const { internal: eventsInternal } = eventsStateGetter();\n    // If anything has been found, forward it to the event listeners\n    if (intersections.length && camera) {\n      const unprojectedPoint = temp.set(mouse.x, mouse.y, 0).unproject(camera);\n      const delta = event.type === 'click' ? calculateDistance(event) : 0;\n      const releasePointerCapture = (id: number) =>\n        (event.target as Element).releasePointerCapture(id);\n      const localState = { stopped: false };\n\n      for (const hit of intersections) {\n        const hasPointerCapture = (id: number) =>\n          eventsInternal.capturedMap.get(id)?.has(hit.eventObject) ?? false;\n\n        const setPointerCapture = (id: number) => {\n          if (eventsInternal.capturedMap.has(id)) {\n            // if the pointerId was previously captured, we add the hit to the\n            // event capturedMap.\n            eventsInternal.capturedMap.get(id)!.set(hit.eventObject, hit);\n          } else {\n            // if the pointerId was not previously captured, we create a map\n            // containing the hitObject, and the hit. hitObject is used for\n            // faster access.\n            eventsInternal.capturedMap.set(\n              id,\n              new Map([[hit.eventObject, hit]])\n            );\n          }\n\n          // Call the original event now\n          (event.target as Element).setPointerCapture(id);\n        };\n\n        // Add native event props\n        const extractEventProps: UnknownRecord = {};\n        for (const prop in Object.getPrototypeOf(event)) {\n          // noinspection JSUnfilteredForInLoop\n          const property = event[prop as keyof ThreeDomEvent];\n          // Only copy over atomics, leave functions alone as these should be\n          // called as event.nativeEvent.fn()\n          if (typeof property !== 'function') {\n            // noinspection JSUnfilteredForInLoop\n            extractEventProps[prop] = property;\n          }\n        }\n\n        const raycastEvent = {\n          ...hit,\n          ...extractEventProps,\n          spaceX: mouse.x,\n          spaceY: mouse.y,\n          intersections,\n          stopped: localState.stopped,\n          delta,\n          unprojectedPoint,\n          ray: raycaster ? raycaster.ray : null,\n          camera,\n          // Hijack stopPropagation, which just sets a flag\n          stopPropagation: () => {\n            // https://github.com/pmndrs/react-three-fiber/issues/596\n            // Events are not allowed to stop propagation if the pointer has been captured\n            const capturesForPointer =\n              'pointerId' in event &&\n              eventsInternal.capturedMap.get(event.pointerId);\n\n            // We only authorize stopPropagation...\n            if (\n              // ...if this pointer hasn't been captured\n              !capturesForPointer ||\n              // ... or if the hit object is capturing the pointer\n              capturesForPointer.has(hit.eventObject)\n            ) {\n              raycastEvent.stopped = localState.stopped = true;\n              // Propagation is stopped, remove all other hover records\n              // An event handler is only allowed to flush other handlers if it is hovered itself\n              if (\n                eventsInternal.hovered.size &&\n                Array.from(eventsInternal.hovered.values()).find(\n                  (i) => i.eventObject === hit.eventObject\n                )\n              ) {\n                // Objects cannot flush out higher up objects that have already caught the event\n                const higher = intersections.slice(\n                  0,\n                  intersections.indexOf(hit)\n                );\n                cancelPointer([...higher, hit]);\n              }\n            }\n          },\n          target: {\n            ...event.target,\n            setPointerCapture,\n            releasePointerCapture,\n            hasPointerCapture,\n          },\n          currentTarget: {\n            ...event.currentTarget,\n            setPointerCapture,\n            releasePointerCapture,\n            hasPointerCapture,\n          },\n          sourceEvent: event,\n          nativeEvent: event,\n        };\n\n        // Call subscribers\n        callback(raycastEvent as unknown as ThreeDomEvent);\n        // Event bubbling may be interrupted by stopPropagation\n        if (localState.stopped) break;\n      }\n    }\n    return intersections;\n  }\n\n  function cancelPointer(hits: ThreeIntersection[]) {\n    const { internal } = eventsStateGetter();\n    Array.from(internal.hovered.values()).forEach((hoveredObj) => {\n      // When no objects were hit or the the hovered object wasn't found underneath the cursor\n      // we call onPointerOut and delete the object from the hovered-elements map\n      if (\n        !hits.length ||\n        !hits.find(\n          (hit) =>\n            hit.object === hoveredObj.object && hit.index === hoveredObj.index\n        )\n      ) {\n        const eventObject = hoveredObj.eventObject;\n        const handlers = (eventObject as unknown as ThreeInstance).__ngt\n          ?.handlers;\n        internal.hovered.delete(makeId(hoveredObj));\n        if (handlers) {\n          // Clear out intersects, they are outdated by now\n          const data = { ...hoveredObj, intersections: hits || [] };\n          handlers.pointerout?.(data as ThreeEvent<PointerEvent>);\n          handlers.pointerleave?.(data as ThreeEvent<PointerEvent>);\n        }\n      }\n    });\n  }\n\n  const handlePointer = (name: string) => {\n    // Deal with cancellation\n    switch (name) {\n      case 'pointerleave':\n      case 'pointercancel':\n        return () => cancelPointer([]);\n      case 'lostpointercapture':\n        return (event: ThreeDomEvent) => {\n          if ('pointerId' in event) {\n            // this will be a problem if one target releases the pointerId\n            // and another one is still keeping it, as the line below\n            // indifferently deletes all capturing references.\n            const {\n              internal: { capturedMap },\n            } = eventsStateGetter();\n            capturedMap.delete(event.pointerId);\n          }\n        };\n    }\n\n    // Any other pointer goes here ...\n    return (event: ThreeDomEvent) => {\n      const { internal } = eventsStateGetter();\n      const { objects } = instancesStateGetter();\n\n      prepareRay(event);\n\n      // Get fresh intersects\n      const isPointerMove = name === 'pointermove';\n      const filter = isPointerMove ? filterPointerEvents : undefined;\n      const hits = patchIntersects(intersect(filter), event);\n\n      // Take care of unhover\n      if (isPointerMove) cancelPointer(hits);\n\n      handleIntersects(hits, event, (data: ThreeDomEvent) => {\n        const eventObject = data.eventObject;\n        const handlers = (eventObject as unknown as ThreeInstance).__ngt\n          ?.handlers;\n        // Check presence of handlers\n        if (!handlers) return;\n\n        if (isPointerMove) {\n          // Move event ...\n          if (\n            handlers.pointerover ||\n            handlers.pointerenter ||\n            handlers.pointerout ||\n            handlers.pointerleave\n          ) {\n            // When enter or out is present take care of hover-state\n            const id = makeId(data);\n            const hoveredItem = internal.hovered.get(id);\n            if (!hoveredItem) {\n              // If the object wasn't previously hovered, book it and call its handler\n              internal.hovered.set(id, data);\n              handlers.pointerover?.(data as ThreeEvent<PointerEvent>);\n              handlers.pointerenter?.(data as ThreeEvent<PointerEvent>);\n            } else if (hoveredItem.stopped) {\n              // If the object was previously hovered and stopped, we shouldn't allow other items to proceed\n              data.stopPropagation();\n            }\n          }\n          // Call mouse move\n          handlers.pointermove?.(data as ThreeEvent<PointerEvent>);\n        } else {\n          // All other events ...\n          const handler = handlers?.[name as keyof EventHandlers] as (\n            event: ThreeEvent<PointerEvent>\n          ) => void;\n          if (handler) {\n            // Forward all events back to their respective handlers with the exception of click events,\n            // which must use the initial target\n            if (\n              (name !== 'click' &&\n                name !== 'contextmenu' &&\n                name !== 'dblclick') ||\n              internal.initialHits.includes(eventObject)\n            ) {\n              handler(data as ThreeEvent<PointerEvent>);\n              pointerMissed(\n                event,\n                Object.values(objects).filter(\n                  (object) => object !== eventObject\n                )\n              );\n            }\n          }\n        }\n      });\n\n      // Save initial coordinates on pointer-down\n      if (name === 'pointerdown') {\n        internal.initialClick = [event.offsetX, event.offsetY];\n        internal.initialHits = hits.map((hit) => hit.eventObject);\n      }\n\n      // If a click yields no results, pass it back to the user as a miss\n      if (\n        (name === 'click' || name === 'contextmenu' || name === 'dblclick') &&\n        !hits.length\n      ) {\n        if (calculateDistance(event) <= 2) {\n          pointerMissed(event, Object.values(objects));\n          // if (onPointerMissed) onPointerMissed();\n        }\n      }\n    };\n  };\n\n  function pointerMissed(event: MouseEvent, objects: Object3D[]) {\n    objects.forEach((object: Object3D) =>\n      (object as unknown as ThreeInstance).__ngt?.handlers?.pointermissed?.(\n        event as ThreeEvent<PointerEvent>\n      )\n    );\n  }\n\n  return { handlePointer };\n}\n"]}