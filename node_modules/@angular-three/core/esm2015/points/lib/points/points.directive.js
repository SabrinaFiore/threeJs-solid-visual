import { OBJECT_3D_CONTROLLER_PROVIDER, ThreeBufferGeometry, ThreeMaterial, ThreeObject3d, ThreeObject3dMaterialGeometry, } from '@angular-three/core';
import { ContentChild, ContentChildren, Directive } from '@angular/core';
import { Points } from 'three';
import * as i0 from "@angular/core";
export class PointsDirective extends ThreeObject3dMaterialGeometry {
    set materialDirectives(v) {
        if (this.material == null && v) {
            this.material =
                v.length === 1
                    ? v.first.material
                    : v.toArray().map((dir) => dir.material);
        }
    }
    set bufferGeometryDirective(v) {
        if (this.geometry == null) {
            this.geometry = v.bufferGeometry;
        }
    }
    get objectType() {
        return Points;
    }
}
PointsDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: PointsDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
PointsDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.10", type: PointsDirective, selector: "ngt-points", providers: [
        { provide: ThreeObject3d, useExisting: PointsDirective },
        OBJECT_3D_CONTROLLER_PROVIDER,
    ], queries: [{ propertyName: "bufferGeometryDirective", first: true, predicate: ThreeBufferGeometry, descendants: true }, { propertyName: "materialDirectives", predicate: ThreeMaterial }], exportAs: ["ngtPoints"], usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: PointsDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'ngt-points',
                    exportAs: 'ngtPoints',
                    providers: [
                        { provide: ThreeObject3d, useExisting: PointsDirective },
                        OBJECT_3D_CONTROLLER_PROVIDER,
                    ],
                }]
        }], propDecorators: { materialDirectives: [{
                type: ContentChildren,
                args: [ThreeMaterial]
            }], bufferGeometryDirective: [{
                type: ContentChild,
                args: [ThreeBufferGeometry]
            }] } });
//# sourceMappingURL=points.directive.js.map