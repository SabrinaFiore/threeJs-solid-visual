// GENERATED
import { ThreeBufferGeometry } from '@angular-three/core';
import { Directive, Input } from '@angular/core';
import { RoundedBoxGeometry } from 'three/examples/jsm/geometries/RoundedBoxGeometry';
import * as i0 from "@angular/core";
export class RoundedBoxGeometryDirective extends ThreeBufferGeometry {
    constructor() {
        super(...arguments);
        this.geometryType = RoundedBoxGeometry;
    }
    set args(v) {
        this.extraArgs = v;
    }
}
RoundedBoxGeometryDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: RoundedBoxGeometryDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
RoundedBoxGeometryDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.10", type: RoundedBoxGeometryDirective, selector: "ngt-rounded-box-geometry", inputs: { args: "args" }, providers: [
        {
            provide: ThreeBufferGeometry,
            useExisting: RoundedBoxGeometryDirective,
        },
    ], exportAs: ["ngtRoundedBoxGeometry"], usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: RoundedBoxGeometryDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'ngt-rounded-box-geometry',
                    exportAs: 'ngtRoundedBoxGeometry',
                    providers: [
                        {
                            provide: ThreeBufferGeometry,
                            useExisting: RoundedBoxGeometryDirective,
                        },
                    ],
                }]
        }], propDecorators: { args: [{
                type: Input
            }] } });
//# sourceMappingURL=rounded-box-geometry.directive.js.map