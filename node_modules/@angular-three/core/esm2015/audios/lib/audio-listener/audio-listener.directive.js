import { CanvasStore, DestroyedService } from '@angular-three/core';
import { Directive, EventEmitter, Input, NgZone, Output, SkipSelf, } from '@angular/core';
import { takeUntil } from 'rxjs/operators';
import { AudioListener } from 'three';
import * as i0 from "@angular/core";
import * as i1 from "@angular-three/core";
export class AudioListenerDirective {
    constructor(canvasStore, destroyed, ngZone) {
        this.canvasStore = canvasStore;
        this.destroyed = destroyed;
        this.ngZone = ngZone;
        this.ready = new EventEmitter();
    }
    ngOnInit() {
        this.ngZone.runOutsideAngular(() => {
            this._listener = new AudioListener();
            if (this.filter) {
                this._listener.filter = this.filter;
            }
            if (this.timeDelta) {
                this._listener.timeDelta = this.timeDelta;
            }
            this.canvasStore.active$
                .pipe(takeUntil(this.destroyed))
                .subscribe((active) => {
                this.ngZone.runOutsideAngular(() => {
                    const { camera } = this.canvasStore.getImperativeState();
                    if (active && camera) {
                        camera.add(this.audioListener);
                        this.ready.emit(this.audioListener);
                    }
                });
            });
        });
    }
    get audioListener() {
        return this._listener;
    }
}
AudioListenerDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: AudioListenerDirective, deps: [{ token: i1.CanvasStore, skipSelf: true }, { token: i1.DestroyedService }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });
AudioListenerDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.10", type: AudioListenerDirective, selector: "ngt-audio-listener", inputs: { filter: "filter", timeDelta: "timeDelta" }, outputs: { ready: "ready" }, providers: [DestroyedService], exportAs: ["ngtAudioListener"], ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: AudioListenerDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'ngt-audio-listener',
                    exportAs: 'ngtAudioListener',
                    providers: [DestroyedService],
                }]
        }], ctorParameters: function () { return [{ type: i1.CanvasStore, decorators: [{
                    type: SkipSelf
                }] }, { type: i1.DestroyedService }, { type: i0.NgZone }]; }, propDecorators: { filter: [{
                type: Input
            }], timeDelta: [{
                type: Input
            }], ready: [{
                type: Output
            }] } });
//# sourceMappingURL=audio-listener.directive.js.map