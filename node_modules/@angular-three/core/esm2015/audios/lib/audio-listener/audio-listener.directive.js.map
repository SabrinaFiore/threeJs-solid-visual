{"version":3,"file":"audio-listener.directive.js","sourceRoot":"","sources":["../../../../../../../packages/core/audios/src/lib/audio-listener/audio-listener.directive.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,gBAAgB,EAAE,MAAM,qBAAqB,CAAC;AACpE,OAAO,EACL,SAAS,EACT,YAAY,EACZ,KAAK,EACL,MAAM,EAEN,MAAM,EACN,QAAQ,GACT,MAAM,eAAe,CAAC;AACvB,OAAO,EAAE,SAAS,EAAE,MAAM,gBAAgB,CAAC;AAC3C,OAAO,EAAE,aAAa,EAAE,MAAM,OAAO,CAAC;;;AAOtC,MAAM,OAAO,sBAAsB;IAQjC,YAC+B,WAAwB,EACpC,SAA2B,EAC3B,MAAc;QAFF,gBAAW,GAAX,WAAW,CAAa;QACpC,cAAS,GAAT,SAAS,CAAkB;QAC3B,WAAM,GAAN,MAAM,CAAQ;QAPvB,UAAK,GAAG,IAAI,YAAY,EAAiB,CAAC;IAQjD,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,GAAG,EAAE;YACjC,IAAI,CAAC,SAAS,GAAG,IAAI,aAAa,EAAE,CAAC;YAErC,IAAI,IAAI,CAAC,MAAM,EAAE;gBACf,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;aACrC;YAED,IAAI,IAAI,CAAC,SAAS,EAAE;gBAClB,IAAI,CAAC,SAAS,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;aAC3C;YAED,IAAI,CAAC,WAAW,CAAC,OAAO;iBACrB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;iBAC/B,SAAS,CAAC,CAAC,MAAM,EAAE,EAAE;gBACpB,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,GAAG,EAAE;oBACjC,MAAM,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC,kBAAkB,EAAE,CAAC;oBACzD,IAAI,MAAM,IAAI,MAAM,EAAE;wBACpB,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;wBAC/B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;qBACrC;gBACH,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACL,CAAC;IAED,IAAI,aAAa;QACf,OAAO,IAAI,CAAC,SAAS,CAAC;IACxB,CAAC;;oHA1CU,sBAAsB;wGAAtB,sBAAsB,gIAFtB,CAAC,gBAAgB,CAAC;4FAElB,sBAAsB;kBALlC,SAAS;mBAAC;oBACT,QAAQ,EAAE,oBAAoB;oBAC9B,QAAQ,EAAE,kBAAkB;oBAC5B,SAAS,EAAE,CAAC,gBAAgB,CAAC;iBAC9B;;0BAUI,QAAQ;gGARF,MAAM;sBAAd,KAAK;gBACG,SAAS;sBAAjB,KAAK;gBAEI,KAAK;sBAAd,MAAM","sourcesContent":["import { CanvasStore, DestroyedService } from '@angular-three/core';\nimport {\n  Directive,\n  EventEmitter,\n  Input,\n  NgZone,\n  OnInit,\n  Output,\n  SkipSelf,\n} from '@angular/core';\nimport { takeUntil } from 'rxjs/operators';\nimport { AudioListener } from 'three';\n\n@Directive({\n  selector: 'ngt-audio-listener',\n  exportAs: 'ngtAudioListener',\n  providers: [DestroyedService],\n})\nexport class AudioListenerDirective implements OnInit {\n  @Input() filter?: AudioNode;\n  @Input() timeDelta?: number;\n\n  @Output() ready = new EventEmitter<AudioListener>();\n\n  private _listener!: AudioListener;\n\n  constructor(\n    @SkipSelf() private readonly canvasStore: CanvasStore,\n    private readonly destroyed: DestroyedService,\n    private readonly ngZone: NgZone\n  ) {}\n\n  ngOnInit() {\n    this.ngZone.runOutsideAngular(() => {\n      this._listener = new AudioListener();\n\n      if (this.filter) {\n        this._listener.filter = this.filter;\n      }\n\n      if (this.timeDelta) {\n        this._listener.timeDelta = this.timeDelta;\n      }\n\n      this.canvasStore.active$\n        .pipe(takeUntil(this.destroyed))\n        .subscribe((active) => {\n          this.ngZone.runOutsideAngular(() => {\n            const { camera } = this.canvasStore.getImperativeState();\n            if (active && camera) {\n              camera.add(this.audioListener);\n              this.ready.emit(this.audioListener);\n            }\n          });\n        });\n    });\n  }\n\n  get audioListener(): AudioListener {\n    return this._listener;\n  }\n}\n"]}