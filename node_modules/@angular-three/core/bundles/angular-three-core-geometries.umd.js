(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular-three/core'), require('@angular/core'), require('three'), require('three/examples/jsm/geometries/BoxLineGeometry'), require('three/examples/jsm/geometries/ConvexGeometry'), require('three/examples/jsm/geometries/DecalGeometry'), require('three/examples/jsm/geometries/ParametricGeometry'), require('three/examples/jsm/geometries/RoundedBoxGeometry'), require('three/examples/jsm/geometries/TeapotGeometry'), require('three/examples/jsm/geometries/TextGeometry')) :
    typeof define === 'function' && define.amd ? define('@angular-three/core/geometries', ['exports', '@angular-three/core', '@angular/core', 'three', 'three/examples/jsm/geometries/BoxLineGeometry', 'three/examples/jsm/geometries/ConvexGeometry', 'three/examples/jsm/geometries/DecalGeometry', 'three/examples/jsm/geometries/ParametricGeometry', 'three/examples/jsm/geometries/RoundedBoxGeometry', 'three/examples/jsm/geometries/TeapotGeometry', 'three/examples/jsm/geometries/TextGeometry'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global["angular-three"] = global["angular-three"] || {}, global["angular-three"].core = global["angular-three"].core || {}, global["angular-three"].core.geometries = {}), global["angular-three"].core, global.ng.core, global.three, global.BoxLineGeometry, global.ConvexGeometry, global.DecalGeometry, global.ParametricGeometry, global.RoundedBoxGeometry, global.TeapotGeometry, global.TextGeometry));
})(this, (function (exports, core, i0, three, BoxLineGeometry, ConvexGeometry, DecalGeometry, ParametricGeometry, RoundedBoxGeometry, TeapotGeometry, TextGeometry) { 'use strict';

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () { return e[k]; }
                    });
                }
            });
        }
        n["default"] = e;
        return Object.freeze(n);
    }

    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b)
                if (Object.prototype.hasOwnProperty.call(b, p))
                    d[p] = b[p]; };
        return extendStatics(d, b);
    };
    function __extends(d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }
    var __assign = function () {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s)
                    if (Object.prototype.hasOwnProperty.call(s, p))
                        t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };
    function __rest(s, e) {
        var t = {};
        for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
                t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }
    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
            r = Reflect.decorate(decorators, target, key, desc);
        else
            for (var i = decorators.length - 1; i >= 0; i--)
                if (d = decorators[i])
                    r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }
    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); };
    }
    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
            return Reflect.metadata(metadataKey, metadataValue);
    }
    function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try {
                step(generator.next(value));
            }
            catch (e) {
                reject(e);
            } }
            function rejected(value) { try {
                step(generator["throw"](value));
            }
            catch (e) {
                reject(e);
            } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }
    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function () { if (t[0] & 1)
                throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function () { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f)
                throw new TypeError("Generator is already executing.");
            while (_)
                try {
                    if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
                        return t;
                    if (y = 0, t)
                        op = [op[0] & 2, t.value];
                    switch (op[0]) {
                        case 0:
                        case 1:
                            t = op;
                            break;
                        case 4:
                            _.label++;
                            return { value: op[1], done: false };
                        case 5:
                            _.label++;
                            y = op[1];
                            op = [0];
                            continue;
                        case 7:
                            op = _.ops.pop();
                            _.trys.pop();
                            continue;
                        default:
                            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                                _ = 0;
                                continue;
                            }
                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {
                                _.label = op[1];
                                break;
                            }
                            if (op[0] === 6 && _.label < t[1]) {
                                _.label = t[1];
                                t = op;
                                break;
                            }
                            if (t && _.label < t[2]) {
                                _.label = t[2];
                                _.ops.push(op);
                                break;
                            }
                            if (t[2])
                                _.ops.pop();
                            _.trys.pop();
                            continue;
                    }
                    op = body.call(thisArg, _);
                }
                catch (e) {
                    op = [6, e];
                    y = 0;
                }
                finally {
                    f = t = 0;
                }
            if (op[0] & 5)
                throw op[1];
            return { value: op[0] ? op[1] : void 0, done: true };
        }
    }
    var __createBinding = Object.create ? (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        Object.defineProperty(o, k2, { enumerable: true, get: function () { return m[k]; } });
    }) : (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        o[k2] = m[k];
    });
    function __exportStar(m, o) {
        for (var p in m)
            if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p))
                __createBinding(o, m, p);
    }
    function __values(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m)
            return m.call(o);
        if (o && typeof o.length === "number")
            return {
                next: function () {
                    if (o && i >= o.length)
                        o = void 0;
                    return { value: o && o[i++], done: !o };
                }
            };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }
    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m)
            return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
                ar.push(r.value);
        }
        catch (error) {
            e = { error: error };
        }
        finally {
            try {
                if (r && !r.done && (m = i["return"]))
                    m.call(i);
            }
            finally {
                if (e)
                    throw e.error;
            }
        }
        return ar;
    }
    /** @deprecated */
    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }
    /** @deprecated */
    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++)
            s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    }
    function __spreadArray(to, from, pack) {
        if (pack || arguments.length === 2)
            for (var i = 0, l = from.length, ar; i < l; i++) {
                if (ar || !(i in from)) {
                    if (!ar)
                        ar = Array.prototype.slice.call(from, 0, i);
                    ar[i] = from[i];
                }
            }
        return to.concat(ar || Array.prototype.slice.call(from));
    }
    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }
    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n])
            i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try {
            step(g[n](v));
        }
        catch (e) {
            settle(q[0][3], e);
        } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length)
            resume(q[0][0], q[0][1]); }
    }
    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    }
    function __asyncValues(o) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function (v) { resolve({ value: v, done: d }); }, reject); }
    }
    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) {
            Object.defineProperty(cooked, "raw", { value: raw });
        }
        else {
            cooked.raw = raw;
        }
        return cooked;
    }
    ;
    var __setModuleDefault = Object.create ? (function (o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function (o, v) {
        o["default"] = v;
    };
    function __importStar(mod) {
        if (mod && mod.__esModule)
            return mod;
        var result = {};
        if (mod != null)
            for (var k in mod)
                if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
                    __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    }
    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }
    function __classPrivateFieldGet(receiver, state, kind, f) {
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a getter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
    }
    function __classPrivateFieldSet(receiver, state, value, kind, f) {
        if (kind === "m")
            throw new TypeError("Private method is not writable");
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a setter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
    }

    var BufferGeometryDirective = /** @class */ (function (_super) {
        __extends(BufferGeometryDirective, _super);
        function BufferGeometryDirective() {
            var _this = _super.apply(this, __spreadArray([], __read(arguments))) || this;
            _this.geometryType = three.BufferGeometry;
            return _this;
        }
        Object.defineProperty(BufferGeometryDirective.prototype, "args", {
            set: function (v) {
                this.extraArgs = v;
            },
            enumerable: false,
            configurable: true
        });
        return BufferGeometryDirective;
    }(core.ThreeBufferGeometry));
    BufferGeometryDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: BufferGeometryDirective, deps: null, target: i0__namespace.ɵɵFactoryTarget.Directive });
    BufferGeometryDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.10", type: BufferGeometryDirective, selector: "ngt-buffer-geometry", inputs: { args: "args" }, providers: [
            {
                provide: core.ThreeBufferGeometry,
                useExisting: BufferGeometryDirective,
            },
        ], exportAs: ["ngtBufferGeometry"], usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: BufferGeometryDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: 'ngt-buffer-geometry',
                        exportAs: 'ngtBufferGeometry',
                        providers: [
                            {
                                provide: core.ThreeBufferGeometry,
                                useExisting: BufferGeometryDirective,
                            },
                        ],
                    }]
            }], propDecorators: { args: [{
                    type: i0.Input
                }] } });

    // GENERATED
    var ThreeBufferGeometryModule = /** @class */ (function () {
        function ThreeBufferGeometryModule() {
        }
        return ThreeBufferGeometryModule;
    }());
    ThreeBufferGeometryModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeBufferGeometryModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    ThreeBufferGeometryModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeBufferGeometryModule, declarations: [BufferGeometryDirective], exports: [BufferGeometryDirective] });
    ThreeBufferGeometryModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeBufferGeometryModule });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeBufferGeometryModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        declarations: [BufferGeometryDirective],
                        exports: [BufferGeometryDirective],
                    }]
            }] });

    // GENERATED

    var InstancedBufferGeometryDirective = /** @class */ (function (_super) {
        __extends(InstancedBufferGeometryDirective, _super);
        function InstancedBufferGeometryDirective() {
            var _this = _super.apply(this, __spreadArray([], __read(arguments))) || this;
            _this.geometryType = three.InstancedBufferGeometry;
            return _this;
        }
        Object.defineProperty(InstancedBufferGeometryDirective.prototype, "args", {
            set: function (v) {
                this.extraArgs = v;
            },
            enumerable: false,
            configurable: true
        });
        return InstancedBufferGeometryDirective;
    }(core.ThreeBufferGeometry));
    InstancedBufferGeometryDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: InstancedBufferGeometryDirective, deps: null, target: i0__namespace.ɵɵFactoryTarget.Directive });
    InstancedBufferGeometryDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.10", type: InstancedBufferGeometryDirective, selector: "ngt-instanced-buffer-geometry,ngt-instanced-geometry", inputs: { args: "args" }, providers: [
            {
                provide: core.ThreeBufferGeometry,
                useExisting: InstancedBufferGeometryDirective,
            },
        ], exportAs: ["ngtInstancedBufferGeometry"], usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: InstancedBufferGeometryDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: 'ngt-instanced-buffer-geometry,ngt-instanced-geometry',
                        exportAs: 'ngtInstancedBufferGeometry',
                        providers: [
                            {
                                provide: core.ThreeBufferGeometry,
                                useExisting: InstancedBufferGeometryDirective,
                            },
                        ],
                    }]
            }], propDecorators: { args: [{
                    type: i0.Input
                }] } });

    // GENERATED
    var ThreeInstancedBufferGeometryModule = /** @class */ (function () {
        function ThreeInstancedBufferGeometryModule() {
        }
        return ThreeInstancedBufferGeometryModule;
    }());
    ThreeInstancedBufferGeometryModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeInstancedBufferGeometryModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    ThreeInstancedBufferGeometryModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeInstancedBufferGeometryModule, declarations: [InstancedBufferGeometryDirective], exports: [InstancedBufferGeometryDirective] });
    ThreeInstancedBufferGeometryModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeInstancedBufferGeometryModule });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeInstancedBufferGeometryModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        declarations: [InstancedBufferGeometryDirective],
                        exports: [InstancedBufferGeometryDirective],
                    }]
            }] });

    // GENERATED

    var BoxBufferGeometryDirective = /** @class */ (function (_super) {
        __extends(BoxBufferGeometryDirective, _super);
        function BoxBufferGeometryDirective() {
            var _this = _super.apply(this, __spreadArray([], __read(arguments))) || this;
            _this.geometryType = three.BoxBufferGeometry;
            return _this;
        }
        Object.defineProperty(BoxBufferGeometryDirective.prototype, "args", {
            set: function (v) {
                this.extraArgs = v;
            },
            enumerable: false,
            configurable: true
        });
        return BoxBufferGeometryDirective;
    }(core.ThreeBufferGeometry));
    BoxBufferGeometryDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: BoxBufferGeometryDirective, deps: null, target: i0__namespace.ɵɵFactoryTarget.Directive });
    BoxBufferGeometryDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.10", type: BoxBufferGeometryDirective, selector: "ngt-box-buffer-geometry,ngt-box-geometry", inputs: { args: "args" }, providers: [
            {
                provide: core.ThreeBufferGeometry,
                useExisting: BoxBufferGeometryDirective,
            },
        ], exportAs: ["ngtBoxBufferGeometry"], usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: BoxBufferGeometryDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: 'ngt-box-buffer-geometry,ngt-box-geometry',
                        exportAs: 'ngtBoxBufferGeometry',
                        providers: [
                            {
                                provide: core.ThreeBufferGeometry,
                                useExisting: BoxBufferGeometryDirective,
                            },
                        ],
                    }]
            }], propDecorators: { args: [{
                    type: i0.Input
                }] } });

    // GENERATED
    var ThreeBoxBufferGeometryModule = /** @class */ (function () {
        function ThreeBoxBufferGeometryModule() {
        }
        return ThreeBoxBufferGeometryModule;
    }());
    ThreeBoxBufferGeometryModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeBoxBufferGeometryModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    ThreeBoxBufferGeometryModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeBoxBufferGeometryModule, declarations: [BoxBufferGeometryDirective], exports: [BoxBufferGeometryDirective] });
    ThreeBoxBufferGeometryModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeBoxBufferGeometryModule });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeBoxBufferGeometryModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        declarations: [BoxBufferGeometryDirective],
                        exports: [BoxBufferGeometryDirective],
                    }]
            }] });

    // GENERATED

    var CircleBufferGeometryDirective = /** @class */ (function (_super) {
        __extends(CircleBufferGeometryDirective, _super);
        function CircleBufferGeometryDirective() {
            var _this = _super.apply(this, __spreadArray([], __read(arguments))) || this;
            _this.geometryType = three.CircleBufferGeometry;
            return _this;
        }
        Object.defineProperty(CircleBufferGeometryDirective.prototype, "args", {
            set: function (v) {
                this.extraArgs = v;
            },
            enumerable: false,
            configurable: true
        });
        return CircleBufferGeometryDirective;
    }(core.ThreeBufferGeometry));
    CircleBufferGeometryDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: CircleBufferGeometryDirective, deps: null, target: i0__namespace.ɵɵFactoryTarget.Directive });
    CircleBufferGeometryDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.10", type: CircleBufferGeometryDirective, selector: "ngt-circle-buffer-geometry,ngt-circle-geometry", inputs: { args: "args" }, providers: [
            {
                provide: core.ThreeBufferGeometry,
                useExisting: CircleBufferGeometryDirective,
            },
        ], exportAs: ["ngtCircleBufferGeometry"], usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: CircleBufferGeometryDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: 'ngt-circle-buffer-geometry,ngt-circle-geometry',
                        exportAs: 'ngtCircleBufferGeometry',
                        providers: [
                            {
                                provide: core.ThreeBufferGeometry,
                                useExisting: CircleBufferGeometryDirective,
                            },
                        ],
                    }]
            }], propDecorators: { args: [{
                    type: i0.Input
                }] } });

    // GENERATED
    var ThreeCircleBufferGeometryModule = /** @class */ (function () {
        function ThreeCircleBufferGeometryModule() {
        }
        return ThreeCircleBufferGeometryModule;
    }());
    ThreeCircleBufferGeometryModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeCircleBufferGeometryModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    ThreeCircleBufferGeometryModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeCircleBufferGeometryModule, declarations: [CircleBufferGeometryDirective], exports: [CircleBufferGeometryDirective] });
    ThreeCircleBufferGeometryModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeCircleBufferGeometryModule });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeCircleBufferGeometryModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        declarations: [CircleBufferGeometryDirective],
                        exports: [CircleBufferGeometryDirective],
                    }]
            }] });

    // GENERATED

    var ConeBufferGeometryDirective = /** @class */ (function (_super) {
        __extends(ConeBufferGeometryDirective, _super);
        function ConeBufferGeometryDirective() {
            var _this = _super.apply(this, __spreadArray([], __read(arguments))) || this;
            _this.geometryType = three.ConeBufferGeometry;
            return _this;
        }
        Object.defineProperty(ConeBufferGeometryDirective.prototype, "args", {
            set: function (v) {
                this.extraArgs = v;
            },
            enumerable: false,
            configurable: true
        });
        return ConeBufferGeometryDirective;
    }(core.ThreeBufferGeometry));
    ConeBufferGeometryDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ConeBufferGeometryDirective, deps: null, target: i0__namespace.ɵɵFactoryTarget.Directive });
    ConeBufferGeometryDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.10", type: ConeBufferGeometryDirective, selector: "ngt-cone-buffer-geometry,ngt-cone-geometry", inputs: { args: "args" }, providers: [
            {
                provide: core.ThreeBufferGeometry,
                useExisting: ConeBufferGeometryDirective,
            },
        ], exportAs: ["ngtConeBufferGeometry"], usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ConeBufferGeometryDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: 'ngt-cone-buffer-geometry,ngt-cone-geometry',
                        exportAs: 'ngtConeBufferGeometry',
                        providers: [
                            {
                                provide: core.ThreeBufferGeometry,
                                useExisting: ConeBufferGeometryDirective,
                            },
                        ],
                    }]
            }], propDecorators: { args: [{
                    type: i0.Input
                }] } });

    // GENERATED
    var ThreeConeBufferGeometryModule = /** @class */ (function () {
        function ThreeConeBufferGeometryModule() {
        }
        return ThreeConeBufferGeometryModule;
    }());
    ThreeConeBufferGeometryModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeConeBufferGeometryModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    ThreeConeBufferGeometryModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeConeBufferGeometryModule, declarations: [ConeBufferGeometryDirective], exports: [ConeBufferGeometryDirective] });
    ThreeConeBufferGeometryModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeConeBufferGeometryModule });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeConeBufferGeometryModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        declarations: [ConeBufferGeometryDirective],
                        exports: [ConeBufferGeometryDirective],
                    }]
            }] });

    // GENERATED

    var CylinderBufferGeometryDirective = /** @class */ (function (_super) {
        __extends(CylinderBufferGeometryDirective, _super);
        function CylinderBufferGeometryDirective() {
            var _this = _super.apply(this, __spreadArray([], __read(arguments))) || this;
            _this.geometryType = three.CylinderBufferGeometry;
            return _this;
        }
        Object.defineProperty(CylinderBufferGeometryDirective.prototype, "args", {
            set: function (v) {
                this.extraArgs = v;
            },
            enumerable: false,
            configurable: true
        });
        return CylinderBufferGeometryDirective;
    }(core.ThreeBufferGeometry));
    CylinderBufferGeometryDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: CylinderBufferGeometryDirective, deps: null, target: i0__namespace.ɵɵFactoryTarget.Directive });
    CylinderBufferGeometryDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.10", type: CylinderBufferGeometryDirective, selector: "ngt-cylinder-buffer-geometry,ngt-cylinder-geometry", inputs: { args: "args" }, providers: [
            {
                provide: core.ThreeBufferGeometry,
                useExisting: CylinderBufferGeometryDirective,
            },
        ], exportAs: ["ngtCylinderBufferGeometry"], usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: CylinderBufferGeometryDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: 'ngt-cylinder-buffer-geometry,ngt-cylinder-geometry',
                        exportAs: 'ngtCylinderBufferGeometry',
                        providers: [
                            {
                                provide: core.ThreeBufferGeometry,
                                useExisting: CylinderBufferGeometryDirective,
                            },
                        ],
                    }]
            }], propDecorators: { args: [{
                    type: i0.Input
                }] } });

    // GENERATED
    var ThreeCylinderBufferGeometryModule = /** @class */ (function () {
        function ThreeCylinderBufferGeometryModule() {
        }
        return ThreeCylinderBufferGeometryModule;
    }());
    ThreeCylinderBufferGeometryModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeCylinderBufferGeometryModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    ThreeCylinderBufferGeometryModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeCylinderBufferGeometryModule, declarations: [CylinderBufferGeometryDirective], exports: [CylinderBufferGeometryDirective] });
    ThreeCylinderBufferGeometryModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeCylinderBufferGeometryModule });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeCylinderBufferGeometryModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        declarations: [CylinderBufferGeometryDirective],
                        exports: [CylinderBufferGeometryDirective],
                    }]
            }] });

    // GENERATED

    var DodecahedronBufferGeometryDirective = /** @class */ (function (_super) {
        __extends(DodecahedronBufferGeometryDirective, _super);
        function DodecahedronBufferGeometryDirective() {
            var _this = _super.apply(this, __spreadArray([], __read(arguments))) || this;
            _this.geometryType = three.DodecahedronBufferGeometry;
            return _this;
        }
        Object.defineProperty(DodecahedronBufferGeometryDirective.prototype, "args", {
            set: function (v) {
                this.extraArgs = v;
            },
            enumerable: false,
            configurable: true
        });
        return DodecahedronBufferGeometryDirective;
    }(core.ThreeBufferGeometry));
    DodecahedronBufferGeometryDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: DodecahedronBufferGeometryDirective, deps: null, target: i0__namespace.ɵɵFactoryTarget.Directive });
    DodecahedronBufferGeometryDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.10", type: DodecahedronBufferGeometryDirective, selector: "ngt-dodecahedron-buffer-geometry,ngt-dodecahedron-geometry", inputs: { args: "args" }, providers: [
            {
                provide: core.ThreeBufferGeometry,
                useExisting: DodecahedronBufferGeometryDirective,
            },
        ], exportAs: ["ngtDodecahedronBufferGeometry"], usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: DodecahedronBufferGeometryDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: 'ngt-dodecahedron-buffer-geometry,ngt-dodecahedron-geometry',
                        exportAs: 'ngtDodecahedronBufferGeometry',
                        providers: [
                            {
                                provide: core.ThreeBufferGeometry,
                                useExisting: DodecahedronBufferGeometryDirective,
                            },
                        ],
                    }]
            }], propDecorators: { args: [{
                    type: i0.Input
                }] } });

    // GENERATED
    var ThreeDodecahedronBufferGeometryModule = /** @class */ (function () {
        function ThreeDodecahedronBufferGeometryModule() {
        }
        return ThreeDodecahedronBufferGeometryModule;
    }());
    ThreeDodecahedronBufferGeometryModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeDodecahedronBufferGeometryModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    ThreeDodecahedronBufferGeometryModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeDodecahedronBufferGeometryModule, declarations: [DodecahedronBufferGeometryDirective], exports: [DodecahedronBufferGeometryDirective] });
    ThreeDodecahedronBufferGeometryModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeDodecahedronBufferGeometryModule });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeDodecahedronBufferGeometryModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        declarations: [DodecahedronBufferGeometryDirective],
                        exports: [DodecahedronBufferGeometryDirective],
                    }]
            }] });

    // GENERATED

    var ExtrudeBufferGeometryDirective = /** @class */ (function (_super) {
        __extends(ExtrudeBufferGeometryDirective, _super);
        function ExtrudeBufferGeometryDirective() {
            var _this = _super.apply(this, __spreadArray([], __read(arguments))) || this;
            _this.geometryType = three.ExtrudeBufferGeometry;
            return _this;
        }
        Object.defineProperty(ExtrudeBufferGeometryDirective.prototype, "args", {
            set: function (v) {
                this.extraArgs = v;
            },
            enumerable: false,
            configurable: true
        });
        return ExtrudeBufferGeometryDirective;
    }(core.ThreeBufferGeometry));
    ExtrudeBufferGeometryDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ExtrudeBufferGeometryDirective, deps: null, target: i0__namespace.ɵɵFactoryTarget.Directive });
    ExtrudeBufferGeometryDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.10", type: ExtrudeBufferGeometryDirective, selector: "ngt-extrude-buffer-geometry,ngt-extrude-geometry", inputs: { args: "args" }, providers: [
            {
                provide: core.ThreeBufferGeometry,
                useExisting: ExtrudeBufferGeometryDirective,
            },
        ], exportAs: ["ngtExtrudeBufferGeometry"], usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ExtrudeBufferGeometryDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: 'ngt-extrude-buffer-geometry,ngt-extrude-geometry',
                        exportAs: 'ngtExtrudeBufferGeometry',
                        providers: [
                            {
                                provide: core.ThreeBufferGeometry,
                                useExisting: ExtrudeBufferGeometryDirective,
                            },
                        ],
                    }]
            }], propDecorators: { args: [{
                    type: i0.Input
                }] } });

    // GENERATED
    var ThreeExtrudeBufferGeometryModule = /** @class */ (function () {
        function ThreeExtrudeBufferGeometryModule() {
        }
        return ThreeExtrudeBufferGeometryModule;
    }());
    ThreeExtrudeBufferGeometryModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeExtrudeBufferGeometryModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    ThreeExtrudeBufferGeometryModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeExtrudeBufferGeometryModule, declarations: [ExtrudeBufferGeometryDirective], exports: [ExtrudeBufferGeometryDirective] });
    ThreeExtrudeBufferGeometryModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeExtrudeBufferGeometryModule });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeExtrudeBufferGeometryModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        declarations: [ExtrudeBufferGeometryDirective],
                        exports: [ExtrudeBufferGeometryDirective],
                    }]
            }] });

    // GENERATED

    var IcosahedronBufferGeometryDirective = /** @class */ (function (_super) {
        __extends(IcosahedronBufferGeometryDirective, _super);
        function IcosahedronBufferGeometryDirective() {
            var _this = _super.apply(this, __spreadArray([], __read(arguments))) || this;
            _this.geometryType = three.IcosahedronBufferGeometry;
            return _this;
        }
        Object.defineProperty(IcosahedronBufferGeometryDirective.prototype, "args", {
            set: function (v) {
                this.extraArgs = v;
            },
            enumerable: false,
            configurable: true
        });
        return IcosahedronBufferGeometryDirective;
    }(core.ThreeBufferGeometry));
    IcosahedronBufferGeometryDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: IcosahedronBufferGeometryDirective, deps: null, target: i0__namespace.ɵɵFactoryTarget.Directive });
    IcosahedronBufferGeometryDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.10", type: IcosahedronBufferGeometryDirective, selector: "ngt-icosahedron-buffer-geometry,ngt-icosahedron-geometry", inputs: { args: "args" }, providers: [
            {
                provide: core.ThreeBufferGeometry,
                useExisting: IcosahedronBufferGeometryDirective,
            },
        ], exportAs: ["ngtIcosahedronBufferGeometry"], usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: IcosahedronBufferGeometryDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: 'ngt-icosahedron-buffer-geometry,ngt-icosahedron-geometry',
                        exportAs: 'ngtIcosahedronBufferGeometry',
                        providers: [
                            {
                                provide: core.ThreeBufferGeometry,
                                useExisting: IcosahedronBufferGeometryDirective,
                            },
                        ],
                    }]
            }], propDecorators: { args: [{
                    type: i0.Input
                }] } });

    // GENERATED
    var ThreeIcosahedronBufferGeometryModule = /** @class */ (function () {
        function ThreeIcosahedronBufferGeometryModule() {
        }
        return ThreeIcosahedronBufferGeometryModule;
    }());
    ThreeIcosahedronBufferGeometryModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeIcosahedronBufferGeometryModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    ThreeIcosahedronBufferGeometryModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeIcosahedronBufferGeometryModule, declarations: [IcosahedronBufferGeometryDirective], exports: [IcosahedronBufferGeometryDirective] });
    ThreeIcosahedronBufferGeometryModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeIcosahedronBufferGeometryModule });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeIcosahedronBufferGeometryModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        declarations: [IcosahedronBufferGeometryDirective],
                        exports: [IcosahedronBufferGeometryDirective],
                    }]
            }] });

    // GENERATED

    var LatheBufferGeometryDirective = /** @class */ (function (_super) {
        __extends(LatheBufferGeometryDirective, _super);
        function LatheBufferGeometryDirective() {
            var _this = _super.apply(this, __spreadArray([], __read(arguments))) || this;
            _this.geometryType = three.LatheBufferGeometry;
            return _this;
        }
        Object.defineProperty(LatheBufferGeometryDirective.prototype, "args", {
            set: function (v) {
                this.extraArgs = v;
            },
            enumerable: false,
            configurable: true
        });
        return LatheBufferGeometryDirective;
    }(core.ThreeBufferGeometry));
    LatheBufferGeometryDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: LatheBufferGeometryDirective, deps: null, target: i0__namespace.ɵɵFactoryTarget.Directive });
    LatheBufferGeometryDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.10", type: LatheBufferGeometryDirective, selector: "ngt-lathe-buffer-geometry,ngt-lathe-geometry", inputs: { args: "args" }, providers: [
            {
                provide: core.ThreeBufferGeometry,
                useExisting: LatheBufferGeometryDirective,
            },
        ], exportAs: ["ngtLatheBufferGeometry"], usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: LatheBufferGeometryDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: 'ngt-lathe-buffer-geometry,ngt-lathe-geometry',
                        exportAs: 'ngtLatheBufferGeometry',
                        providers: [
                            {
                                provide: core.ThreeBufferGeometry,
                                useExisting: LatheBufferGeometryDirective,
                            },
                        ],
                    }]
            }], propDecorators: { args: [{
                    type: i0.Input
                }] } });

    // GENERATED
    var ThreeLatheBufferGeometryModule = /** @class */ (function () {
        function ThreeLatheBufferGeometryModule() {
        }
        return ThreeLatheBufferGeometryModule;
    }());
    ThreeLatheBufferGeometryModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeLatheBufferGeometryModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    ThreeLatheBufferGeometryModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeLatheBufferGeometryModule, declarations: [LatheBufferGeometryDirective], exports: [LatheBufferGeometryDirective] });
    ThreeLatheBufferGeometryModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeLatheBufferGeometryModule });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeLatheBufferGeometryModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        declarations: [LatheBufferGeometryDirective],
                        exports: [LatheBufferGeometryDirective],
                    }]
            }] });

    // GENERATED

    var OctahedronBufferGeometryDirective = /** @class */ (function (_super) {
        __extends(OctahedronBufferGeometryDirective, _super);
        function OctahedronBufferGeometryDirective() {
            var _this = _super.apply(this, __spreadArray([], __read(arguments))) || this;
            _this.geometryType = three.OctahedronBufferGeometry;
            return _this;
        }
        Object.defineProperty(OctahedronBufferGeometryDirective.prototype, "args", {
            set: function (v) {
                this.extraArgs = v;
            },
            enumerable: false,
            configurable: true
        });
        return OctahedronBufferGeometryDirective;
    }(core.ThreeBufferGeometry));
    OctahedronBufferGeometryDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: OctahedronBufferGeometryDirective, deps: null, target: i0__namespace.ɵɵFactoryTarget.Directive });
    OctahedronBufferGeometryDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.10", type: OctahedronBufferGeometryDirective, selector: "ngt-octahedron-buffer-geometry,ngt-octahedron-geometry", inputs: { args: "args" }, providers: [
            {
                provide: core.ThreeBufferGeometry,
                useExisting: OctahedronBufferGeometryDirective,
            },
        ], exportAs: ["ngtOctahedronBufferGeometry"], usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: OctahedronBufferGeometryDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: 'ngt-octahedron-buffer-geometry,ngt-octahedron-geometry',
                        exportAs: 'ngtOctahedronBufferGeometry',
                        providers: [
                            {
                                provide: core.ThreeBufferGeometry,
                                useExisting: OctahedronBufferGeometryDirective,
                            },
                        ],
                    }]
            }], propDecorators: { args: [{
                    type: i0.Input
                }] } });

    // GENERATED
    var ThreeOctahedronBufferGeometryModule = /** @class */ (function () {
        function ThreeOctahedronBufferGeometryModule() {
        }
        return ThreeOctahedronBufferGeometryModule;
    }());
    ThreeOctahedronBufferGeometryModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeOctahedronBufferGeometryModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    ThreeOctahedronBufferGeometryModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeOctahedronBufferGeometryModule, declarations: [OctahedronBufferGeometryDirective], exports: [OctahedronBufferGeometryDirective] });
    ThreeOctahedronBufferGeometryModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeOctahedronBufferGeometryModule });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeOctahedronBufferGeometryModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        declarations: [OctahedronBufferGeometryDirective],
                        exports: [OctahedronBufferGeometryDirective],
                    }]
            }] });

    // GENERATED

    var PlaneBufferGeometryDirective = /** @class */ (function (_super) {
        __extends(PlaneBufferGeometryDirective, _super);
        function PlaneBufferGeometryDirective() {
            var _this = _super.apply(this, __spreadArray([], __read(arguments))) || this;
            _this.geometryType = three.PlaneBufferGeometry;
            return _this;
        }
        Object.defineProperty(PlaneBufferGeometryDirective.prototype, "args", {
            set: function (v) {
                this.extraArgs = v;
            },
            enumerable: false,
            configurable: true
        });
        return PlaneBufferGeometryDirective;
    }(core.ThreeBufferGeometry));
    PlaneBufferGeometryDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: PlaneBufferGeometryDirective, deps: null, target: i0__namespace.ɵɵFactoryTarget.Directive });
    PlaneBufferGeometryDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.10", type: PlaneBufferGeometryDirective, selector: "ngt-plane-buffer-geometry,ngt-plane-geometry", inputs: { args: "args" }, providers: [
            {
                provide: core.ThreeBufferGeometry,
                useExisting: PlaneBufferGeometryDirective,
            },
        ], exportAs: ["ngtPlaneBufferGeometry"], usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: PlaneBufferGeometryDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: 'ngt-plane-buffer-geometry,ngt-plane-geometry',
                        exportAs: 'ngtPlaneBufferGeometry',
                        providers: [
                            {
                                provide: core.ThreeBufferGeometry,
                                useExisting: PlaneBufferGeometryDirective,
                            },
                        ],
                    }]
            }], propDecorators: { args: [{
                    type: i0.Input
                }] } });

    // GENERATED
    var ThreePlaneBufferGeometryModule = /** @class */ (function () {
        function ThreePlaneBufferGeometryModule() {
        }
        return ThreePlaneBufferGeometryModule;
    }());
    ThreePlaneBufferGeometryModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreePlaneBufferGeometryModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    ThreePlaneBufferGeometryModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreePlaneBufferGeometryModule, declarations: [PlaneBufferGeometryDirective], exports: [PlaneBufferGeometryDirective] });
    ThreePlaneBufferGeometryModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreePlaneBufferGeometryModule });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreePlaneBufferGeometryModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        declarations: [PlaneBufferGeometryDirective],
                        exports: [PlaneBufferGeometryDirective],
                    }]
            }] });

    // GENERATED

    var PolyhedronBufferGeometryDirective = /** @class */ (function (_super) {
        __extends(PolyhedronBufferGeometryDirective, _super);
        function PolyhedronBufferGeometryDirective() {
            var _this = _super.apply(this, __spreadArray([], __read(arguments))) || this;
            _this.geometryType = three.PolyhedronBufferGeometry;
            return _this;
        }
        Object.defineProperty(PolyhedronBufferGeometryDirective.prototype, "args", {
            set: function (v) {
                this.extraArgs = v;
            },
            enumerable: false,
            configurable: true
        });
        return PolyhedronBufferGeometryDirective;
    }(core.ThreeBufferGeometry));
    PolyhedronBufferGeometryDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: PolyhedronBufferGeometryDirective, deps: null, target: i0__namespace.ɵɵFactoryTarget.Directive });
    PolyhedronBufferGeometryDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.10", type: PolyhedronBufferGeometryDirective, selector: "ngt-polyhedron-buffer-geometry,ngt-polyhedron-geometry", inputs: { args: "args" }, providers: [
            {
                provide: core.ThreeBufferGeometry,
                useExisting: PolyhedronBufferGeometryDirective,
            },
        ], exportAs: ["ngtPolyhedronBufferGeometry"], usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: PolyhedronBufferGeometryDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: 'ngt-polyhedron-buffer-geometry,ngt-polyhedron-geometry',
                        exportAs: 'ngtPolyhedronBufferGeometry',
                        providers: [
                            {
                                provide: core.ThreeBufferGeometry,
                                useExisting: PolyhedronBufferGeometryDirective,
                            },
                        ],
                    }]
            }], propDecorators: { args: [{
                    type: i0.Input
                }] } });

    // GENERATED
    var ThreePolyhedronBufferGeometryModule = /** @class */ (function () {
        function ThreePolyhedronBufferGeometryModule() {
        }
        return ThreePolyhedronBufferGeometryModule;
    }());
    ThreePolyhedronBufferGeometryModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreePolyhedronBufferGeometryModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    ThreePolyhedronBufferGeometryModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreePolyhedronBufferGeometryModule, declarations: [PolyhedronBufferGeometryDirective], exports: [PolyhedronBufferGeometryDirective] });
    ThreePolyhedronBufferGeometryModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreePolyhedronBufferGeometryModule });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreePolyhedronBufferGeometryModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        declarations: [PolyhedronBufferGeometryDirective],
                        exports: [PolyhedronBufferGeometryDirective],
                    }]
            }] });

    // GENERATED

    var RingBufferGeometryDirective = /** @class */ (function (_super) {
        __extends(RingBufferGeometryDirective, _super);
        function RingBufferGeometryDirective() {
            var _this = _super.apply(this, __spreadArray([], __read(arguments))) || this;
            _this.geometryType = three.RingBufferGeometry;
            return _this;
        }
        Object.defineProperty(RingBufferGeometryDirective.prototype, "args", {
            set: function (v) {
                this.extraArgs = v;
            },
            enumerable: false,
            configurable: true
        });
        return RingBufferGeometryDirective;
    }(core.ThreeBufferGeometry));
    RingBufferGeometryDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: RingBufferGeometryDirective, deps: null, target: i0__namespace.ɵɵFactoryTarget.Directive });
    RingBufferGeometryDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.10", type: RingBufferGeometryDirective, selector: "ngt-ring-buffer-geometry,ngt-ring-geometry", inputs: { args: "args" }, providers: [
            {
                provide: core.ThreeBufferGeometry,
                useExisting: RingBufferGeometryDirective,
            },
        ], exportAs: ["ngtRingBufferGeometry"], usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: RingBufferGeometryDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: 'ngt-ring-buffer-geometry,ngt-ring-geometry',
                        exportAs: 'ngtRingBufferGeometry',
                        providers: [
                            {
                                provide: core.ThreeBufferGeometry,
                                useExisting: RingBufferGeometryDirective,
                            },
                        ],
                    }]
            }], propDecorators: { args: [{
                    type: i0.Input
                }] } });

    // GENERATED
    var ThreeRingBufferGeometryModule = /** @class */ (function () {
        function ThreeRingBufferGeometryModule() {
        }
        return ThreeRingBufferGeometryModule;
    }());
    ThreeRingBufferGeometryModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeRingBufferGeometryModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    ThreeRingBufferGeometryModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeRingBufferGeometryModule, declarations: [RingBufferGeometryDirective], exports: [RingBufferGeometryDirective] });
    ThreeRingBufferGeometryModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeRingBufferGeometryModule });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeRingBufferGeometryModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        declarations: [RingBufferGeometryDirective],
                        exports: [RingBufferGeometryDirective],
                    }]
            }] });

    // GENERATED

    var ShapeBufferGeometryDirective = /** @class */ (function (_super) {
        __extends(ShapeBufferGeometryDirective, _super);
        function ShapeBufferGeometryDirective() {
            var _this = _super.apply(this, __spreadArray([], __read(arguments))) || this;
            _this.geometryType = three.ShapeBufferGeometry;
            return _this;
        }
        Object.defineProperty(ShapeBufferGeometryDirective.prototype, "args", {
            set: function (v) {
                this.extraArgs = v;
            },
            enumerable: false,
            configurable: true
        });
        return ShapeBufferGeometryDirective;
    }(core.ThreeBufferGeometry));
    ShapeBufferGeometryDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ShapeBufferGeometryDirective, deps: null, target: i0__namespace.ɵɵFactoryTarget.Directive });
    ShapeBufferGeometryDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.10", type: ShapeBufferGeometryDirective, selector: "ngt-shape-buffer-geometry,ngt-shape-geometry", inputs: { args: "args" }, providers: [
            {
                provide: core.ThreeBufferGeometry,
                useExisting: ShapeBufferGeometryDirective,
            },
        ], exportAs: ["ngtShapeBufferGeometry"], usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ShapeBufferGeometryDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: 'ngt-shape-buffer-geometry,ngt-shape-geometry',
                        exportAs: 'ngtShapeBufferGeometry',
                        providers: [
                            {
                                provide: core.ThreeBufferGeometry,
                                useExisting: ShapeBufferGeometryDirective,
                            },
                        ],
                    }]
            }], propDecorators: { args: [{
                    type: i0.Input
                }] } });

    // GENERATED
    var ThreeShapeBufferGeometryModule = /** @class */ (function () {
        function ThreeShapeBufferGeometryModule() {
        }
        return ThreeShapeBufferGeometryModule;
    }());
    ThreeShapeBufferGeometryModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeShapeBufferGeometryModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    ThreeShapeBufferGeometryModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeShapeBufferGeometryModule, declarations: [ShapeBufferGeometryDirective], exports: [ShapeBufferGeometryDirective] });
    ThreeShapeBufferGeometryModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeShapeBufferGeometryModule });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeShapeBufferGeometryModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        declarations: [ShapeBufferGeometryDirective],
                        exports: [ShapeBufferGeometryDirective],
                    }]
            }] });

    // GENERATED

    var SphereBufferGeometryDirective = /** @class */ (function (_super) {
        __extends(SphereBufferGeometryDirective, _super);
        function SphereBufferGeometryDirective() {
            var _this = _super.apply(this, __spreadArray([], __read(arguments))) || this;
            _this.geometryType = three.SphereBufferGeometry;
            return _this;
        }
        Object.defineProperty(SphereBufferGeometryDirective.prototype, "args", {
            set: function (v) {
                this.extraArgs = v;
            },
            enumerable: false,
            configurable: true
        });
        return SphereBufferGeometryDirective;
    }(core.ThreeBufferGeometry));
    SphereBufferGeometryDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: SphereBufferGeometryDirective, deps: null, target: i0__namespace.ɵɵFactoryTarget.Directive });
    SphereBufferGeometryDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.10", type: SphereBufferGeometryDirective, selector: "ngt-sphere-buffer-geometry,ngt-sphere-geometry", inputs: { args: "args" }, providers: [
            {
                provide: core.ThreeBufferGeometry,
                useExisting: SphereBufferGeometryDirective,
            },
        ], exportAs: ["ngtSphereBufferGeometry"], usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: SphereBufferGeometryDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: 'ngt-sphere-buffer-geometry,ngt-sphere-geometry',
                        exportAs: 'ngtSphereBufferGeometry',
                        providers: [
                            {
                                provide: core.ThreeBufferGeometry,
                                useExisting: SphereBufferGeometryDirective,
                            },
                        ],
                    }]
            }], propDecorators: { args: [{
                    type: i0.Input
                }] } });

    // GENERATED
    var ThreeSphereBufferGeometryModule = /** @class */ (function () {
        function ThreeSphereBufferGeometryModule() {
        }
        return ThreeSphereBufferGeometryModule;
    }());
    ThreeSphereBufferGeometryModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeSphereBufferGeometryModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    ThreeSphereBufferGeometryModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeSphereBufferGeometryModule, declarations: [SphereBufferGeometryDirective], exports: [SphereBufferGeometryDirective] });
    ThreeSphereBufferGeometryModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeSphereBufferGeometryModule });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeSphereBufferGeometryModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        declarations: [SphereBufferGeometryDirective],
                        exports: [SphereBufferGeometryDirective],
                    }]
            }] });

    // GENERATED

    var TetrahedronBufferGeometryDirective = /** @class */ (function (_super) {
        __extends(TetrahedronBufferGeometryDirective, _super);
        function TetrahedronBufferGeometryDirective() {
            var _this = _super.apply(this, __spreadArray([], __read(arguments))) || this;
            _this.geometryType = three.TetrahedronBufferGeometry;
            return _this;
        }
        Object.defineProperty(TetrahedronBufferGeometryDirective.prototype, "args", {
            set: function (v) {
                this.extraArgs = v;
            },
            enumerable: false,
            configurable: true
        });
        return TetrahedronBufferGeometryDirective;
    }(core.ThreeBufferGeometry));
    TetrahedronBufferGeometryDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: TetrahedronBufferGeometryDirective, deps: null, target: i0__namespace.ɵɵFactoryTarget.Directive });
    TetrahedronBufferGeometryDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.10", type: TetrahedronBufferGeometryDirective, selector: "ngt-tetrahedron-buffer-geometry,ngt-tetrahedron-geometry", inputs: { args: "args" }, providers: [
            {
                provide: core.ThreeBufferGeometry,
                useExisting: TetrahedronBufferGeometryDirective,
            },
        ], exportAs: ["ngtTetrahedronBufferGeometry"], usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: TetrahedronBufferGeometryDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: 'ngt-tetrahedron-buffer-geometry,ngt-tetrahedron-geometry',
                        exportAs: 'ngtTetrahedronBufferGeometry',
                        providers: [
                            {
                                provide: core.ThreeBufferGeometry,
                                useExisting: TetrahedronBufferGeometryDirective,
                            },
                        ],
                    }]
            }], propDecorators: { args: [{
                    type: i0.Input
                }] } });

    // GENERATED
    var ThreeTetrahedronBufferGeometryModule = /** @class */ (function () {
        function ThreeTetrahedronBufferGeometryModule() {
        }
        return ThreeTetrahedronBufferGeometryModule;
    }());
    ThreeTetrahedronBufferGeometryModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeTetrahedronBufferGeometryModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    ThreeTetrahedronBufferGeometryModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeTetrahedronBufferGeometryModule, declarations: [TetrahedronBufferGeometryDirective], exports: [TetrahedronBufferGeometryDirective] });
    ThreeTetrahedronBufferGeometryModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeTetrahedronBufferGeometryModule });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeTetrahedronBufferGeometryModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        declarations: [TetrahedronBufferGeometryDirective],
                        exports: [TetrahedronBufferGeometryDirective],
                    }]
            }] });

    // GENERATED

    var TorusBufferGeometryDirective = /** @class */ (function (_super) {
        __extends(TorusBufferGeometryDirective, _super);
        function TorusBufferGeometryDirective() {
            var _this = _super.apply(this, __spreadArray([], __read(arguments))) || this;
            _this.geometryType = three.TorusBufferGeometry;
            return _this;
        }
        Object.defineProperty(TorusBufferGeometryDirective.prototype, "args", {
            set: function (v) {
                this.extraArgs = v;
            },
            enumerable: false,
            configurable: true
        });
        return TorusBufferGeometryDirective;
    }(core.ThreeBufferGeometry));
    TorusBufferGeometryDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: TorusBufferGeometryDirective, deps: null, target: i0__namespace.ɵɵFactoryTarget.Directive });
    TorusBufferGeometryDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.10", type: TorusBufferGeometryDirective, selector: "ngt-torus-buffer-geometry,ngt-torus-geometry", inputs: { args: "args" }, providers: [
            {
                provide: core.ThreeBufferGeometry,
                useExisting: TorusBufferGeometryDirective,
            },
        ], exportAs: ["ngtTorusBufferGeometry"], usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: TorusBufferGeometryDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: 'ngt-torus-buffer-geometry,ngt-torus-geometry',
                        exportAs: 'ngtTorusBufferGeometry',
                        providers: [
                            {
                                provide: core.ThreeBufferGeometry,
                                useExisting: TorusBufferGeometryDirective,
                            },
                        ],
                    }]
            }], propDecorators: { args: [{
                    type: i0.Input
                }] } });

    // GENERATED
    var ThreeTorusBufferGeometryModule = /** @class */ (function () {
        function ThreeTorusBufferGeometryModule() {
        }
        return ThreeTorusBufferGeometryModule;
    }());
    ThreeTorusBufferGeometryModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeTorusBufferGeometryModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    ThreeTorusBufferGeometryModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeTorusBufferGeometryModule, declarations: [TorusBufferGeometryDirective], exports: [TorusBufferGeometryDirective] });
    ThreeTorusBufferGeometryModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeTorusBufferGeometryModule });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeTorusBufferGeometryModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        declarations: [TorusBufferGeometryDirective],
                        exports: [TorusBufferGeometryDirective],
                    }]
            }] });

    // GENERATED

    var TorusKnotBufferGeometryDirective = /** @class */ (function (_super) {
        __extends(TorusKnotBufferGeometryDirective, _super);
        function TorusKnotBufferGeometryDirective() {
            var _this = _super.apply(this, __spreadArray([], __read(arguments))) || this;
            _this.geometryType = three.TorusKnotBufferGeometry;
            return _this;
        }
        Object.defineProperty(TorusKnotBufferGeometryDirective.prototype, "args", {
            set: function (v) {
                this.extraArgs = v;
            },
            enumerable: false,
            configurable: true
        });
        return TorusKnotBufferGeometryDirective;
    }(core.ThreeBufferGeometry));
    TorusKnotBufferGeometryDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: TorusKnotBufferGeometryDirective, deps: null, target: i0__namespace.ɵɵFactoryTarget.Directive });
    TorusKnotBufferGeometryDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.10", type: TorusKnotBufferGeometryDirective, selector: "ngt-torus-knot-buffer-geometry,ngt-torus-knot-geometry", inputs: { args: "args" }, providers: [
            {
                provide: core.ThreeBufferGeometry,
                useExisting: TorusKnotBufferGeometryDirective,
            },
        ], exportAs: ["ngtTorusKnotBufferGeometry"], usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: TorusKnotBufferGeometryDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: 'ngt-torus-knot-buffer-geometry,ngt-torus-knot-geometry',
                        exportAs: 'ngtTorusKnotBufferGeometry',
                        providers: [
                            {
                                provide: core.ThreeBufferGeometry,
                                useExisting: TorusKnotBufferGeometryDirective,
                            },
                        ],
                    }]
            }], propDecorators: { args: [{
                    type: i0.Input
                }] } });

    // GENERATED
    var ThreeTorusKnotBufferGeometryModule = /** @class */ (function () {
        function ThreeTorusKnotBufferGeometryModule() {
        }
        return ThreeTorusKnotBufferGeometryModule;
    }());
    ThreeTorusKnotBufferGeometryModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeTorusKnotBufferGeometryModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    ThreeTorusKnotBufferGeometryModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeTorusKnotBufferGeometryModule, declarations: [TorusKnotBufferGeometryDirective], exports: [TorusKnotBufferGeometryDirective] });
    ThreeTorusKnotBufferGeometryModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeTorusKnotBufferGeometryModule });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeTorusKnotBufferGeometryModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        declarations: [TorusKnotBufferGeometryDirective],
                        exports: [TorusKnotBufferGeometryDirective],
                    }]
            }] });

    // GENERATED

    var TubeBufferGeometryDirective = /** @class */ (function (_super) {
        __extends(TubeBufferGeometryDirective, _super);
        function TubeBufferGeometryDirective() {
            var _this = _super.apply(this, __spreadArray([], __read(arguments))) || this;
            _this.geometryType = three.TubeBufferGeometry;
            return _this;
        }
        Object.defineProperty(TubeBufferGeometryDirective.prototype, "args", {
            set: function (v) {
                this.extraArgs = v;
            },
            enumerable: false,
            configurable: true
        });
        return TubeBufferGeometryDirective;
    }(core.ThreeBufferGeometry));
    TubeBufferGeometryDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: TubeBufferGeometryDirective, deps: null, target: i0__namespace.ɵɵFactoryTarget.Directive });
    TubeBufferGeometryDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.10", type: TubeBufferGeometryDirective, selector: "ngt-tube-buffer-geometry,ngt-tube-geometry", inputs: { args: "args" }, providers: [
            {
                provide: core.ThreeBufferGeometry,
                useExisting: TubeBufferGeometryDirective,
            },
        ], exportAs: ["ngtTubeBufferGeometry"], usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: TubeBufferGeometryDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: 'ngt-tube-buffer-geometry,ngt-tube-geometry',
                        exportAs: 'ngtTubeBufferGeometry',
                        providers: [
                            {
                                provide: core.ThreeBufferGeometry,
                                useExisting: TubeBufferGeometryDirective,
                            },
                        ],
                    }]
            }], propDecorators: { args: [{
                    type: i0.Input
                }] } });

    // GENERATED
    var ThreeTubeBufferGeometryModule = /** @class */ (function () {
        function ThreeTubeBufferGeometryModule() {
        }
        return ThreeTubeBufferGeometryModule;
    }());
    ThreeTubeBufferGeometryModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeTubeBufferGeometryModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    ThreeTubeBufferGeometryModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeTubeBufferGeometryModule, declarations: [TubeBufferGeometryDirective], exports: [TubeBufferGeometryDirective] });
    ThreeTubeBufferGeometryModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeTubeBufferGeometryModule });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeTubeBufferGeometryModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        declarations: [TubeBufferGeometryDirective],
                        exports: [TubeBufferGeometryDirective],
                    }]
            }] });

    // GENERATED

    var WireframeGeometryDirective = /** @class */ (function (_super) {
        __extends(WireframeGeometryDirective, _super);
        function WireframeGeometryDirective() {
            var _this = _super.apply(this, __spreadArray([], __read(arguments))) || this;
            _this.geometryType = three.WireframeGeometry;
            return _this;
        }
        Object.defineProperty(WireframeGeometryDirective.prototype, "args", {
            set: function (v) {
                this.extraArgs = v;
            },
            enumerable: false,
            configurable: true
        });
        return WireframeGeometryDirective;
    }(core.ThreeBufferGeometry));
    WireframeGeometryDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: WireframeGeometryDirective, deps: null, target: i0__namespace.ɵɵFactoryTarget.Directive });
    WireframeGeometryDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.10", type: WireframeGeometryDirective, selector: "ngt-wireframe-geometry", inputs: { args: "args" }, providers: [
            {
                provide: core.ThreeBufferGeometry,
                useExisting: WireframeGeometryDirective,
            },
        ], exportAs: ["ngtWireframeGeometry"], usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: WireframeGeometryDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: 'ngt-wireframe-geometry',
                        exportAs: 'ngtWireframeGeometry',
                        providers: [
                            {
                                provide: core.ThreeBufferGeometry,
                                useExisting: WireframeGeometryDirective,
                            },
                        ],
                    }]
            }], propDecorators: { args: [{
                    type: i0.Input
                }] } });

    // GENERATED
    var ThreeWireframeGeometryModule = /** @class */ (function () {
        function ThreeWireframeGeometryModule() {
        }
        return ThreeWireframeGeometryModule;
    }());
    ThreeWireframeGeometryModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeWireframeGeometryModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    ThreeWireframeGeometryModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeWireframeGeometryModule, declarations: [WireframeGeometryDirective], exports: [WireframeGeometryDirective] });
    ThreeWireframeGeometryModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeWireframeGeometryModule });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeWireframeGeometryModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        declarations: [WireframeGeometryDirective],
                        exports: [WireframeGeometryDirective],
                    }]
            }] });

    // GENERATED

    var EdgesGeometryDirective = /** @class */ (function (_super) {
        __extends(EdgesGeometryDirective, _super);
        function EdgesGeometryDirective() {
            var _this = _super.apply(this, __spreadArray([], __read(arguments))) || this;
            _this.geometryType = three.EdgesGeometry;
            return _this;
        }
        Object.defineProperty(EdgesGeometryDirective.prototype, "args", {
            set: function (v) {
                this.extraArgs = v;
            },
            enumerable: false,
            configurable: true
        });
        return EdgesGeometryDirective;
    }(core.ThreeBufferGeometry));
    EdgesGeometryDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: EdgesGeometryDirective, deps: null, target: i0__namespace.ɵɵFactoryTarget.Directive });
    EdgesGeometryDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.10", type: EdgesGeometryDirective, selector: "ngt-edges-geometry", inputs: { args: "args" }, providers: [
            {
                provide: core.ThreeBufferGeometry,
                useExisting: EdgesGeometryDirective,
            },
        ], exportAs: ["ngtEdgesGeometry"], usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: EdgesGeometryDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: 'ngt-edges-geometry',
                        exportAs: 'ngtEdgesGeometry',
                        providers: [
                            {
                                provide: core.ThreeBufferGeometry,
                                useExisting: EdgesGeometryDirective,
                            },
                        ],
                    }]
            }], propDecorators: { args: [{
                    type: i0.Input
                }] } });

    // GENERATED
    var ThreeEdgesGeometryModule = /** @class */ (function () {
        function ThreeEdgesGeometryModule() {
        }
        return ThreeEdgesGeometryModule;
    }());
    ThreeEdgesGeometryModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeEdgesGeometryModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    ThreeEdgesGeometryModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeEdgesGeometryModule, declarations: [EdgesGeometryDirective], exports: [EdgesGeometryDirective] });
    ThreeEdgesGeometryModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeEdgesGeometryModule });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeEdgesGeometryModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        declarations: [EdgesGeometryDirective],
                        exports: [EdgesGeometryDirective],
                    }]
            }] });

    // GENERATED

    var BoxLineGeometryDirective = /** @class */ (function (_super) {
        __extends(BoxLineGeometryDirective, _super);
        function BoxLineGeometryDirective() {
            var _this = _super.apply(this, __spreadArray([], __read(arguments))) || this;
            _this.geometryType = BoxLineGeometry.BoxLineGeometry;
            return _this;
        }
        Object.defineProperty(BoxLineGeometryDirective.prototype, "args", {
            set: function (v) {
                this.extraArgs = v;
            },
            enumerable: false,
            configurable: true
        });
        return BoxLineGeometryDirective;
    }(core.ThreeBufferGeometry));
    BoxLineGeometryDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: BoxLineGeometryDirective, deps: null, target: i0__namespace.ɵɵFactoryTarget.Directive });
    BoxLineGeometryDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.10", type: BoxLineGeometryDirective, selector: "ngt-box-line-geometry", inputs: { args: "args" }, providers: [
            {
                provide: core.ThreeBufferGeometry,
                useExisting: BoxLineGeometryDirective,
            },
        ], exportAs: ["ngtBoxLineGeometry"], usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: BoxLineGeometryDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: 'ngt-box-line-geometry',
                        exportAs: 'ngtBoxLineGeometry',
                        providers: [
                            {
                                provide: core.ThreeBufferGeometry,
                                useExisting: BoxLineGeometryDirective,
                            },
                        ],
                    }]
            }], propDecorators: { args: [{
                    type: i0.Input
                }] } });

    // GENERATED
    var ThreeBoxLineGeometryModule = /** @class */ (function () {
        function ThreeBoxLineGeometryModule() {
        }
        return ThreeBoxLineGeometryModule;
    }());
    ThreeBoxLineGeometryModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeBoxLineGeometryModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    ThreeBoxLineGeometryModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeBoxLineGeometryModule, declarations: [BoxLineGeometryDirective], exports: [BoxLineGeometryDirective] });
    ThreeBoxLineGeometryModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeBoxLineGeometryModule });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeBoxLineGeometryModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        declarations: [BoxLineGeometryDirective],
                        exports: [BoxLineGeometryDirective],
                    }]
            }] });

    // GENERATED

    var ConvexGeometryDirective = /** @class */ (function (_super) {
        __extends(ConvexGeometryDirective, _super);
        function ConvexGeometryDirective() {
            var _this = _super.apply(this, __spreadArray([], __read(arguments))) || this;
            _this.geometryType = ConvexGeometry.ConvexGeometry;
            return _this;
        }
        Object.defineProperty(ConvexGeometryDirective.prototype, "args", {
            set: function (v) {
                this.extraArgs = v;
            },
            enumerable: false,
            configurable: true
        });
        return ConvexGeometryDirective;
    }(core.ThreeBufferGeometry));
    ConvexGeometryDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ConvexGeometryDirective, deps: null, target: i0__namespace.ɵɵFactoryTarget.Directive });
    ConvexGeometryDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.10", type: ConvexGeometryDirective, selector: "ngt-convex-geometry", inputs: { args: "args" }, providers: [
            {
                provide: core.ThreeBufferGeometry,
                useExisting: ConvexGeometryDirective,
            },
        ], exportAs: ["ngtConvexGeometry"], usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ConvexGeometryDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: 'ngt-convex-geometry',
                        exportAs: 'ngtConvexGeometry',
                        providers: [
                            {
                                provide: core.ThreeBufferGeometry,
                                useExisting: ConvexGeometryDirective,
                            },
                        ],
                    }]
            }], propDecorators: { args: [{
                    type: i0.Input
                }] } });

    // GENERATED
    var ThreeConvexGeometryModule = /** @class */ (function () {
        function ThreeConvexGeometryModule() {
        }
        return ThreeConvexGeometryModule;
    }());
    ThreeConvexGeometryModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeConvexGeometryModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    ThreeConvexGeometryModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeConvexGeometryModule, declarations: [ConvexGeometryDirective], exports: [ConvexGeometryDirective] });
    ThreeConvexGeometryModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeConvexGeometryModule });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeConvexGeometryModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        declarations: [ConvexGeometryDirective],
                        exports: [ConvexGeometryDirective],
                    }]
            }] });

    // GENERATED

    var DecalGeometryDirective = /** @class */ (function (_super) {
        __extends(DecalGeometryDirective, _super);
        function DecalGeometryDirective() {
            var _this = _super.apply(this, __spreadArray([], __read(arguments))) || this;
            _this.geometryType = DecalGeometry.DecalGeometry;
            return _this;
        }
        Object.defineProperty(DecalGeometryDirective.prototype, "args", {
            set: function (v) {
                this.extraArgs = v;
            },
            enumerable: false,
            configurable: true
        });
        return DecalGeometryDirective;
    }(core.ThreeBufferGeometry));
    DecalGeometryDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: DecalGeometryDirective, deps: null, target: i0__namespace.ɵɵFactoryTarget.Directive });
    DecalGeometryDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.10", type: DecalGeometryDirective, selector: "ngt-decal-geometry", inputs: { args: "args" }, providers: [
            {
                provide: core.ThreeBufferGeometry,
                useExisting: DecalGeometryDirective,
            },
        ], exportAs: ["ngtDecalGeometry"], usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: DecalGeometryDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: 'ngt-decal-geometry',
                        exportAs: 'ngtDecalGeometry',
                        providers: [
                            {
                                provide: core.ThreeBufferGeometry,
                                useExisting: DecalGeometryDirective,
                            },
                        ],
                    }]
            }], propDecorators: { args: [{
                    type: i0.Input
                }] } });

    // GENERATED
    var ThreeDecalGeometryModule = /** @class */ (function () {
        function ThreeDecalGeometryModule() {
        }
        return ThreeDecalGeometryModule;
    }());
    ThreeDecalGeometryModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeDecalGeometryModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    ThreeDecalGeometryModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeDecalGeometryModule, declarations: [DecalGeometryDirective], exports: [DecalGeometryDirective] });
    ThreeDecalGeometryModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeDecalGeometryModule });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeDecalGeometryModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        declarations: [DecalGeometryDirective],
                        exports: [DecalGeometryDirective],
                    }]
            }] });

    // GENERATED

    var ParametricGeometryDirective = /** @class */ (function (_super) {
        __extends(ParametricGeometryDirective, _super);
        function ParametricGeometryDirective() {
            var _this = _super.apply(this, __spreadArray([], __read(arguments))) || this;
            _this.geometryType = ParametricGeometry.ParametricGeometry;
            return _this;
        }
        Object.defineProperty(ParametricGeometryDirective.prototype, "args", {
            set: function (v) {
                this.extraArgs = v;
            },
            enumerable: false,
            configurable: true
        });
        return ParametricGeometryDirective;
    }(core.ThreeBufferGeometry));
    ParametricGeometryDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ParametricGeometryDirective, deps: null, target: i0__namespace.ɵɵFactoryTarget.Directive });
    ParametricGeometryDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.10", type: ParametricGeometryDirective, selector: "ngt-parametric-geometry", inputs: { args: "args" }, providers: [
            {
                provide: core.ThreeBufferGeometry,
                useExisting: ParametricGeometryDirective,
            },
        ], exportAs: ["ngtParametricGeometry"], usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ParametricGeometryDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: 'ngt-parametric-geometry',
                        exportAs: 'ngtParametricGeometry',
                        providers: [
                            {
                                provide: core.ThreeBufferGeometry,
                                useExisting: ParametricGeometryDirective,
                            },
                        ],
                    }]
            }], propDecorators: { args: [{
                    type: i0.Input
                }] } });

    // GENERATED
    var ThreeParametricGeometryModule = /** @class */ (function () {
        function ThreeParametricGeometryModule() {
        }
        return ThreeParametricGeometryModule;
    }());
    ThreeParametricGeometryModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeParametricGeometryModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    ThreeParametricGeometryModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeParametricGeometryModule, declarations: [ParametricGeometryDirective], exports: [ParametricGeometryDirective] });
    ThreeParametricGeometryModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeParametricGeometryModule });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeParametricGeometryModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        declarations: [ParametricGeometryDirective],
                        exports: [ParametricGeometryDirective],
                    }]
            }] });

    // GENERATED

    var RoundedBoxGeometryDirective = /** @class */ (function (_super) {
        __extends(RoundedBoxGeometryDirective, _super);
        function RoundedBoxGeometryDirective() {
            var _this = _super.apply(this, __spreadArray([], __read(arguments))) || this;
            _this.geometryType = RoundedBoxGeometry.RoundedBoxGeometry;
            return _this;
        }
        Object.defineProperty(RoundedBoxGeometryDirective.prototype, "args", {
            set: function (v) {
                this.extraArgs = v;
            },
            enumerable: false,
            configurable: true
        });
        return RoundedBoxGeometryDirective;
    }(core.ThreeBufferGeometry));
    RoundedBoxGeometryDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: RoundedBoxGeometryDirective, deps: null, target: i0__namespace.ɵɵFactoryTarget.Directive });
    RoundedBoxGeometryDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.10", type: RoundedBoxGeometryDirective, selector: "ngt-rounded-box-geometry", inputs: { args: "args" }, providers: [
            {
                provide: core.ThreeBufferGeometry,
                useExisting: RoundedBoxGeometryDirective,
            },
        ], exportAs: ["ngtRoundedBoxGeometry"], usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: RoundedBoxGeometryDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: 'ngt-rounded-box-geometry',
                        exportAs: 'ngtRoundedBoxGeometry',
                        providers: [
                            {
                                provide: core.ThreeBufferGeometry,
                                useExisting: RoundedBoxGeometryDirective,
                            },
                        ],
                    }]
            }], propDecorators: { args: [{
                    type: i0.Input
                }] } });

    // GENERATED
    var ThreeRoundedBoxGeometryModule = /** @class */ (function () {
        function ThreeRoundedBoxGeometryModule() {
        }
        return ThreeRoundedBoxGeometryModule;
    }());
    ThreeRoundedBoxGeometryModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeRoundedBoxGeometryModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    ThreeRoundedBoxGeometryModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeRoundedBoxGeometryModule, declarations: [RoundedBoxGeometryDirective], exports: [RoundedBoxGeometryDirective] });
    ThreeRoundedBoxGeometryModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeRoundedBoxGeometryModule });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeRoundedBoxGeometryModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        declarations: [RoundedBoxGeometryDirective],
                        exports: [RoundedBoxGeometryDirective],
                    }]
            }] });

    // GENERATED

    var TeapotGeometryDirective = /** @class */ (function (_super) {
        __extends(TeapotGeometryDirective, _super);
        function TeapotGeometryDirective() {
            var _this = _super.apply(this, __spreadArray([], __read(arguments))) || this;
            _this.geometryType = TeapotGeometry.TeapotGeometry;
            return _this;
        }
        Object.defineProperty(TeapotGeometryDirective.prototype, "args", {
            set: function (v) {
                this.extraArgs = v;
            },
            enumerable: false,
            configurable: true
        });
        return TeapotGeometryDirective;
    }(core.ThreeBufferGeometry));
    TeapotGeometryDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: TeapotGeometryDirective, deps: null, target: i0__namespace.ɵɵFactoryTarget.Directive });
    TeapotGeometryDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.10", type: TeapotGeometryDirective, selector: "ngt-teapot-geometry", inputs: { args: "args" }, providers: [
            {
                provide: core.ThreeBufferGeometry,
                useExisting: TeapotGeometryDirective,
            },
        ], exportAs: ["ngtTeapotGeometry"], usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: TeapotGeometryDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: 'ngt-teapot-geometry',
                        exportAs: 'ngtTeapotGeometry',
                        providers: [
                            {
                                provide: core.ThreeBufferGeometry,
                                useExisting: TeapotGeometryDirective,
                            },
                        ],
                    }]
            }], propDecorators: { args: [{
                    type: i0.Input
                }] } });

    // GENERATED
    var ThreeTeapotGeometryModule = /** @class */ (function () {
        function ThreeTeapotGeometryModule() {
        }
        return ThreeTeapotGeometryModule;
    }());
    ThreeTeapotGeometryModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeTeapotGeometryModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    ThreeTeapotGeometryModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeTeapotGeometryModule, declarations: [TeapotGeometryDirective], exports: [TeapotGeometryDirective] });
    ThreeTeapotGeometryModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeTeapotGeometryModule });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeTeapotGeometryModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        declarations: [TeapotGeometryDirective],
                        exports: [TeapotGeometryDirective],
                    }]
            }] });

    // GENERATED

    var TextGeometryDirective = /** @class */ (function (_super) {
        __extends(TextGeometryDirective, _super);
        function TextGeometryDirective() {
            var _this = _super.apply(this, __spreadArray([], __read(arguments))) || this;
            _this.geometryType = TextGeometry.TextGeometry;
            return _this;
        }
        Object.defineProperty(TextGeometryDirective.prototype, "args", {
            set: function (v) {
                this.extraArgs = v;
            },
            enumerable: false,
            configurable: true
        });
        return TextGeometryDirective;
    }(core.ThreeBufferGeometry));
    TextGeometryDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: TextGeometryDirective, deps: null, target: i0__namespace.ɵɵFactoryTarget.Directive });
    TextGeometryDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.10", type: TextGeometryDirective, selector: "ngt-text-geometry", inputs: { args: "args" }, providers: [
            {
                provide: core.ThreeBufferGeometry,
                useExisting: TextGeometryDirective,
            },
        ], exportAs: ["ngtTextGeometry"], usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: TextGeometryDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: 'ngt-text-geometry',
                        exportAs: 'ngtTextGeometry',
                        providers: [
                            {
                                provide: core.ThreeBufferGeometry,
                                useExisting: TextGeometryDirective,
                            },
                        ],
                    }]
            }], propDecorators: { args: [{
                    type: i0.Input
                }] } });

    // GENERATED
    var ThreeTextGeometryModule = /** @class */ (function () {
        function ThreeTextGeometryModule() {
        }
        return ThreeTextGeometryModule;
    }());
    ThreeTextGeometryModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeTextGeometryModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    ThreeTextGeometryModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeTextGeometryModule, declarations: [TextGeometryDirective], exports: [TextGeometryDirective] });
    ThreeTextGeometryModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeTextGeometryModule });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0__namespace, type: ThreeTextGeometryModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        declarations: [TextGeometryDirective],
                        exports: [TextGeometryDirective],
                    }]
            }] });

    // GENERATED

    // GENERATED

    /**
     * Generated bundle index. Do not edit.
     */

    exports.BoxBufferGeometryDirective = BoxBufferGeometryDirective;
    exports.BoxLineGeometryDirective = BoxLineGeometryDirective;
    exports.BufferGeometryDirective = BufferGeometryDirective;
    exports.CircleBufferGeometryDirective = CircleBufferGeometryDirective;
    exports.ConeBufferGeometryDirective = ConeBufferGeometryDirective;
    exports.ConvexGeometryDirective = ConvexGeometryDirective;
    exports.CylinderBufferGeometryDirective = CylinderBufferGeometryDirective;
    exports.DecalGeometryDirective = DecalGeometryDirective;
    exports.DodecahedronBufferGeometryDirective = DodecahedronBufferGeometryDirective;
    exports.EdgesGeometryDirective = EdgesGeometryDirective;
    exports.ExtrudeBufferGeometryDirective = ExtrudeBufferGeometryDirective;
    exports.IcosahedronBufferGeometryDirective = IcosahedronBufferGeometryDirective;
    exports.InstancedBufferGeometryDirective = InstancedBufferGeometryDirective;
    exports.LatheBufferGeometryDirective = LatheBufferGeometryDirective;
    exports.OctahedronBufferGeometryDirective = OctahedronBufferGeometryDirective;
    exports.ParametricGeometryDirective = ParametricGeometryDirective;
    exports.PlaneBufferGeometryDirective = PlaneBufferGeometryDirective;
    exports.PolyhedronBufferGeometryDirective = PolyhedronBufferGeometryDirective;
    exports.RingBufferGeometryDirective = RingBufferGeometryDirective;
    exports.RoundedBoxGeometryDirective = RoundedBoxGeometryDirective;
    exports.ShapeBufferGeometryDirective = ShapeBufferGeometryDirective;
    exports.SphereBufferGeometryDirective = SphereBufferGeometryDirective;
    exports.TeapotGeometryDirective = TeapotGeometryDirective;
    exports.TetrahedronBufferGeometryDirective = TetrahedronBufferGeometryDirective;
    exports.TextGeometryDirective = TextGeometryDirective;
    exports.ThreeBoxBufferGeometryModule = ThreeBoxBufferGeometryModule;
    exports.ThreeBoxLineGeometryModule = ThreeBoxLineGeometryModule;
    exports.ThreeBufferGeometryModule = ThreeBufferGeometryModule;
    exports.ThreeCircleBufferGeometryModule = ThreeCircleBufferGeometryModule;
    exports.ThreeConeBufferGeometryModule = ThreeConeBufferGeometryModule;
    exports.ThreeConvexGeometryModule = ThreeConvexGeometryModule;
    exports.ThreeCylinderBufferGeometryModule = ThreeCylinderBufferGeometryModule;
    exports.ThreeDecalGeometryModule = ThreeDecalGeometryModule;
    exports.ThreeDodecahedronBufferGeometryModule = ThreeDodecahedronBufferGeometryModule;
    exports.ThreeEdgesGeometryModule = ThreeEdgesGeometryModule;
    exports.ThreeExtrudeBufferGeometryModule = ThreeExtrudeBufferGeometryModule;
    exports.ThreeIcosahedronBufferGeometryModule = ThreeIcosahedronBufferGeometryModule;
    exports.ThreeInstancedBufferGeometryModule = ThreeInstancedBufferGeometryModule;
    exports.ThreeLatheBufferGeometryModule = ThreeLatheBufferGeometryModule;
    exports.ThreeOctahedronBufferGeometryModule = ThreeOctahedronBufferGeometryModule;
    exports.ThreeParametricGeometryModule = ThreeParametricGeometryModule;
    exports.ThreePlaneBufferGeometryModule = ThreePlaneBufferGeometryModule;
    exports.ThreePolyhedronBufferGeometryModule = ThreePolyhedronBufferGeometryModule;
    exports.ThreeRingBufferGeometryModule = ThreeRingBufferGeometryModule;
    exports.ThreeRoundedBoxGeometryModule = ThreeRoundedBoxGeometryModule;
    exports.ThreeShapeBufferGeometryModule = ThreeShapeBufferGeometryModule;
    exports.ThreeSphereBufferGeometryModule = ThreeSphereBufferGeometryModule;
    exports.ThreeTeapotGeometryModule = ThreeTeapotGeometryModule;
    exports.ThreeTetrahedronBufferGeometryModule = ThreeTetrahedronBufferGeometryModule;
    exports.ThreeTextGeometryModule = ThreeTextGeometryModule;
    exports.ThreeTorusBufferGeometryModule = ThreeTorusBufferGeometryModule;
    exports.ThreeTorusKnotBufferGeometryModule = ThreeTorusKnotBufferGeometryModule;
    exports.ThreeTubeBufferGeometryModule = ThreeTubeBufferGeometryModule;
    exports.ThreeWireframeGeometryModule = ThreeWireframeGeometryModule;
    exports.TorusBufferGeometryDirective = TorusBufferGeometryDirective;
    exports.TorusKnotBufferGeometryDirective = TorusKnotBufferGeometryDirective;
    exports.TubeBufferGeometryDirective = TubeBufferGeometryDirective;
    exports.WireframeGeometryDirective = WireframeGeometryDirective;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=angular-three-core-geometries.umd.js.map
